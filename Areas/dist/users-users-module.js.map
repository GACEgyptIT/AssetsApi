{"version":3,"sources":["./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/components/index.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/components/ngx-select-dropdown-component/index.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/components/ngx-select-dropdown-component/ngx-select-dropdown.component.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/index.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/ngx-select-dropdown.module.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/pipes/filter-by.pipe.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/pipes/index.js","./node_modules/ngx-select-dropdown/__ivy_ngcc__/dist/pipes/limit-to.pipe.js","./src/app/users/lock/lock.component.html","./src/app/users/login/login.component.html","./src/app/users/privilege/privilege.component.html","./src/app/users/register/register.component.html","./src/app/users/role/role.component.html","./src/app/users/unauthorised/unauthorised.component.html","./src/app/users/user/user.component.html","./src/app/users/useractionlog/useractionlog.component.html","./src/app/shared/services/customvalidators.service.ts","./src/app/users/lock/lock.component.css","./src/app/users/lock/lock.component.ts","./src/app/users/login/login.component.css","./src/app/users/login/login.component.ts","./src/app/users/privilege/privilege.component.css","./src/app/users/privilege/privilege.component.ts","./src/app/users/privilege/service/privilege.service.ts","./src/app/users/register/register.component.css","./src/app/users/register/register.component.ts","./src/app/users/register/service/register.service.ts","./src/app/users/role/role.component.css","./src/app/users/role/role.component.ts","./src/app/users/role/services/role.service.ts","./src/app/users/unauthorised/unauthorised.component.css","./src/app/users/unauthorised/unauthorised.component.ts","./src/app/users/user/user.component.css","./src/app/users/user/user.component.ts","./src/app/users/useractionlog/service/useractionlog.service.ts","./src/app/users/useractionlog/useractionlog.component.css","./src/app/users/useractionlog/useractionlog.component.ts","./src/app/users/users-routing.ts","./src/app/users/users.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAgD;AAChD,iC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAgD;AAChD,iC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACD;AACW;AACC;;AAErD;AACA,yBAAyB,SAAS,gBAAgB;AAClD,gEAAgE;AAChE,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,0FAA0F,CAAC,2DAAoB,QAAQ,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE,iHAAiH,CAAC,2DAAoB,QAAQ,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AACxb,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,uDAAgB;AACpB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,+DAA+D;AAC/D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,sFAAsF,CAAC,2DAAoB,QAAQ,mCAAmC,wBAAwB,gBAAgB,2DAAoB,IAAI,qDAAqD,EAAE;AAClS,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,+DAA+D;AAC/D,IAAI,uDAAgB;AACpB,CAAC;AACD,+DAA+D;AAC/D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,sFAAsF,CAAC,2DAAoB,QAAQ,+BAA+B,wBAAwB,gBAAgB,2DAAoB,IAAI,+CAA+C,EAAE;AACxR,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,+DAA+D;AAC/D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,oDAAa;AACjB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB,OAAO,yDAAkB;AAC5E,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,yBAAyB,SAAS,kBAAkB;AACpD,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AAC+D;AAC+E;AAC3F;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qEAAe;AACnoBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,uDAAuD,EAAE;AACpI;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"users-users-module.js","sourcesContent":["export * from './ngx-select-dropdown-component';\n//# sourceMappingURL=index.js.map","export * from './ngx-select-dropdown.component';\n//# sourceMappingURL=index.js.map","import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '../../pipes/limit-to.pipe';\nimport * as ɵngcc4 from '../../pipes/filter-by.pipe';\n\nvar _c0 = [\"availableOption\"];\nvar _c1 = function (a0) { return { \"active\": a0 }; };\nfunction SelectDropDownComponent_div_5_div_1_Template(rf, ctx) { if (rf & 1) {\n    var _r505 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 12);\n    ɵngcc0.ɵɵlistener(\"input\", function SelectDropDownComponent_div_5_div_1_Template_input_input_1_listener() { ɵngcc0.ɵɵrestoreView(_r505); var ctx_r504 = ɵngcc0.ɵɵnextContext(2); return ctx_r504.searchTextChanged(); })(\"ngModelChange\", function SelectDropDownComponent_div_5_div_1_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r505); var ctx_r506 = ɵngcc0.ɵɵnextContext(2); return ctx_r506.searchText = $event; });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"label\", 13);\n    ɵngcc0.ɵɵelement(3, \"span\", 14);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r499 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"direction\", ctx_r499.config.inputDirection);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r499.searchText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r499.searchText));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r499.config.searchPlaceholder, \"\");\n} }\nfunction SelectDropDownComponent_div_5_li_3_Template(rf, ctx) { if (rf & 1) {\n    var _r510 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function SelectDropDownComponent_div_5_li_3_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r510); var selected_r507 = ctx.$implicit; var i_r508 = ctx.index; var ctx_r509 = ɵngcc0.ɵɵnextContext(2); return ctx_r509.deselectItem(selected_r507, i_r508); });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 16);\n    ɵngcc0.ɵɵtext(2, \"x\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var selected_r507 = ctx.$implicit;\n    var ctx_r500 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", selected_r507[ctx_r500.config.displayKey] || selected_r507, \"\");\n} }\nfunction SelectDropDownComponent_div_5_hr_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"hr\");\n} }\nfunction SelectDropDownComponent_div_5_li_6_Template(rf, ctx) { if (rf & 1) {\n    var _r515 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17, 18);\n    ɵngcc0.ɵɵlistener(\"click\", function SelectDropDownComponent_div_5_li_6_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r515); var item_r511 = ctx.$implicit; var i_r512 = ctx.index; var ctx_r514 = ɵngcc0.ɵɵnextContext(2); return ctx_r514.selectItem(item_r511, i_r512); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var item_r511 = ctx.$implicit;\n    var i_r512 = ctx.index;\n    var ctx_r502 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r502.focusedItemIndex == i_r512));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r511[ctx_r502.config.displayKey] || item_r511, \"\");\n} }\nfunction SelectDropDownComponent_div_5_li_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r503 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r503.config.noResultsFound);\n} }\nfunction SelectDropDownComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, SelectDropDownComponent_div_5_div_1_Template, 5, 7, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 6);\n    ɵngcc0.ɵɵtemplate(3, SelectDropDownComponent_div_5_li_3_Template, 5, 1, \"li\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, SelectDropDownComponent_div_5_hr_4_Template, 1, 0, \"hr\", 8);\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 9);\n    ɵngcc0.ɵɵtemplate(6, SelectDropDownComponent_div_5_li_6_Template, 3, 4, \"li\", 10);\n    ɵngcc0.ɵɵpipe(7, \"limitTo\");\n    ɵngcc0.ɵɵpipe(8, \"filterBy\");\n    ɵngcc0.ɵɵtemplate(9, SelectDropDownComponent_div_5_li_9_Template, 2, 1, \"li\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r498 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r498.config.height);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r498.config.search);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r498.selectedItems);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r498.selectedItems.length > 0 && ctx_r498.availableItems.length > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind2(7, 7, ɵngcc0.ɵɵpipeBind3(8, 10, ctx_r498.availableItems, ctx_r498.searchText, ctx_r498.config.searchOnKey), ctx_r498.config.limitTo));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r498.showNotFound);\n} }\nvar _c2 = function (a0) { return { \"disabled\": a0 }; };\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ArrayFilterPipe } from \"./../../pipes/filter-by.pipe\";\nimport { Component, Input, EventEmitter, Output, HostListener, ViewChildren, ElementRef, ChangeDetectorRef, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nvar SelectDropDownComponent = /** @class */ (function () {\n    function SelectDropDownComponent(cdref, _elementRef) {\n        this.cdref = cdref;\n        this._elementRef = _elementRef;\n        /**\n         * Get the required inputs\n         */\n        this.options = [];\n        /**\n         * configuration options\n         */\n        this.config = {};\n        /**\n         * Whether multiple selection or single selection allowed\n         */\n        this.multiple = false;\n        /**\n         * change event when value changes to provide user to handle things in change event\n         */\n        this.change = new EventEmitter();\n        /**\n         * The search text change event emitter emitted when user type in the search input\n         */\n        this.searchChange = new EventEmitter();\n        /**\n         * Event emitted when dropdown is open.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Event emitted when dropdown is open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Toogle the dropdown list\n         */\n        this.toggleDropdown = false;\n        /**\n         * Available items for selection\n         */\n        this.availableItems = [];\n        /**\n         * Selected Items\n         */\n        this.selectedItems = [];\n        /**\n         * Selection text to be Displayed\n         */\n        this.selectedDisplayText = \"Select\";\n        /**\n         * variable to track if clicked inside or outside of component\n         */\n        this.clickedInside = false;\n        /**\n         * variable to track keypress event inside and outsid of component\n         */\n        this.insideKeyPress = false;\n        /**\n         * variable to track the focused item whenuser uses arrow keys to select item\n         */\n        this.focusedItemIndex = null;\n        /**\n         * element to show not found text when not itmes match the search\n         */\n        this.showNotFound = false;\n        this.onChange = function () {\n            // empty\n        };\n        this.onTouched = function () {\n            // empty\n        };\n        this.multiple = false;\n    }\n    Object.defineProperty(SelectDropDownComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (val) {\n            this._value = val;\n            this.onChange(val);\n            this.onTouched();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * click listener for host inside this component i.e\n     * if many instances are there, this detects if clicked inside\n     * this instance\n     */\n    SelectDropDownComponent.prototype.clickInsideComponent = function () {\n        this.clickedInside = true;\n    };\n    /**\n     * click handler on documnent to hide the open dropdown if clicked outside\n     */\n    SelectDropDownComponent.prototype.clickOutsideComponent = function () {\n        if (!this.clickedInside) {\n            this.toggleDropdown = false;\n            this.resetArrowKeyActiveElement();\n            // clear searh on close\n            this.searchText = null;\n            this.close.emit();\n        }\n        this.clickedInside = false;\n    };\n    /**\n     * click handler on documnent to hide the open dropdown if clicked outside\n     */\n    SelectDropDownComponent.prototype.KeyPressOutsideComponent = function () {\n        if (!this.insideKeyPress) {\n            this.toggleDropdown = false;\n            this.resetArrowKeyActiveElement();\n        }\n        this.insideKeyPress = false;\n    };\n    /**\n     * Event handler for key up and down event and enter press for selecting element\n     * @param event\n     */\n    SelectDropDownComponent.prototype.handleKeyboardEvent = function ($event) {\n        this.insideKeyPress = true;\n        if ($event.keyCode === 27 || this.disabled) {\n            this.toggleDropdown = false;\n            this.insideKeyPress = false;\n            return;\n        }\n        var avaOpts = this.availableOptions.toArray();\n        if (avaOpts.length === 0 && !this.toggleDropdown) {\n            this.toggleDropdown = true;\n        }\n        // Arrow Down\n        if ($event.keyCode === 40 && avaOpts.length > 0) {\n            this.onArrowKeyDown();\n            /* istanbul ignore else */\n            if (this.focusedItemIndex >= avaOpts.length) {\n                this.focusedItemIndex = 0;\n            }\n            avaOpts[this.focusedItemIndex].nativeElement.focus();\n            $event.preventDefault();\n        }\n        // Arrow Up\n        if ($event.keyCode === 38 && avaOpts.length) {\n            this.onArrowKeyUp();\n            /* istanbul ignore else */\n            if (this.focusedItemIndex >= avaOpts.length) {\n                this.focusedItemIndex = avaOpts.length - 1;\n            }\n            avaOpts[this.focusedItemIndex].nativeElement.focus();\n            $event.preventDefault();\n        }\n        // Enter\n        if ($event.keyCode === 13 && this.focusedItemIndex !== null) {\n            var filteredItems = new ArrayFilterPipe().transform(this.availableItems, this.searchText, this.config.searchOnKey);\n            this.selectItem(filteredItems[this.focusedItemIndex], this.availableItems.indexOf(filteredItems[this.focusedItemIndex]));\n            return false;\n        }\n    };\n    /**\n     * Component onInit\n     */\n    SelectDropDownComponent.prototype.ngOnInit = function () {\n        if (typeof this.options !== \"undefined\" && Array.isArray(this.options)) {\n            this.availableItems = this.options.sort(this.config.customComparator).slice();\n            this.initDropdownValuesAndOptions();\n        }\n    };\n    /**\n     * after view init to subscribe to available option changes\n     */\n    SelectDropDownComponent.prototype.ngAfterViewInit = function () {\n        this.availableOptions.changes.subscribe(this.setNotFoundState.bind(this));\n    };\n    SelectDropDownComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    SelectDropDownComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    SelectDropDownComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    SelectDropDownComponent.prototype.writeValue = function (value, internal) {\n        if (value) {\n            if (Array.isArray(value)) {\n                if (this.multiple) {\n                    this.value = value;\n                }\n                else {\n                    this.value = value[0];\n                }\n            }\n            else {\n                this.value = value;\n            }\n            /* istanbul ignore else */\n            if (this.selectedItems.length === 0) {\n                if (Array.isArray(value)) {\n                    this.selectedItems = value;\n                }\n                else {\n                    this.selectedItems.push(value);\n                }\n                this.initDropdownValuesAndOptions();\n            }\n        }\n        else {\n            // this.value = [];\n            /* istanbul ignore else */\n            if (!internal) {\n                this.reset();\n            }\n        }\n        /* istanbul ignore else */\n        if (!internal) {\n            this.reset();\n        }\n    };\n    SelectDropDownComponent.prototype.reset = function () {\n        this.selectedItems = [];\n        this.availableItems = this.options.sort(this.config.customComparator).slice();\n        this.initDropdownValuesAndOptions();\n    };\n    /**\n     * function sets whether to show items not found text or not\n     */\n    SelectDropDownComponent.prototype.setNotFoundState = function () {\n        if (this.availableOptions.length === 0) {\n            this.showNotFound = true;\n        }\n        else {\n            this.showNotFound = false;\n        }\n        this.cdref.detectChanges();\n    };\n    /**\n     * Component onchage i.e when any of the input properties change\n     * @param changes\n     */\n    SelectDropDownComponent.prototype.ngOnChanges = function (changes) {\n        this.selectedItems = [];\n        // this.searchText = null;\n        this.options = this.options || [];\n        /* istanbul ignore else */\n        if (changes.options) {\n            this.availableItems = this.options.sort(this.config.customComparator).slice();\n            this.config.limitTo = this.options.length;\n        }\n        /* istanbul ignore else */\n        if (changes.value) {\n            /* istanbul ignore else */\n            if (JSON.stringify(changes.value.currentValue) === JSON.stringify([])) {\n                this.availableItems = this.options.sort(this.config.customComparator).slice();\n            }\n        }\n        this.initDropdownValuesAndOptions();\n    };\n    /**\n     * Deselct a selected items\n     * @param item:  item to be deselected\n     * @param index:  index of the item\n     */\n    SelectDropDownComponent.prototype.deselectItem = function (item, index) {\n        var _this = this;\n        this.selectedItems.forEach(function (element, i) {\n            /* istanbul ignore else */\n            if (item === element) {\n                _this.selectedItems.splice(i, 1);\n            }\n        });\n        var sortedItems = this.availableItems.slice();\n        /* istanbul ignore else */\n        if (!this.availableItems.includes(item)) {\n            this.availableItems.push(item);\n            sortedItems = this.availableItems.sort(this.config.customComparator);\n        }\n        this.selectedItems = this.selectedItems.slice();\n        this.availableItems = sortedItems.slice();\n        this.valueChanged();\n        this.resetArrowKeyActiveElement();\n    };\n    /**\n     * Select an item\n     * @param item:  item to be selected\n     * @param index:  index of the item\n     */\n    SelectDropDownComponent.prototype.selectItem = function (item, index) {\n        var _this = this;\n        /* istanbul ignore else */\n        if (!this.multiple) {\n            /* istanbul ignore else */\n            if (this.selectedItems.length > 0) {\n                this.availableItems.push(this.selectedItems[0]);\n            }\n            this.selectedItems = [];\n            this.toggleDropdown = false;\n        }\n        this.availableItems.forEach(function (element, i) {\n            /* istanbul ignore else */\n            if (item === element) {\n                _this.selectedItems.push(item);\n                _this.availableItems.splice(i, 1);\n            }\n        });\n        /* istanbul ignore else */\n        if (this.config.clearOnSelection) {\n            this.searchText = null;\n        }\n        this.selectedItems = this.selectedItems.slice();\n        this.availableItems = this.availableItems.slice();\n        this.selectedItems.sort(this.config.customComparator);\n        this.availableItems.sort(this.config.customComparator);\n        // this.searchText = null;\n        this.valueChanged();\n        this.resetArrowKeyActiveElement();\n    };\n    /**\n     * When selected items changes trigger the chaange back to parent\n     */\n    SelectDropDownComponent.prototype.valueChanged = function () {\n        this.writeValue(this.selectedItems, true);\n        // this.valueChange.emit(this.value);\n        this.change.emit({ value: this.value });\n        this.setSelectedDisplayText();\n    };\n    /**\n     * Toggle the dropdownlist on/off\n     */\n    SelectDropDownComponent.prototype.toggleSelectDropdown = function () {\n        this.toggleDropdown = !this.toggleDropdown;\n        if (this.toggleDropdown) {\n            this.open.emit();\n        }\n        else {\n            this.searchText = null;\n            this.close.emit();\n        }\n        this.resetArrowKeyActiveElement();\n    };\n    /**\n     * The change handler for search text\n     */\n    SelectDropDownComponent.prototype.searchTextChanged = function () {\n        this.searchChange.emit(this.searchText);\n    };\n    /**\n     * initialize the config and other properties\n     */\n    SelectDropDownComponent.prototype.initDropdownValuesAndOptions = function () {\n        var _this = this;\n        var config = {\n            displayKey: \"description\",\n            height: \"auto\",\n            search: false,\n            placeholder: \"Select\",\n            searchPlaceholder: \"Search...\",\n            limitTo: this.options.length,\n            customComparator: undefined,\n            noResultsFound: \"No results found!\",\n            moreText: \"more\",\n            searchOnKey: null,\n            clearOnSelection: false,\n            inputDirection: 'ltr'\n        };\n        /* istanbul ignore else */\n        if (this.config === \"undefined\" || Object.keys(this.config).length === 0) {\n            this.config = __assign({}, config);\n        }\n        for (var _i = 0, _a = Object.keys(config); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.config[key] = this.config[key] ? this.config[key] : config[key];\n        }\n        this.config = __assign({}, this.config);\n        // Adding placeholder in config as default param\n        this.selectedDisplayText = this.config[\"placeholder\"];\n        /* istanbul ignore else */\n        if (this.value !== \"\" && typeof this.value !== \"undefined\") {\n            if (Array.isArray(this.value)) {\n                this.selectedItems = this.value;\n            }\n            else {\n                this.selectedItems[0] = this.value;\n            }\n            this.selectedItems.forEach(function (item) {\n                var ind = _this.availableItems.findIndex(function (aItem) { return JSON.stringify(item) === JSON.stringify(aItem); });\n                if (ind !== -1) {\n                    _this.availableItems.splice(ind, 1);\n                }\n            });\n        }\n        this.setSelectedDisplayText();\n    };\n    /**\n     * set the text to be displayed\n     */\n    SelectDropDownComponent.prototype.setSelectedDisplayText = function () {\n        var text = this.selectedItems[0];\n        /* istanbul ignore else */\n        if (typeof this.selectedItems[0] === \"object\") {\n            text = this.selectedItems[0][this.config.displayKey];\n        }\n        if (this.multiple && this.selectedItems.length > 0) {\n            this.selectedDisplayText =\n                this.selectedItems.length === 1\n                    ? text\n                    : text +\n                        (\" + \" + (this.selectedItems.length - 1) + \" \" + this.config.moreText);\n        }\n        else {\n            this.selectedDisplayText =\n                this.selectedItems.length === 0 ? this.config.placeholder : text;\n        }\n    };\n    /**\n     * Event handler for arrow key up event thats focuses on a item\n     */\n    SelectDropDownComponent.prototype.onArrowKeyUp = function () {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === 0) {\n            this.focusedItemIndex = this.availableItems.length - 1;\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.onArrowKey()) {\n            this.focusedItemIndex--;\n        }\n    };\n    /**\n     * Event handler for arrow key down event thats focuses on a item\n     */\n    SelectDropDownComponent.prototype.onArrowKeyDown = function () {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === this.availableItems.length - 1) {\n            this.focusedItemIndex = 0;\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.onArrowKey()) {\n            this.focusedItemIndex++;\n        }\n    };\n    SelectDropDownComponent.prototype.onArrowKey = function () {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === null) {\n            this.focusedItemIndex = 0;\n            return false;\n        }\n        return true;\n    };\n    /**\n     * will reset the element that is marked active using arrow keys\n     */\n    SelectDropDownComponent.prototype.resetArrowKeyActiveElement = function () {\n        this.focusedItemIndex = null;\n    };\n    /** @nocollapse */\n    SelectDropDownComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef, },\n        { type: ElementRef, },\n    ]; };\n    SelectDropDownComponent.propDecorators = {\n        '_value': [{ type: Input },],\n        'options': [{ type: Input },],\n        'config': [{ type: Input },],\n        'multiple': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'change': [{ type: Output },],\n        'searchChange': [{ type: Output },],\n        'open': [{ type: Output },],\n        'close': [{ type: Output },],\n        'availableOptions': [{ type: ViewChildren, args: [\"availableOption\",] },],\n        'clickInsideComponent': [{ type: HostListener, args: [\"click\",] },],\n        'clickOutsideComponent': [{ type: HostListener, args: [\"document:click\",] },],\n        'KeyPressOutsideComponent': [{ type: HostListener, args: [\"document:keydown\",] },],\n        'handleKeyboardEvent': [{ type: HostListener, args: [\"keydown\", [\"$event\"],] },],\n    };\nSelectDropDownComponent.ɵfac = function SelectDropDownComponent_Factory(t) { return new (t || SelectDropDownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectDropDownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SelectDropDownComponent, selectors: [[\"ngx-select-dropdown\"]], viewQuery: function SelectDropDownComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.availableOptions = _t);\n    } }, hostBindings: function SelectDropDownComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function SelectDropDownComponent_click_HostBindingHandler() { return ctx.clickInsideComponent(); })(\"click\", function SelectDropDownComponent_click_HostBindingHandler() { return ctx.clickOutsideComponent(); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function SelectDropDownComponent_keydown_HostBindingHandler() { return ctx.KeyPressOutsideComponent(); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function SelectDropDownComponent_keydown_HostBindingHandler($event) { return ctx.handleKeyboardEvent($event); });\n    } }, inputs: { options: \"options\", config: \"config\", multiple: \"multiple\", disabled: \"disabled\", _value: \"_value\" }, outputs: { change: \"change\", searchChange: \"searchChange\", open: \"open\", close: \"close\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(function () { return SelectDropDownComponent; }),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature()], decls: 6, vars: 6, consts: [[\"tabindex\", \"0\", 1, \"ngx-dropdown-container\"], [\"type\", \"button\", 1, \"ngx-dropdown-button\", 3, \"ngClass\", \"disabled\", \"click\"], [1, \"nsdicon-angle-down\"], [\"class\", \"ngx-dropdown-list-container\", 3, \"maxHeight\", 4, \"ngIf\"], [1, \"ngx-dropdown-list-container\"], [\"class\", \"search-container\", 4, \"ngIf\"], [1, \"selected-items\"], [\"tabindex\", \"-1\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"available-items\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"search-container\"], [\"name\", \"search-text\", \"autocomplete\", \"off\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [3, \"ngClass\"], [1, \"nsdicon-search\"], [\"tabindex\", \"-1\", 3, \"click\"], [1, \"nsdicon-close\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"click\"], [\"availableOption\", \"\"]], template: function SelectDropDownComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function SelectDropDownComponent_Template_button_click_1_listener() { return ctx.toggleSelectDropdown(); });\n        ɵngcc0.ɵɵelementStart(2, \"span\");\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, SelectDropDownComponent_div_5_Template, 10, 14, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx.disabled))(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.selectedDisplayText, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toggleDropdown);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], pipes: [ɵngcc3.LimitToPipe, ɵngcc4.ArrayFilterPipe], styles: [\".ngx-dropdown-container[_ngcontent-%COMP%]{width:100%;position:relative}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline;vertical-align:middle}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .nsdicon-angle-down[_ngcontent-%COMP%]{right:5px;position:relative;float:right}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .nsdicon-angle-down[_ngcontent-%COMP%]::before{border-style:solid;border-width:0.1em 0.1em 0 0;content:'';display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-button[_ngcontent-%COMP%]{width:100%;min-height:30px;padding:5px 10px 5px 10px;background-color:white}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]{box-sizing:border-box;border:1px solid rgba(0,0,0,0.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;-webkit-box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);-moz-box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);overflow-y:auto}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all 0.3s}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus + label[_ngcontent-%COMP%]{transform:translateY(-2px) scale(0.8);transform-origin:0 0}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;-webkit-transition:-webkit-transform 0.2s ease-out;transition:-webkit-transform 0.2s ease-out;transition:transform 0.2s ease-out;transition:transform 0.2s ease-out, -webkit-transform 0.2s ease-out;-webkit-transform-origin:0% 100%;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label.active[_ngcontent-%COMP%]{transform:translateY(-2px) scale(0.8);transform-origin:0 0}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0px}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.selected-items[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background-color:#337ab7;color:white;margin-bottom:2px}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.selected-items[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .nsdicon-close[_ngcontent-%COMP%]{font-weight:bold;font-size:large}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.available-items[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]{background-color:#337ab7;color:#ffff}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container[_ngcontent-%COMP%]   .disabled[_ngcontent-%COMP%]{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectDropDownComponent, [{\n        type: Component,\n        args: [{\n                selector: \"ngx-select-dropdown\",\n                template: \"\\n    <div class=\\\"ngx-dropdown-container\\\" tabindex=\\\"0\\\">\\n        <button type=\\\"button\\\" class=\\\"ngx-dropdown-button\\\" [ngClass]=\\\"{'disabled':disabled}\\\" [disabled]=\\\"disabled\\\"\\n            (click)=\\\"toggleSelectDropdown()\\\">\\n            <span>{{selectedDisplayText}} </span>\\n            <span class=\\\"nsdicon-angle-down\\\"></span>\\n        </button>\\n        <div class=\\\"ngx-dropdown-list-container\\\" *ngIf=\\\"toggleDropdown\\\" [style.maxHeight]=\\\"config.height\\\">\\n            <div class=\\\"search-container\\\" *ngIf=\\\"config.search\\\">\\n                <input [style.direction]=\\\"config.inputDirection\\\" name=\\\"search-text\\\" (input)=\\\"searchTextChanged()\\\"\\n                    [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\" />\\n                <label [ngClass]=\\\"{'active': searchText}\\\">\\n                    <span class=\\\"nsdicon-search\\\"></span> {{config.searchPlaceholder}}</label>\\n            </div>\\n            <ul class=\\\"selected-items\\\">\\n                <li tabindex=\\\"-1\\\" *ngFor=\\\"let selected of selectedItems;let i = index\\\" (click)=\\\"deselectItem(selected,i)\\\">\\n                    <span class=\\\"nsdicon-close\\\">x</span>\\n                    <span> {{selected[config.displayKey] || selected}}</span>\\n                </li>\\n            </ul>\\n            <hr *ngIf=\\\"selectedItems.length > 0 && availableItems.length > 0\\\" />\\n            <ul class=\\\"available-items\\\">\\n                <li #availableOption\\n                    *ngFor=\\\"let item of availableItems| filterBy: searchText : config.searchOnKey | limitTo : config.limitTo;let i = index\\\"\\n                    tabindex=\\\"-1\\\" [ngClass]=\\\"{'active': focusedItemIndex == i}\\\" (click)=\\\"selectItem(item,i)\\\">\\n                    {{item[config.displayKey] || item}}</li>\\n                <li *ngIf=\\\"showNotFound\\\">{{config.noResultsFound}}</li>\\n            </ul>\\n        </div>\\n    </div>\\n  \",\n                styles: [\"\\n    .ngx-dropdown-container{width:100%;position:relative}.ngx-dropdown-container button{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container button span{display:inline;vertical-align:middle}.ngx-dropdown-container button .nsdicon-angle-down{right:5px;position:relative;float:right}.ngx-dropdown-container button .nsdicon-angle-down::before{border-style:solid;border-width:0.1em 0.1em 0 0;content:'';display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container .ngx-dropdown-button{width:100%;min-height:30px;padding:5px 10px 5px 10px;background-color:white}.ngx-dropdown-container .ngx-dropdown-list-container{box-sizing:border-box;border:1px solid rgba(0,0,0,0.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;-webkit-box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);-moz-box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);box-shadow:5px 5px 5px 0px rgba(0,0,0,0.21);overflow-y:auto}.ngx-dropdown-container .ngx-dropdown-list-container .search-container{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all 0.3s}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus+label{transform:translateY(-2px) scale(0.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;-webkit-transition:-webkit-transform 0.2s ease-out;transition:-webkit-transform 0.2s ease-out;transition:transform 0.2s ease-out;transition:transform 0.2s ease-out, -webkit-transform 0.2s ease-out;-webkit-transform-origin:0% 100%;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label.active{transform:translateY(-2px) scale(0.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container ul{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0px}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items li{background-color:#337ab7;color:white;margin-bottom:2px}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items li .nsdicon-close{font-weight:bold;font-size:large}.ngx-dropdown-container .ngx-dropdown-list-container ul.available-items li.active{background-color:#337ab7;color:#ffff}.ngx-dropdown-container .ngx-dropdown-list-container ul li{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container .disabled{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\\n  \"],\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(function () { return SelectDropDownComponent; }),\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { options: [{\n            type: Input\n        }], config: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], searchChange: [{\n            type: Output\n        }], open: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], clickInsideComponent: [{\n            type: HostListener,\n            args: [\"click\"]\n        }], clickOutsideComponent: [{\n            type: HostListener,\n            args: [\"document:click\"]\n        }], KeyPressOutsideComponent: [{\n            type: HostListener,\n            args: [\"document:keydown\"]\n        }], handleKeyboardEvent: [{\n            type: HostListener,\n            args: [\"keydown\", [\"$event\"]]\n        }], disabled: [{\n            type: Input\n        }], _value: [{\n            type: Input\n        }], availableOptions: [{\n            type: ViewChildren,\n            args: [\"availableOption\"]\n        }] }); })();\n    return SelectDropDownComponent;\n}());\nexport { SelectDropDownComponent };\n\n//# sourceMappingURL=ngx-select-dropdown.component.js.map","export { SelectDropDownComponent } from './components';\nexport { SelectDropDownModule } from './ngx-select-dropdown.module';\nexport { ArrayFilterPipe } from './pipes';\nexport { LimitToPipe } from './pipes';\n\n//# sourceMappingURL=index.js.map","import { ArrayFilterPipe } from './pipes/filter-by.pipe';\nimport { LimitToPipe } from './pipes/limit-to.pipe';\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SelectDropDownComponent } from \"./components/ngx-select-dropdown-component/ngx-select-dropdown.component\";\nimport * as ɵngcc0 from '@angular/core';\nvar SelectDropDownModule = /** @class */ (function () {\n    function SelectDropDownModule() {\n    }\n    /** @nocollapse */\n    SelectDropDownModule.ctorParameters = function () { return []; };\nSelectDropDownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SelectDropDownModule });\nSelectDropDownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SelectDropDownModule_Factory(t) { return new (t || SelectDropDownModule)(); }, providers: [], imports: [[CommonModule, FormsModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SelectDropDownModule, { declarations: function () { return [SelectDropDownComponent, LimitToPipe, ArrayFilterPipe]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [SelectDropDownComponent, LimitToPipe, ArrayFilterPipe]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectDropDownModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [SelectDropDownComponent, LimitToPipe, ArrayFilterPipe],\n                imports: [CommonModule, FormsModule],\n                exports: [SelectDropDownComponent, LimitToPipe, ArrayFilterPipe],\n                providers: [],\n                bootstrap: []\n            }]\n    }], function () { return []; }, null); })();\n    return SelectDropDownModule;\n}());\nexport { SelectDropDownModule };\n\n//# sourceMappingURL=ngx-select-dropdown.module.js.map","import { Pipe } from \"@angular/core\";\n/**\n * filters an array based on searctext\n */\nimport * as ɵngcc0 from '@angular/core';\nvar ArrayFilterPipe = /** @class */ (function () {\n    function ArrayFilterPipe() {\n    }\n    ArrayFilterPipe.prototype.transform = function (array, searchText, keyName) {\n        if (!array || !searchText || !Array.isArray(array)) {\n            return array;\n        }\n        if (typeof array[0] === 'string') {\n            return array.filter(function (item) { return item.toLowerCase().indexOf(searchText.toLowerCase()) > -1; });\n        }\n        // filter array, items which match and return true will be\n        // kept, false will be filtered out\n        if (!keyName) {\n            return array.filter(function (item) {\n                for (var key in item) {\n                    if (typeof item[key] !== \"object\" && item[key].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        else {\n            return array.filter(function (item) {\n                if (typeof item[keyName] !== \"object\" && item[keyName].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                    return true;\n                }\n                return false;\n            });\n        }\n    };\n    /** @nocollapse */\n    ArrayFilterPipe.ctorParameters = function () { return []; };\nArrayFilterPipe.ɵfac = function ArrayFilterPipe_Factory(t) { return new (t || ArrayFilterPipe)(); };\nArrayFilterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filterBy\", type: ArrayFilterPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ArrayFilterPipe, [{\n        type: Pipe,\n        args: [{\n                name: \"filterBy\"\n            }]\n    }], function () { return []; }, null); })();\n    return ArrayFilterPipe;\n}());\nexport { ArrayFilterPipe };\n\n//# sourceMappingURL=filter-by.pipe.js.map","export * from './filter-by.pipe';\nexport * from './limit-to.pipe';\n//# sourceMappingURL=index.js.map","import { Pipe } from \"@angular/core\";\nimport * as ɵngcc0 from '@angular/core';\nvar LimitToPipe = /** @class */ (function () {\n    function LimitToPipe() {\n    }\n    LimitToPipe.prototype.transform = function (array, itemsCount, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        if (!Array.isArray(array)) {\n            return array;\n        }\n        return array.slice(startIndex, startIndex + itemsCount);\n    };\n    /** @nocollapse */\n    LimitToPipe.ctorParameters = function () { return []; };\nLimitToPipe.ɵfac = function LimitToPipe_Factory(t) { return new (t || LimitToPipe)(); };\nLimitToPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"limitTo\", type: LimitToPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LimitToPipe, [{\n        type: Pipe,\n        args: [{\n                name: \"limitTo\"\n            }]\n    }], function () { return []; }, null); })();\n    return LimitToPipe;\n}());\nexport { LimitToPipe };\n\n//# sourceMappingURL=limit-to.pipe.js.map","export default \"<div class=\\\"wrapper wrapper-full-page\\\">\\n\\n    <div class=\\\"full-page lock-page\\\" data-color=\\\"gray\\\" data-image=\\\"../../../assets/img/full-screen-image-4.jpg\\\">\\n\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | azure | green | orange | red | purple\\\" -->\\n        <div class=\\\"content\\\">\\n            <form method=\\\"#\\\" action=\\\"#\\\">\\n                <div class=\\\"user-profile\\\">\\n                    <div class=\\\"author\\\">\\n                        <img class=\\\"avatar\\\" src=\\\"../../../assets/img/default-avatar.png\\\" alt=\\\"...\\\">\\n                    </div>\\n                    <h4>Tania Andrew</h4>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" class=\\\"form-control\\\">\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-neutral btn-round btn-fil btn-wd\\\">Unlock</button>\\n                </div>\\n            </form>\\n        </div>\\n\\n    \\t<footer class=\\\"footer footer-transparent\\\">\\n            <div class=\\\"container\\\">\\n                <nav class=\\\"pull-left\\\">\\n                    <ul>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Home\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Company\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Portfolio\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                               Blog\\n                            </a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n                <p class=\\\"copyright pull-right\\\">\\n                    &copy; {{test | date: 'yyyy'}} <a href=\\\"https://www.creative-tim.com\\\">Creative Tim</a>, made with love for a better web\\n                </p>\\n            </div>\\n        </footer>\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page login-page\\\" data-color=\\\"gray\\\" data-image=\\\"../../../assets/img/full-screen-image-1.jpg\\\">\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | azure | green | orange | red | purple\\\" -->\\n        <div class=\\\"content\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" >\\n                        <!--   if you want to have the card without animation please remove the \\\".card-hidden\\\" class   -->\\n                            <div class=\\\"card card-hidden\\\">\\n                                <div class=\\\"header text-center\\\">Login</div>\\n                                <div class=\\\"content\\\">\\n                                    <div class=\\\"text-center\\\">\\n                                        <span style=\\\"color: red;\\\"> {{ errorMsg }} </span>  \\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Windows User Name</label>\\n                                        <input type=\\\"email\\\" formControlName=\\\"UserName\\\" required placeholder=\\\"Enter Windows User\\\" class=\\\"form-control\\\" autofocus (keyup.enter)=\\\"focusablePassword.focus()\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Password</label>\\n                                        <input type=\\\"password\\\" formControlName=\\\"Password\\\" required placeholder=\\\"Password\\\" class=\\\"form-control\\\" #focusablePassword (keyup.enter)=\\\"focusableSubmit.focus()\\\" >\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <div class=\\\"checkbox\\\">\\n                                            <input id=\\\"WindowsUser\\\" #focusableSubmit type=\\\"checkbox\\\" (change)=\\\"onChangeWindowsUserCheckbox($event)\\\">\\n                                            <label for=\\\"WindowsUser\\\">\\n                                               Windows User\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"footer text-center\\\">\\n                                    <button type=\\\"submit\\\"  [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-fill btn-danger btn-wd\\\">Login</button>\\n                                    <!-- <button type=\\\"submit\\\" *ngIf=\\\"errorMsg\\\" class=\\\"btn btn-fill btn-danger btn-wd\\\">Invalid UserName or Passeord</button>\\n                                   -->\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    \\t<footer class=\\\"footer footer-transparent\\\">\\n            <div class=\\\"container\\\">\\n                <nav class=\\\"pull-left\\\">\\n                    <ul>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Home\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Company\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                                Portfolio\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a href=\\\"#\\\">\\n                               Blog\\n                            </a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n                <p class=\\\"copyright pull-right\\\">\\n                    &copy; {{test | date: 'yyyy'}} <a href=\\\"https://www.creative-tim.com\\\">Creative Tim</a>, made with love for a better web\\n                </p>\\n            </div>\\n        </footer>\\n\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading>\\n    <ngx-alerts></ngx-alerts>\\n      <div class=\\\"container-fluid\\\">\\n   <div class=\\\"row\\\" >\\n             <div class=\\\"card\\\">\\n                    <div class=\\\"content\\\">\\n                      <h4 class=\\\"title\\\">Privileges List</h4> \\n                      <form [formGroup]=\\\"privilegeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary pe-7s-diskette\\\" (click)=\\\"onDBUpdate()\\\"  > DB Update </button> <span style=\\\"color: red;\\\">         Privileges are Hard Coded  </span> \\n                       </form>          \\n                    </div>\\n                      <div class=\\\"fresh-datatables\\\">\\n                        <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                        <thead>\\n                              <tr>\\n                                <th >\\n                                 #\\n                                </th>\\n                                <th >\\n                                  Page Name\\n                                </th>\\n                                <th >\\n                                  Privilege Path \\n                                </th>\\n                                <th >\\n                                  Actions \\n                                </th>\\n                              </tr>\\n                        </thead>\\n                        <tbody  >\\n                              <tr  *ngFor=\\\"let row of PrivilegesDB; let i = index\\\">\\n                                <td>{{ i+1 }}</td>\\n                                <td>{{ row?.Page }}</td>\\n                                <td>{{ row?.PrivilegeName }}</td>\\n                                <td>\\n                                  <a (click)=\\\"onEditPrivilege(row)\\\" class=\\\"btn btn-simple btn-warning btn-icon edit\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                  <a (click)=\\\"onDeletePrivilege(row)\\\" class=\\\"btn btn-simple btn-danger btn-icon remove \\\"><i class=\\\"fa fa-times\\\"></i></a> </td>\\n                              </tr>\\n                        </tbody>\\n                        </table>\\n                      </div>\\n              </div>\\n \\n        </div>\\n      </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page register-page\\\" data-color=\\\"gray\\\" data-image=\\\"../../../assets/img/full-screen-image-2.jpg\\\">\\n\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | azure | green | orange | red | purple\\\" -->\\n        <div class=\\\"content\\\">\\n            <ngx-alerts></ngx-alerts>\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                  <form method=\\\"#\\\" action=\\\"#\\\"   [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"col-md-8 col-md-offset-2\\\">\\n                        <div class=\\\"header-text\\\">\\n                            <h2>Update Current User Account</h2>\\n                            <h4>User must be created in AD first</h4>\\n                            ID: <span> {{ registerForm.value | json }}     </span> \\n                   \\n                            <hr />\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-md-offset-2\\\">\\n                            <div class=\\\"card card-plain\\\">\\n                                    <div class=\\\"content\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <div>\\n                                                    <img formControlName=\\\"EmpImg\\\" [src]=\\\"getEmpImg.value || '../../../assets/img/profile/ProfilePhoto.png'\\\" [width]=\\\"35\\\" [height]=\\\"50\\\" class=\\\"img-rounded \\\" >\\n                                                    <input id=\\\"custom-input \\\" type=\\\"file\\\" (change)=\\\"onChangeChangeProfileImg($event)\\\">\\n                                                    <!-- <span hidden=\\\"getEmpImg.value == null\\\"> Uploaded Successfully   </span> -->\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"control-label\\\" for=\\\"\\\">Login Account: </label> \\n                                                <input type=\\\"text\\\" placeholder=\\\"Select Account name\\\" class=\\\"form-control\\\" formControlName=\\\"usrAccountName\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"control-label\\\" for=\\\"\\\">Full Name: </label> \\n                                                <input type=\\\"text\\\" placeholder=\\\"Your Full Name\\\" class=\\\"form-control\\\" formControlName=\\\"usrFullName\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"control-label\\\" for=\\\"\\\">Email Address: </label> \\n                                                <input type=\\\"email\\\" placeholder=\\\"Enter email\\\" class=\\\"form-control\\\" formControlName=\\\"usrEmail\\\">\\n                                            </div>\\n                                            <div class=\\\"row footer col-md-9 col-md-offset-3\\\">\\n                                                <div class=\\\"footer text-center\\\">\\n                                                    <button type=\\\"submit\\\" class=\\\"btn btn-fill btn-neutral btn-wd\\\">Cancel</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                            </div>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-md-offset-s1\\\">\\n                            <div class=\\\"card card-plain\\\">\\n                                <div class=\\\"content\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"\\\">Birthday Date: </label> \\n                                        <input\\n                                        formControlName=\\\"empBirhtday\\\"\\n                                        class=\\\"form-control\\\"\\n                                        #datepickerYMD=\\\"bsDatepicker\\\"\\n                                        bsDatepicker\\n                                        [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD HH:mm' }\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"\\\">Gender: </label> \\n                                        <input type=\\\"text\\\" placeholder=\\\"Gender\\\" class=\\\"form-control\\\" formControlName=\\\"usrGender\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"\\\">Password: </label> \\n                                        <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" formControlName=\\\"usrPassword\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"control-label\\\" for=\\\"\\\">Confirm Password </label> \\n                                        <input type=\\\"password\\\" placeholder=\\\"Password Confirmation\\\" class=\\\"form-control\\\" formControlName=\\\"usrPassword\\\">\\n                                    </div>\\n                                    <div class=\\\"row footer col-md-9 col-md-offset-3\\\">\\n                                        <div class=\\\"footer text-center\\\">\\n                                            <button type=\\\"submit\\\" class=\\\"btn btn-fill btn-neutral btn-wd\\\">Update Account</button>\\n                                       \\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                    </div>\\n \\n                  </form>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <footer class=\\\"footer footer-transparent\\\">\\n            <div class=\\\"container\\\">\\n                <p class=\\\"copyright text-center\\\">\\n                    &copy; {{test | date: 'yyyy'}} <a href=\\\"https://www.creative-tim.com\\\">Creative Tim</a>, made with love for a better web\\n                </p>\\n            </div>\\n        </footer>\\n\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading>\\n    <ngx-alerts></ngx-alerts>\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\"   >\\n              <div class=\\\"card col-md-12\\\">\\n                <form [formGroup]=\\\"roleForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <!-- <div class=\\\"content\\\"> -->\\n          \\n                        <div class=\\\"form-group col-md-12\\\">\\n                              <legend>         \\n                                Role ID: {{ getRoleForm.roleId.value }}\\n                              </legend>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"form-group col-md-3\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"\\\">Role Name: <span class=\\\"star\\\">*</span> </label>\\n                                <input type=\\\"text\\\" placeholder=\\\"Role Name\\\" formControlName=\\\"roleName\\\"  class=\\\"form-control\\\" >\\n                                <small [hidden]=\\\"roleForm.controls.roleName.valid || roleForm.controls.roleName.pristine\\\" class=\\\"text-danger\\\">\\n                                      Role Name is required.\\n                                </small>\\n                              </div>\\n                              <div class=\\\"form-group col-md-3\\\">\\n                                <label>Select Privileges </label>\\n                                <ng-multiselect-dropdown #multiSelect\\n                                [placeholder]=\\\"'Select Privileges'\\\" \\n                                [data]=\\\"Privileges\\\" \\n                                [formControl]=\\\"getRoleForm.PrivilegeName\\\" \\n                                [settings]=\\\"settings\\\"\\n                                [disabled]=\\\"false\\\"\\n                                (onFilterChange)=\\\"onFilterChange($event)\\\"\\n                                (onDropDownClose)=\\\"onDropDownClose($event)\\\"\\n                                (onSelect)=\\\"onItemSelect($event)\\\" \\n                                (onDeSelect)=\\\"onDeSelect($event)\\\"\\n                                (onSelectAll)=\\\"onSelectAll($event)\\\"\\n                                (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"\\n                                >\\n                        \\n                                </ng-multiselect-dropdown>\\n                              </div>\\n                       \\n                            </div>\\n                            <div class=\\\"footer\\\">\\n                        \\n                                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary pe-7s-diskette\\\" (click)=\\\"onSubmit('Add')\\\" [disabled]=\\\"roleForm.status == 'INVALID' \\\"> Add </button>   *ngIf=\\\"getRoleForm.roleId.value == 0\\\"  -->\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary pe-7s-diskette\\\" (click)=\\\"onSubmit('Save')\\\" [disabled]=\\\"roleForm.status == 'INVALID' \\\"> Save </button> \\n                            </div>\\n                        </div>\\n          \\n                        <!-- <div>\\n                          roleForm.value:  {{ roleForm.value | json }}\\n                        </div> -->\\n                <!-- </div> -->\\n              </form>\\n        \\n              </div>\\n        </div>\\n        <div class=\\\"row\\\" >\\n             <div class=\\\"card\\\">\\n                    <div class=\\\"content\\\">\\n                      <div class=\\\"form-group col-md-12\\\">\\n                        <div class=\\\"form-group col-md-3\\\">\\n    \\n                          <h4 class=\\\"title\\\">Roles List</h4> \\n                        </div>\\n                        <div class=\\\"form-group col-md-3\\\">\\n                          <select  (change)=\\\"onSelectRolesTemplate($event)\\\"    class=\\\"form-control\\\" data-title=\\\"Single Select\\\" data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                            <option value=\\\"Templates\\\">Templates</option>\\n                            <option value=\\\"Roles\\\">Roles</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n        \\n                    </div>\\n                      <div class=\\\"fresh-datatables\\\">\\n                        <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                        <!-- Table Headers -->\\n                        <thead>\\n                              <tr>\\n                                <th >\\n                                  ID \\n                                </th>\\n                                <th >\\n                                  Role Name \\n                                </th>\\n                                <th >\\n                                  Privileges \\n                                </th>\\n                                <th >\\n                                  Actions \\n                                </th>\\n                              </tr>\\n                        </thead>\\n                        <!-- Table Body -->\\n                        <tbody  >\\n                              <tr  *ngFor=\\\"let row of Roles\\\">\\n                                <td>{{ row?.roleId }}</td>\\n                                <td>{{ row?.roleName }}</td>\\n                                <td> <li *ngFor=\\\"let p of row?.Privileges\\\">  {{ p.PrivilegeName }}       </li>   </td>\\n                                <td>\\n                                  <a (click)=\\\"onEditRole(row)\\\" class=\\\"btn btn-simple btn-warning btn-icon edit\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                  <a (click)=\\\"onDeleteRole(row)\\\" class=\\\"btn btn-simple btn-danger btn-icon remove \\\"><i class=\\\"fa fa-times\\\"></i></a> </td>\\n                              </tr>\\n                        </tbody>\\n                        </table>\\n                      </div>\\n              </div>\\n \\n        </div>\\n      </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n\\n\\n                <h4 style=\\\"color:  red;\\\">Unauthorised Access!</h4>\\n                <span>\\n                    <a routerLink=\\\"/users/login\\\" routerLinkActive=\\\"active\\\" class=\\\"pull-left\\\">Login With Another Account</a>\\n                </span>\\n                <br>\\n                <span>\\n                    <a routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" class=\\\"pull-left\\\">Go To Dashboard</a>\\n                </span>\\n\\n\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading>\\n    <ngx-alerts></ngx-alerts>\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n            <div class=\\\"col-md-1\\\">\\n              <div class=\\\"form-group col-md-1\\\">\\n                <div class=\\\"card card-user\\\">\\n                                  <img [src]=\\\"getEmpImg.value || '../../../assets/img/profile/ProfilePhoto.png'\\\" [width]=\\\"110\\\" [height]=\\\"140\\\" class=\\\"img-rounded\\\" >\\n                                  <br>\\n                                  <input id=\\\"custom-input\\\" type=\\\"file\\\" (change)=\\\"fileChangeListener($event)\\\">\\n                </div>\\n          </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-md-offset-2\\\">\\n        <div class=\\\"card card-plain\\\">\\n                    <div class=\\\"content\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\" for=\\\"\\\">Account Name (Login Name):   <span class=\\\"star\\\">*</span>     </label>\\n                                <input type=\\\"text\\\" placeholder=\\\"First.Last\\\" class=\\\"form-control\\\" formControlName=\\\"usrAccountName\\\" required>\\n                                <small [hidden]=\\\"userForm.controls.usrAccountName.valid || userForm.controls.usrAccountName.pristine\\\" class=\\\"text-danger\\\">\\n                                  Account Name is required.\\n                                </small>\\n                            </div>\\n                                <label class=\\\"control-label\\\" for=\\\"\\\">Full Name:  <span class=\\\"star\\\">*</span> </label>\\n                                <input type=\\\"text\\\" placeholder=\\\"User Full Name\\\" class=\\\"form-control\\\" formControlName=\\\"usrFullName\\\" required>\\n                                <small [hidden]=\\\"userForm.controls.usrFullName.valid || userForm.controls.usrFullName.pristine\\\" class=\\\"text-danger\\\">\\n                                  Full Name is required.\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Email:  </label>\\n                                <input type=\\\"email\\\" placeholder=\\\"Email Address\\\" class=\\\"form-control\\\" formControlName=\\\"usrEmail\\\">\\n                                <small [hidden]=\\\"userForm.controls.usrEmail.valid || userForm.controls.usrEmail.pristine\\\" class=\\\"text-danger\\\">\\n                                  Email format ( somthing@domainname.com ) is required.\\n                                </small>\\n                            </div>\\n                        </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-md-offset-s1\\\">\\n                    <div class=\\\"card card-plain\\\">\\n                        <div class=\\\"content\\\">\\n                            <div class=\\\"form-group\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Role:    <span class=\\\"star\\\">*</span>    <!--   {{ userForm.value.userRole | json }} --> \\n                            </label>\\n                            <select formControlName=\\\"roleId\\\" [value]=\\\"0\\\" (change)=\\\"onChangeRoled($event)\\\"  class=\\\"form-control\\\" data-title=\\\"Single Select\\\" data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                              <option value=\\\"0\\\" >--Select--</option>\\n                              <option *ngFor=\\\"let rol of Roles\\\" value={{rol.roleId}} >\\n                                  {{rol.roleName}}\\n                              </option>\\n                            </select> \\n                            <small [hidden]=\\\"userForm.controls.roleId.valid || userForm.controls.roleId.pristine\\\" class=\\\"text-danger\\\">\\n                              Company is required.\\n                            </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Password:   </label>\\n                                <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" formControlName=\\\"usrPassword\\\">\\n                                <small [hidden]=\\\"userForm.controls.usrPassword.valid || userForm.controls.usrPassword.pristine\\\" class=\\\"text-danger\\\">\\n                                  Password length 8 required.\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Confirm Password:   </label>\\n                                <input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmUsrPassword\\\" >  \\n                                <small [hidden]=\\\"userForm.controls.confirmUsrPassword.valid || userForm.controls.confirmUsrPassword.pristine\\\" class=\\\"text-danger\\\">\\n                                  Password NOT match.\\n                                </small>\\n                            </div>\\n                            <div class=\\\"footer text-center\\\">\\n                               <button type=\\\"submit\\\" *ngIf=\\\"userForm.controls.usrId.value === null\\\" [disabled]=\\\"userForm.status == 'INVALID' \\\" class=\\\"btn btn-primary\\\">Create</button>\\n                              <button type=\\\"submit\\\" *ngIf=\\\"userForm.controls.usrId.value != null\\\" [disabled]=\\\"userForm.status == 'INVALID' \\\" class=\\\"btn btn-primary\\\">Save</button>\\n                          </div>\\n                        </div>\\n                    </div>\\n            </div>\\n          </form>\\n        </div>\\n \\n        <div class=\\\"row\\\" >\\n             <div class=\\\"card\\\">\\n                    <div class=\\\"content\\\">\\n                      <h4 class=\\\"title\\\">Users List</h4>\\n                    </div>\\n                      <div class=\\\"fresh-datatables\\\">\\n                        <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                        <!-- Table Headers -->\\n                        <thead>\\n                              <tr>\\n                                <th>\\n                                    #\\n                                </th>\\n                                <th>\\n                                  Img\\n                                </th>\\n                                <th >\\n                                  Account.Name \\n                                </th>\\n                                <th >\\n                                  User Full Name \\n                                </th>\\n                                <th >\\n                                  Email \\n                                </th>\\n                                <th >\\n                                  Role \\n                                </th>\\n                                <th >\\n                                  Actions \\n                                </th>\\n                              </tr>\\n                        </thead>\\n                        <!-- Table Body -->\\n                        <tbody  >\\n                              <tr  *ngFor=\\\"let row of Users; let i = index\\\">\\n                                <td>{{i+1}}</td>\\n                                <td>    <img [src]=\\\"row.EmpImg\\\" width=\\\"25\\\" class=\\\"img-rounded\\\" > </td>\\n                                <td>{{ row?.usrAccountName }}</td>\\n                                <td>{{ row?.usrFullName }}</td>\\n                                <td>{{ row?.usrEmail }}</td>\\n                                <td>{{ row?.userRole }}</td>\\n                                <!-- <td  > \\n                                  <ul *ngFor=\\\"let prv of row.Privileges\\\">\\n                                    <li>{{ prv }} </li> \\n                                  </ul>\\n                                </td> -->\\n\\n                                <td>\\n                                  <a (click)=\\\"onEditUser(row)\\\" class=\\\"btn btn-simple btn-warning btn-icon edit\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                  <a (click)=\\\"onDeleteUser(row)\\\" class=\\\"btn btn-simple btn-danger btn-icon remove \\\"><i class=\\\"fa fa-times\\\"></i></a> </td>\\n                              </tr>\\n                        </tbody>\\n                        </table>\\n                      </div>\\n              </div>\\n \\n        </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <!-- <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading> -->\\n    <ngx-alerts></ngx-alerts>\\n      <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"row\\\" >\\n             <div class=\\\"card\\\">\\n                    <div class=\\\"content\\\">\\n                      <h4 class=\\\"title\\\">User Action log List</h4> \\n               <div class=\\\"col-md-3\\\">\\n                     <button type=\\\"button\\\" class=\\\"btn btn-primary Refresh\\\" (click)=\\\"onGetUserLog()\\\"  >Refresh </button>  \\n               </div>\\n               <div class=\\\"col-md-3\\\">\\n                    <input \\n                    placeholder=\\\"Select Date From - To \\\"\\n                    (bsValueChange)=\\\"onFilterLogByDate($event, 'fromDate')\\\"\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    formControlName=\\\"dateRange\\\"\\n                    #daterangepicker=\\\"bsDaterangepicker\\\"\\n                    bsDaterangepicker\\n                    [bsConfig]=\\\"{ rangeInputFormat : 'MMMM Do YYYY, h:mm:ss a', dateInputFormat: 'MMMM Do YYYY, h:mm:ss a', showWeekNumbers: false }\\\"> \\n\\n              </div>\\n                \\n         \\n                    </div>\\n                      <div class=\\\"fresh-datatables\\\">\\n                        <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                        <thead>\\n                              <tr>\\n                                <th >\\n                                 #\\n                                </th>\\n                                <th >\\n                                  User Name\\n                                </th>\\n                                <th >\\n                                  Action \\n                                </th>\\n                                <th >\\n                                   IP Address\\n                                  </th>\\n                                <th >\\n                                  Date/Time \\n                                </th>\\n                              </tr>\\n                        </thead>\\n                        <!-- Table Body -->\\n                        <tbody  >\\n                              <tr  *ngFor=\\\"let row of Logs; let i = index\\\">\\n                                <td>{{ i+1 }}</td>\\n                                <td>{{ row?.usrAccountName }}</td>\\n                                <td>{{ row?.Action }}</td>\\n                                <td>{{ row?.IP_Address }}</td>\\n                                <td>{{ row?.ActionTime }}</td>\\n                              </tr>\\n                        </tbody>\\n                        </table>\\n                      </div>\\n              </div>\\n \\n        </div>\\n      </div>\\n</div>\"","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomvalidatorsService {\n\n  constructor() { }\n\n  passwordConfirmValidator(){\n\n  }\n\n\n\n MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2xvY2svbG9jay5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-lock',\n  templateUrl: './lock.component.html',\n  styleUrls: ['./lock.component.css']\n})\nexport class LockComponent implements OnInit {\n\n  test : Date = new Date();\n\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'app/shared/authentication/service/auth.service';\nimport { AppstorageService } from 'app/shared/services/appstorage.service';\nimport { UserModel } from 'app/shared/models/UserModel';\nimport { LogsService } from 'app/shared/services/logs.service';\ndeclare var $:any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  test : Date = new Date();\n  isAuthorized: boolean = false;\n  isloginfailed: boolean = false;\n  isUserNameExist: boolean = false;\n  errorMsg = '';\n  windowsUserName = '';\n\n  loginForm = new FormGroup({\n    UserName: new FormControl(''),\n    Password:  new FormControl(''),\n    appUserCheckbox: new FormControl('')\n  });\n\n  checkFullPageBackgroundImage(){\n      var $page = $('.full-page');\n      var image_src = $page.data('image');\n\n      if(image_src !== undefined){\n          var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n          $page.append(image_container);\n      }\n  };\n  AddUserLog(action: string) {\n    this.logSrv.sendUserLog(action).subscribe(res=>{\n      console.log(res);\n      \n    });\n  }\nconstructor(\n  private strSrv: AppstorageService,\n  private logSrv: LogsService,\n  private authSrv: AuthService,\n  // private strgSrv: AppstorageService,\n  private fb: FormBuilder\n){\n  this.isloginfailed = this.authSrv.Isloginfailed();\n  this.isUserNameExist = this.authSrv.IsUserNameExist();\n}\n  ngOnInit(){\n\n    this.isloginfailed = this.authSrv.Isloginfailed();\n    this.isUserNameExist = this.authSrv.IsUserNameExist();\n\n    this.loginForm = this.fb.group({\n      UserName: [null , Validators.required],\n      Password: [null, Validators.required],\n      WindowsUser: false\n    });\n\n      this.checkFullPageBackgroundImage();\n      setTimeout(function(){\n          // after 1000 ms we add the class animated to the login/register card\n          $('.card').removeClass('card-hidden');\n      }, 700)\n  }\n\n  onSubmit(e) {\n              \n              this.errorMsg = '';\n              let isWinUsr = this.loginForm.get('WindowsUser').value;\n\n              this.authSrv.getLoginAcount(e.UserName, e.Password, isWinUsr).subscribe((usr: UserModel) => {\n                              console.log(usr);\n                              \n                              if(!isWinUsr){\n                                        \n                                        this.authSrv.isloginfailed = false;\n                                        this.strSrv.saveObjectToStorage(usr, []);\n                                        \n                                        if(this.authSrv.IsAuthorised()){\n                                              \n                                              this.authSrv.goURLPage();\n                                        } else {\n                                          \n                                          this.authSrv.goUnAuthorisedPage();\n                                        }\n                                      this.authSrv.goURLPage();\n                              } if(isWinUsr){\n                                      this.authSrv.loginAD(e.UserName, e.Password, isWinUsr).subscribe(usrAD =>{\n                                                    this.authSrv.isloginfailed = false;\n                                                    \n                                                    if(usrAD) {\n                                                      this.strSrv.saveObjectToStorage(usr, []);\n                                                      \n                                                    } if(this.authSrv.IsAuthorised()){\n                                                          \n                                                          this.authSrv.goURLPage();\n                                                    } else {\n                                                          \n                                                          this.authSrv.goUnAuthorisedPage();\n                                                    }\n                                            this.authSrv.goURLPage();\n                                      }, error => {\n                                                        \n                                                        const Unauthorized = \"401\";\n                                                        const NoConnection = \"Unknown\";\n                                                        if(error.includes(NoConnection)) {\n                                                          this.errorMsg = 'No Server Connection (AD-API)';\n                                                        } else if (error.includes(Unauthorized)) {\n                                                      \n                                                          this.logSrv.sendUserLog(\"User Account: \" + usr.usrAccountName + \" Loggin failed \").subscribe(res=>{\n                                                            this.errorMsg = 'Windows User Name or Password Incorrect';\n                                                          });\n                                                        }\n                                                  }\n                                      );\n                              }\n\n              }, error => {\n                                  \n                                  console.log(error.statu);\n                                //  this.errorMsg = error.message;\n                                  // const NotFound = \"404\";\n                                  // const Unauthorized = \"401\";\n                                  // const NoConnection = \"Unknown\";\n                                  if(error.message.includes(\"Unknown\")) {\n                                    this.logSrv.sendUserLog(\" No Server Connection (Local DB) \").subscribe(res=>{\n                                      this.errorMsg = 'No Server Connection (Local DB)';\n                                    });\n                                  } if (error.message.includes(\"404\")) {\n                              \n                                    this.logSrv.sendUserLog(\" Loggin failed \").subscribe(res=>{\n                                      this.errorMsg = 'Local User Name or Password Incorrect';\n                                    });\n                                  }\n                          }\n              );\n  }\n  onChangeWindowsUserCheckbox(e) {\n      //\n      if(e.target.checked){\n        this.loginForm.get('WindowsUser').setValue(true);\n      } else {\n        this.loginForm.get('WindowsUser').setValue(false);\n      }\n  }\n  // getwindowsUserName() {\n  //   let user = new ActiveXObject(\"WSCRIPT.Network\");\n  //   console.log(user.UserName.toLowerCase());\n  //   this.windowsUserName = user;\n  // }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3ByaXZpbGVnZS9wcml2aWxlZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PrivilegeModel } from 'app/shared/models/PrivilegeModel';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { PrivilegeService } from './service/privilege.service';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-privilege',\n  templateUrl: './privilege.component.html',\n  styleUrls: ['./privilege.component.css']\n})\nexport class PrivilegeComponent implements OnInit {\n\n  public loading = false;\n  notificationMessage = '';\n\n  privilegeForm = new FormGroup({\n      PrivilegeId: new FormControl(0),\n      PrivilegeName:  new FormControl('')\n  });\n\n  Privileges: PrivilegeModel[];\n  PrivilegesDB: PrivilegeModel[];\n\n    constructor(\n        private alrtSrv: AlertService,\n        private privSrv: PrivilegeService,\n        private fb: FormBuilder,\n        private alertService: AlertService\n      ) {\n\n        this.onGetAllPrivileges();\n\n  \n    }\n    ngOnInit() {\n\n      this.privilegeForm = this.fb.group({\n        PrivilegeId: 0,\n        PrivilegeName: [null, Validators.required]\n      });\n    }\n    fillPrivs(){\n      \n      this.Privileges = [\n\n        {Page: 'Mng Invoices' , PrivilegeName: '/operation/invoicemng' },\n        {Page: 'Mng Emails' , PrivilegeName: '/operation/emailmng' },\n        {Page: 'Requests' , PrivilegeName: '/operation/requests' },\n        {Page: 'Assets Transfer' , PrivilegeName: '/operation/assetmng' },\n        {Page: 'Users List' , PrivilegeName: '/users/user' },\n        {Page: 'Roles' , PrivilegeName: '/users/roles' },\n        {Page: 'privilege' , PrivilegeName: '/users/privilege' },\n        {Page: 'Operators' , PrivilegeName: '/masterdata/operator' },\n        {Page: 'Assets Tracking' , PrivilegeName: '/masterdata/assettrackinglog' },\n        {Page: 'Assets Upload' , PrivilegeName: '/masterdata/assetsupload' }, \n        {Page: 'Assets Creation' , PrivilegeName: '/masterdata/assets' }, \n        {Page: 'Assets Creation' , PrivilegeName: '/masterdata/assettype' },\n        {Page: 'Employee' , PrivilegeName: '/masterdata/employee' },\n        {Page: 'Import Employees' , PrivilegeName: '/masterdata/employeeimport' },\n        {Page: 'Branch' , PrivilegeName: '/masterdata/branch' },\n        {Page: 'Company' , PrivilegeName: '/masterdata/company' },\n        {Page: 'Domain' , PrivilegeName: '/masterdata/domain' },\n        {Page: 'Supplier' , PrivilegeName: '/masterdata/supplier' },\n        {Page: 'Genaric Email' , PrivilegeName: '/masterdata/genaricemail' },\n        {Page: 'Postion' , PrivilegeName: '/masterdata/position' },\n        {Page: 'Department' , PrivilegeName: '/masterdata/department' },\n        {Page: 'Item Category' , PrivilegeName: '/masterdata/itemscategory' },\n        {Page: 'Cost Center' , PrivilegeName: '/masterdata/CostCenter' }\n      ];\n    }\n    onGetAllPrivileges() {\n            this.loading = true;\n            this.privSrv.getAllPrivileges().subscribe((rls: PrivilegeModel[]) => {\n                    this.PrivilegesDB = rls;\n                    this.loading = false;\n              }, error => {\n                    this.loading = false;\n                    if(error.message.includes('Http failure response for http://')) {\n                      this.alrtSrv.danger('Server error');\n                    }\n            });\n    }\n    onSubmit(status): void {\n        if (this.privilegeForm.value.PrivilegeId == 0) {\n          this.loading = true;\n                this.privSrv.addPrivilege(this.privilegeForm.value).subscribe(PrivilegeAdded => {\n                  this.alrtSrv.success('Privilages updated Successfully');\n                      this.privilegeForm.reset();\n                      this.privilegeForm.controls['PrivilegeId'].setValue(0);\n                      this.loading = false;\n                      this.onGetAllPrivileges();\n                }, error => {\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alrtSrv.danger('Server error');\n                  }\n                });\n        } else if (this.privilegeForm.value.PrivilegeId > 0) {\n                this.privSrv.editPrivilege(this.privilegeForm.value.PrivilegeId, this.privilegeForm.value).subscribe(PrivilegeAdded => {\n                      this.privilegeForm.reset();\n                      this.privilegeForm.controls['PrivilegeId'].setValue(0);\n                      this.onGetAllPrivileges();\n                }, error => {\n                      console.log('Data is not Imported ...' ,  error.message);\n                      this.loading = false;\n                      if(error.message.includes('Http failure response for http://')) {\n                        this.alrtSrv.danger('Server error');\n                      }\n                });\n         \n        }\n    }\n    onDBUpdate(){\n      this.fillPrivs();\n      this.privSrv.addMultiplePrivilege(this.Privileges).subscribe((res: PrivilegeModel[])=>{\n        debugger;\n        this.alertService.success('Privileges ( ' +  res.length + '  ) Updated Successfully ');\n        this.onGetAllPrivileges();\n      }, err => {\n          this.alrtSrv.danger('Server Error');\n      })\n    }\n    onEditPrivilege(rol) {\n        this.privilegeForm.reset();\n        this.privilegeForm.patchValue(rol);\n    }\n    onDeletePrivilege(rol : PrivilegeModel) {\n        if(confirm(\"Are you sure to delete Privilege \" + rol.PrivilegeName)){\n          this.privSrv.deletePrivilege(rol.PrivilegeId).subscribe((roldlt: PrivilegeModel) => {\n            this.alertService.success('Privilege: ' +  rol.PrivilegeName + ' is deleted');\n            this.onGetAllPrivileges();\n          }, error => {\n            console.log('Data is not Imported ...' ,  error.message);\n            this.loading = false;\n            if(error.message.includes('Http failure response for http://')) {\n              this.alrtSrv.danger('Server error');\n            }\n          });\n        }\n    }\n    onCancel() {\n       this.privilegeForm.reset();\n    }\n    \n    get getPrivilegeForm() { return this.privilegeForm.controls; }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { PrivilegeModel } from 'app/shared/models/PrivilegeModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivilegeService {\n  // Categorys: any = [];\n  constructor(private http: HttpClient) { }\n\n  getAllPrivileges() {\n  //  \n    return this.http.get(environment.apiURL + 'Privileges');\n  }\n\n  addPrivilege(body: PrivilegeModel) {\n    \n    return this.http.post(environment.apiURL + 'Privileges', body);\n  }\n  addMultiplePrivilege(body) {\n    \n    return this.http.post(environment.apiURL + 'Privileges/DBUpdatePrivileges', body);\n  }\n\n  editPrivilege(id: number, body: PrivilegeModel) {\n    return this.http.put(environment.apiURL + 'Privileges/' + id, body);\n  }\n\n  // deletePrivilege(id: number){\n  //   return this.Privilege.delete(environment.apiURL + `Privileges/$(id)`);\n  // }\n  deletePrivilege(id) {\n    return this.http.delete(environment.apiURL + 'Privileges/' + id);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'app/shared/models/UserModel';\nimport { RegisterService } from './service/register.service';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\nimport { AlertService } from 'ngx-alerts';\nimport { ActivatedRoute } from '@angular/router';\ndeclare var $:any;\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    registerForm: FormGroup;\n\n    test : Date = new Date();\n\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    constructor(\n        private route: ActivatedRoute,\n        private regSrv: RegisterService,\n        private fb: FormBuilder,\n        private alertService: AlertService\n\n    ) {\n            this.registerForm = this.fb.group({\n                usrId: null,\n                EmpImg: null,\n                usrFullName: [null, Validators.required],\n                usrAccountName: [null, Validators.required],\n                usrGender: [null, Validators.required],\n                usrBirhtday: [null, Validators.required],\n                usrPassword: [null, [Validators.required]],\n                confirmUsrPassword: [null, [Validators.required]],\n                usrEmail: [ null , [ Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n            });\n\n    }\n\n    ngOnInit(){\n        this.route.queryParams.subscribe(params => {\n            if(params != {}){\n                debugger;\n              this.registerForm.patchValue(params);\n            }\n          });\n        this.checkFullPageBackgroundImage();\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    onSubmit() {\n        this.regSrv.editUser(555, this.registerForm.value).subscribe(usr => {\n            console.log(usr);\n        })\n    }\n    onChangeChangeProfileImg(event) {\n        let me = this;\n        let file = event.target.files[0];\n        let reader = new FileReader();\n        \n        reader.readAsDataURL(file);\n        reader.onload = () => {\n         console.log( 'reader.result' ,reader.result);\n        // this.imageCropData = reader.result;\n          //console.log( 'MY Photo'  ,  reader.result);\n          this.registerForm.get('EmpImg').setValue(reader.result);\n          //console.log('  this.employeeForm.value  ', this.employeeForm.value);\n        };\n        reader.onerror = function (error) {\n          console.log('Error: ', error);\n        };\n    }\n    onCancel() {\n        this.registerForm.reset();\n    }\n\n    get getRegisterForm() { return this.registerForm.controls; }\n    get getEmpImg() {\n        return this.registerForm.get('EmpImg') as FormControl;\n    }\n    get getUserId() {\n        return this.registerForm.get('usrId') as FormControl;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { UserModel } from 'app/shared/models/UserModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  UserAuthentication() {\n    return this.http.get(environment.apiURL + 'GetUserLogin/{Username}/{Password}')\n  }\n  ImportADUsers() {\n // debugger;\n    return this.http.get('http://api.adauth.local:1035/api/auth/users')\n  }\n  addImportedUsers(body) {\n //   debugger;\n    return this.http.post(environment.apiURL + 'Users/addImportedUsers', body);\n  }\n  getAllUsers() {\n    // debugger;\n    return this.http.get(environment.apiURL + 'Users');\n  }\n  getAllUsersWithEmails() {\n    // debugger;\n      return this.http.get(environment.apiURL + 'Users/GetUsersWithEmail');\n    }\n  getAllImportedUsers() {\n    //  debugger;\n      return this.http.get(environment.apiURL + 'Users/GetAllImportedUsers');\n  }\n  addUser(body: UserModel) {\n    // debugger;\n    return this.http.post(environment.apiURL + 'Users', body);\n  }\n  saveUsers(body) {\n        // debugger;\n        return this.http.post(environment.apiURL + 'Users/SaveUsers', body);\n  }\n  editUser(id: number, body: UserModel) {\n     debugger;\n    return this.http.put(environment.apiURL + 'Users/' + id, body);\n  }\n  GetUserByCode(hrcode) {\n    return this.http.get(environment.apiURL + 'Users/GetUserByCode/' + hrcode);\n  }\n  // deleteUser(id: number){\n  //   return this.User.delete(environment.apiURL + `Users/$(id)`);\n  // }\n  deleteUser(id) {\n    return this.http.delete(environment.apiURL + 'Users/' + id);\n  }\n  deleteALLimportedUsers() {\n    return this.http.delete(environment.apiURL + 'Users/DeleteAllImportedUsers' );\n  }\n  deleteALLUsers() {\n    return this.http.delete(environment.apiURL + 'Users/DeleteAllUsers' );\n  }\n  deleteSelectedImportedUsers(body) {\n    debugger;\n    return this.http.post(environment.apiURL + 'Users/DeleteSelected/', body );\n  }\n  deleteSelectedUsers(body) {\n    debugger;\n    return this.http.post(environment.apiURL + 'Users/DeleteSelectedUsers/', body );\n  }\n\n  // uploadEmplyeeImage(body) {\n  //   debugger;\n  //   return this.http.post(environment.apiURL + 'Users/UploadEmplyeeImage/', body );\n  //   return this.http.post(environment.apiURL + 'ExcelAsset/UploadExcelAsset', formData, httpOptions)\n  // }\n  uploadEmplyeeImage(formData: FormData) {\n      debugger;\n      let headers = new HttpHeaders();\n  \n      headers.append('Content-Type', 'multipart/form-data');\n      headers.append('Accept', 'application/json');\n  \n      const httpOptions = { headers: headers };\n   //   debugger;\n      return this.http.post(environment.apiURL + 'Users/UploadEmplyeeImage/', formData, httpOptions)\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RoleModel } from 'app/shared/models/RoleModel';\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { RoleService } from './services/role.service';\nimport { AlertService } from 'ngx-alerts';\nimport { PrivilegeModel } from 'app/shared/models/PrivilegeModel';\nimport { PrivilegeService } from '../privilege/service/privilege.service';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n\n  public loading = false;\n  notificationMessage = '';\n  Privileges: PrivilegeModel[] = [];\n  public settings = {};\n  roleForm: FormGroup;\n  Roles: RoleModel[] = [];\n\n    constructor(\n        private rolSrv: RoleService,\n        private privSrv: PrivilegeService,\n        private fb: FormBuilder,\n        private alertService: AlertService\n      ) {\n\n        this.roleForm = this.fb.group({\n          roleId: 0,\n          roleName: [null, Validators.required],\n\n          RolePrivileges: this.fb.array([])\n        });\n       // this.onGetAllRoles();\n        this.onGetAllPrivileges();\n        this.fillRoles();\n    }\n    ngOnInit() {\n      this.settings = {\n        singleSelection: false,\n        idField: 'PrivilegeId',\n        textField: \"PrivilegeName\",\n        enableCheckAll: true,\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        allowSearchFilter: true,\n        limitSelection: -1,\n        clearSearchFilter: true,\n        maxHeight: 197,\n        itemsShowLimit: 6,\n        searchPlaceholderText: 'Search',\n        noDataAvailablePlaceholderText: 'No Data Available',\n        closeDropDownOnSelection: false,\n        showSelectedItemsAtTop: false,\n        defaultOpen: false\n      };\n    }\n    \n    onSelectRolesTemplate(e){\n       if(e.target.value == \"Roles\"){\n         this.onGetAllRoles();\n       } if(e.target.value == \"Templates\"){\n         this.fillRoles();\n       }\n    }\n    fillRoles(){\n      \n      this.Roles = [\n\n        {roleId: 0 , roleName: 'IT', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Cairo', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Alex', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-DMT', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-PSD', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Suez', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Sokh', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Safaga', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-AlxPrt', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-AirPrt', Privileges: [] },\n        {roleId: 0 , roleName: 'Admin-Shrm', Privileges: [] },\n\n      ];\n    }\n    onGetAllRoles() {\n            this.loading = true;\n            this.rolSrv.getAllRoles().subscribe((rls: RoleModel[]) => {\n              if(rls.length == 0){\n                this.alertService.success('No Role in DB to Import');\n              } else{\n                this.alertService.success('( ' + rls.length + ' ) Roles Imported successfully from DB');\n              }\n          \n                    this.Roles = rls;\n                    this.loading = false;\n              }, error => {\n                    console.log('error ...' ,  error.message);\n                    this.loading = false;\n                    if(error.message.includes('Http failure response for http://')) {\n                      this.alertService.danger('Server error');\n                    }\n            });\n    }   \n    onGetAllPrivileges() {\n            this.loading = true;\n            this.privSrv.getAllPrivileges().subscribe((rls: PrivilegeModel[]) => {\n                    this.Privileges = rls;\n                    this.loading = false;\n              }, error => {\n                    console.log('error ...' ,  error.message);\n                    this.loading = false;\n                    if(error.message.includes('Http failure response for http://')) {\n                      this.alertService.danger('Server error');\n                    }\n            });\n    }\n    onSubmit(status): void {\n        if (this.roleForm.value.roleId == 0) {\n          this.loading = true;\n                this.rolSrv.addRole(this.roleForm.value).subscribe((RoleAdded: RoleModel) => {\n                  if (status == 'Add') {\n                      this.roleForm.reset();\n                      this.roleForm.controls['roleId'].setValue(0);\n                      this.loading = false;\n                      this.alertService.success('Role: ' +  RoleAdded.roleName + ' Created successfully');\n                      this.onGetAllRoles();\n                  } else if (status == 'Save') {\n                    this.alertService.success('Role: ' +  RoleAdded.roleName + ' Saved successfully');\n                     this.loading = false;\n                     this.onGetAllRoles();\n                     window.location.reload();\n                  };\n                 \n                }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n                });\n\n        } else if (this.roleForm.value.roleId > 0) {\n                 \n                this.rolSrv.editRole(this.roleForm.value.roleId, this.roleForm.value).subscribe(RoleAdded => {\n                      this.roleForm.reset();\n                      this.roleForm.controls['roleId'].setValue(0);\n                      this.onGetAllRoles();\n                      window.location.reload();\n                }, error => {\n                      console.log('Data is not Imported ...' ,  error.message);\n                      this.loading = false;\n                      if(error.message.includes('Http failure response for http://')) {\n                        this.alertService.danger('Server error');\n                      }\n                });\n         \n        }\n    }\n    onEditRole(rol: RoleModel) {\n        \n        this.roleForm.reset();\n        this.roleForm.patchValue(rol);\n        // rol.RolePrivileges.forEach(p =>{\n        //   \n        //   this.onItemSelect(p.Privilege);\n        // });\n    }\n    onDeleteRole(rol: RoleModel) {\n        if(confirm(\"Are you sure to delete Role \" + rol.roleName)){\n          \n          this.rolSrv.deleteRole(rol.roleId).subscribe((roldlt: RoleModel) => {\n\n        //  this.alertService.danger('Role: ' +  rol.roleName + ' is deleted');\n          // this.alertService.info('this is an info alert');\n          // this.alertService.danger('this is a danger alert');\n           this.alertService.success('Deleted Successfully');\n          // this.alertService.warning('this is a warning alert');\n          // this.alertService.warning({html: '<a (click)=\"okAlertFn()\"><b>Yes Proceed</b></a> '});\n            this.onGetAllRoles();\n\n          }, error => {\n            console.log('Data is not Imported ...' ,  error.message);\n            this.loading = false;\n            if(error.message.includes('Http failure response for http://')) {\n              this.alertService.danger('Server error');\n            }\n          });\n        }\n    }\n    onCancel() {\n       this.roleForm.reset();\n    }\n    public onFilterChange(item: any) {\n      console.log(item);\n      this.customSearchFn;\n    }\n    customSearchFn(term: string, item: any) {\n      term = term.toLocaleLowerCase();\n      return item.astDescription.toLocaleLowerCase().indexOf(term) > -1 || item.astCode.toLocaleLowerCase().indexOf(term) > -1;\n    }\n    public onDropDownClose(item: any) {\n      console.log(item);\n    }\n    public onItemSelect(item?: PrivilegeModel) {\n      \n      console.log('item  .. ', item);\n      this.getPrivilegess.push(this.createItem(item));\n   \n      console.log('this.getRoleForm...' ,  this.getRoleForm);\n      \n    }\n    public onDeSelect(item: any) {\n      \n      console.log(item);\n      this.getPrivilegess.removeAt(item);\n    }\n    public onSelectAll(items: any) {\n      \n      console.log(items);\n      items.forEach(itm => {\n       this.getPrivilegess.push(this.createItem(itm));\n      });\n    }\n    public onDeSelectAll(items?: any) {\n        // this.getAssets.value.forEach(itm => {\n        //       this.getAssets.removeAt(itm);\n        // });\n    }\n    createItem(item?: PrivilegeModel): FormGroup {\n      \n      return this.fb.group({\n        Id: null,\n        RoleId: this.roleForm.get('roleId').value,\n        PrivilegeId: item.PrivilegeId,\n        PrivilegeName: item.PrivilegeName\n\n      });\n    }\n    \n    get getRoleForm() { return this.roleForm.controls; }\n    get getPrivilegess() { return this.getRoleForm.RolePrivileges as FormArray; }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { RoleModel } from 'app/shared/models/RoleModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  // Categorys: any = [];\n  constructor(private http: HttpClient) { }\n\n  getAllRoles() {\n    return this.http.get(environment.apiURL + 'Roles');\n  }\n\n  addRole(body: RoleModel) {\n    return this.http.post(environment.apiURL + 'Roles', body);\n  }\n\n  editRole(id: number, body: RoleModel) {\n    return this.http.put(environment.apiURL + 'Roles/' + id, body);\n  }\n\n  // deleteRole(id: number){\n  //   return this.Role.delete(environment.apiURL + `Roles/$(id)`);\n  // }\n  deleteRole(id) {\n    return this.http.delete(environment.apiURL + 'Roles/' + id);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VuYXV0aG9yaXNlZC91bmF1dGhvcmlzZWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorised',\n  templateUrl: './unauthorised.component.html',\n  styleUrls: ['./unauthorised.component.css']\n})\nexport class UnauthorisedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl } from '@angular/forms';\nimport { RegisterService } from '../register/service/register.service';\nimport { AlertService } from 'ngx-alerts';\nimport { UserModel } from 'app/shared/models/UserModel';\nimport { EmployeeService } from 'app/masterdata/employee/services/employee.service';\nimport { EmployeeModel } from 'app/shared/models/EmployeeModel';\nimport { RoleModel } from 'app/shared/models/RoleModel';\nimport { RoleService } from '../role/services/role.service';\nimport { UsersModule } from '../users.module';\nimport { ActivatedRoute } from '@angular/router';\nimport { CustomvalidatorsService } from 'app/shared/services/customvalidators.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n // imageCropData: any;\n\n  userForm: FormGroup;\n  public config = {};\n\n  public loading = false;\n  notificationMessage = '';\n\n  public Users: UserModel[] = [];\n  public Roles: RoleModel[] = [];\n  public Employees: EmployeeModel[] = [];\n  public UsersAccounts: any[] = [];\n  \n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\n    // \n    if (c.get('password').value !== c.get('confirm_password').value) {\n      // debugger\n        return {invalid: true};\n    }\n  }\n  MatchPassword(control: AbstractControl) {\n    let password = control.get('password').value;\n    let confirmPassword = control.get('confirm_password').value;\n    if (password != confirmPassword) {\n      control.get('confirm_password').setErrors({ confirm_password: true });\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  // EmpImg = '../../../assets/img/profile/ProfilePhoto.png';\n    constructor(\n        private valdSrv: CustomvalidatorsService,\n        private regSrv: RegisterService,\n        private rolSrv: RoleService,\n        private fb: FormBuilder,\n        private alertService: AlertService,\n        private empSrv: EmployeeService,\n        private route: ActivatedRoute\n      ) {\n    \n        this.userForm = this.fb.group({\n          usrId: null,\n          EmpImg: null,\n          usrFullName: [ null, Validators.required],\n          usrAccountName: [ null, Validators.required],\n          usrPassword: [ null, [Validators.required]],\n          confirmUsrPassword: [ null, [Validators.required]],\n          usrEmail: [ null , [ Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n          roleId: [ null , Validators.required]\n          }, {\n            validator: this.valdSrv.MustMatch('usrPassword', 'confirmUsrPassword')\n          });\n          this.onGetAllUsers();\n          this.onGetAllRolss();\n          this.userForm.reset();\n    }\n\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        debugger;\n        if(params != {}){\n          this.userForm.get('EmpImg').setValue(params.EmpImg);\n          this.userForm.get('usrFullName').setValue(params.empFullName);\n          this.userForm.get('usrAccountName').setValue(params.accountName);\n     //     this.userForm.get('usrEmail').setValue(params.usrEmail);\n        }\n      });\n      this.config = {\n        displayKey: \"accountName\", //if objects array passed which key to be displayed defaults to description\n        search: true, //true/false for the search functionlity defaults to false,\n        height: 'auto', // height of the list so that if there are more no of items it can show a scroll defaults to auto. With auto height scroll will never appear\n        placeholder: 'Select', // text to be displayed when no item is selected defaults to Select,\n        customComparator: ()=>{}, // a custom function using which user wants to sort the items. default is undefined and Array.sort() will be used in that case,\n        limitTo: Option.length, // a number thats limits the no of options displayed in the UI similar to angular's limitTo pipe\n        moreText: 'more', // text to be displayed whenmore than one items are selected like Option 1 + 5 more\n        noResultsFound: 'No results found!', // text to be displayed when no items are found while searching\n        searchPlaceholder: 'Search', // label thats displayed in search input,\n        searchOnKey: 'name', // key on which search should be performed this will be selective search. if undefined this will be extensive search on all keys\n        clearOnSelection: false, // clears search criteria when an option is selected if set to true, default is false\n        inputDirection: 'ltr' // the direction of the search input can be rtl or ltr(default)\n      }\n    }\n\n    fileChangeListener(event) {\n      let me = this;\n      let file = event.target.files[0];\n      let reader = new FileReader();\n\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.userForm.get('EmpImg').setValue(reader.result);\n      };\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    }\n    onGetAllUsers() {\n            this.loading = true;\n            this.regSrv.getAllUsers().subscribe((usrs: UserModel[]) => {\n                    this.Users = usrs;\n                    this.loading = false;\n              }, error => {\n                    console.log('error ...' ,  error.message);\n                    this.loading = false;\n                    if(error.message.includes('Http failure response for http://')) {\n                    }\n            });\n    }\n    onGetAllRolss() {\n        this.loading = true;\n        this.rolSrv.getAllRoles().subscribe((res: UserModel[]) => {\n                this.Roles = res;\n                this.loading = false;\n          }, error => {\n                console.log('error ...' ,  error.message);\n                this.loading = false;\n                if(error.message.includes('Http failure response for http://')) {\n\n                }\n        });\n    }\n    onGetAllEmployees() {\n            this.loading = true;\n            this.empSrv.getAllEmployeesWithEmails().subscribe((emps: EmployeeModel[]) => {\n                    this.Employees = emps;\n            }, err=>{\n              this.alertService.danger('Server error');\n            });\n    }\n    ImportADEmployees() {\n        this.empSrv.ImportADEmployees().subscribe((emps: [{ accountName: ''}]) => {\n                 emps.forEach(e => {\n                    this.UsersAccounts.push(e)\n                 });\n      });\n    }\n    selectionChanged(e) {\n        console.log(e);\n    }\n    onSubmit(): void {\n        if (!this.userForm.value.usrId) {\n          this.loading = true;\n                this.regSrv.addUser(this.userForm.value).subscribe(UserAdded => {\n                      this.userForm.reset();\n                      this.loading = false;\n                      this.alertService.success('Created Successfully');\n                      this.onGetAllUsers();\n                }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n                });\n\n        } else if (this.userForm.value.usrId) {\n                this.regSrv.editUser(this.userForm.value.usrId, this.userForm.value).subscribe(UserAdded => {\n                      this.userForm.reset();\n                      this.onGetAllUsers();\n                      this.alertService.success('Changed Successfully');\n                }, error => {\n                      console.log('Data is not Imported ...' ,  error.message);\n                      this.loading = false;\n                      if(error.message.includes('Http failure response for http://')) {\n                        this.alertService.danger('server error');\n                      }\n                });\n         \n        }\n    }\n    onEditUser(usr: UserModel) {\n        this.userForm.reset();\n        this.userForm.patchValue(usr);\n    }\n    onDeleteUser(dom : UserModel) {\n      debugger;\n        if(confirm(\"Are you sure to delete User \" + dom.usrFullName)){\n          this.regSrv.deleteUser(dom.usrId).subscribe((domdlt: UserModel) => {\n            debugger;\n            this.alertService.success('Deleted Successfully');\n            this.onGetAllUsers();\n          }, error => {\n            console.log('Data is not Imported ...' ,  error.message);\n            this.loading = false;\n            if(error.message.includes('Http failure response for http://')) {\n              this.alertService.danger('Server error');\n            }\n          });\n        }\n    }\n    onCancel() {\n       this.userForm.reset();\n    }\n    onChangeRoled(e) {\n      this.userForm.get('rolId').setValue(e.target.value);\n    }\n    \n    get getUserForm() { return this.userForm.controls; }\n    get getUserPasswordGroup() { return this.userForm.get('usrPassword') as FormGroup; }\n    get getUserPassword() { return this.getUserPasswordGroup.get('password') as FormControl; }\n    get getUserConfirmPassword() { return this.getUserPasswordGroup.get('confirm_password') as FormControl; }\n    get getEmpImg() { return this.userForm.get('EmpImg') as FormControl; }\n    get getUserId() { return this.userForm.get('usrId') as FormControl; }\n\n\n   \n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UseractionlogService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllUserLogs() {\n    //  debugger;\n      return this.http.get(environment.apiURL + 'UserActivitiesLogs');\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJhY3Rpb25sb2cvdXNlcmFjdGlvbmxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'app/shared/models/UserModel';\nimport { UseractionlogService } from './service/useractionlog.service';\n\n@Component({\n  selector: 'app-useractionlog',\n  templateUrl: './useractionlog.component.html',\n  styleUrls: ['./useractionlog.component.css']\n})\nexport class UseractionlogComponent implements OnInit {\n\n  public Logs : UserModel[] = [];\n  public TempLogs : UserModel[] = [];\n  constructor(private logSrv: UseractionlogService) { }\n\n  ngOnInit(): void {\n    this.onGetUserLog();\n  }\n\n  onGetUserLog() {\n    //    \n          this.logSrv.getAllUserLogs().subscribe((rls: UserModel[]) => {\n            \n                 this.Logs = rls;\n                 this.TempLogs = rls;\n               //   this.loading = false;\n            }, error => {\n                  console.log('error ...' ,  error.message);\n              //    this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                 //   this.noticationMessegeTimer('Server connection Error / Data is not updated');\n                  }\n          });\n  }\n\n  onFilterLogByDate(e: Date, FromTo){\n    \n\n    let from = new Date(e[0]);\n    let to = new Date(e[1]);\n\n    this.Logs = [];\n    this.TempLogs.forEach(log =>{\n      let logdate = new Date(log.ActionTime);\n        \n        if(logdate > from && logdate < to){\n          \n          this.Logs.push(log);\n        }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoleComponent } from './role/role.component';\nimport { PrivilegeComponent } from './privilege/privilege.component';\nimport { LoginComponent } from './login/login.component';\nimport { LockComponent } from './lock/lock.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { AuthGuard } from 'app/shared/authentication/service/auth.guard';\nimport { UseractionlogComponent } from './useractionlog/useractionlog.component';\n\nconst routes: Routes = [];\n\nexport const UsersRoutes: Routes = [{\n  path: '',\n  children: [\n      {\n        path: 'roles',\n     //   canActivate: [AuthGuard],  \n          component: RoleComponent\n      },\n      {\n        path: 'privilege',\n    //    canActivate: [AuthGuard],  \n        component: PrivilegeComponent\n      },\n      {\n        path: 'user',\n    //    canActivate: [AuthGuard],  \n        component: UserComponent\n      },\n            \n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'lock',\n        // canActivate: [AuthGuard],  \n        component: LockComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'unauthorised',\n        component: UnauthorisedComponent\n      },{\n        path: 'useractionlog',\n        component: UseractionlogComponent\n      }\n  ]\n}];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersRoutes } from './users-routing';\nimport { RoleComponent } from './role/role.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { OrderModule } from 'ngx-order-pipe';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxAutocompleteModule } from 'ngx-angular-autocomplete';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AlertModule } from 'ngx-alerts';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { PrivilegeComponent } from './privilege/privilege.component';\nimport { LoginComponent } from './login/login.component';\nimport { LockComponent } from './lock/lock.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { SelectDropDownModule } from 'ngx-select-dropdown'\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { UseractionlogComponent } from '../users/useractionlog/useractionlog.component';\nimport { DatepickerModule, BsDatepickerModule  } from 'ngx-bootstrap/datepicker';\n\n@NgModule({\n  declarations: [ RoleComponent, PrivilegeComponent, LoginComponent, LockComponent, RegisterComponent, UserComponent, UnauthorisedComponent, UseractionlogComponent],\n  imports: [\n    SelectDropDownModule,\n    NgxPrintModule,\n    NgxAutocompleteModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OrderModule,\n    CommonModule,\n    RouterModule.forChild(UsersRoutes),\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\n        backdropBackgroundColour: 'rgba(0,0,0,0.1)', \n        backdropBorderRadius: '4px',\n        primaryColour: '#ffffff', \n        secondaryColour: '#ffffff', \n        tertiaryColour: '#ffffff'\n    }),\n    // Specify your library as an import (set timeout to -1 for unlimited timeout, the message can only be closed by the user clicking on it)\n    AlertModule.forRoot({maxMessages: 5, timeout: 5000, position: 'right'}),\n    ModalModule,\n    NgMultiSelectDropDownModule,\n    NgSelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot() \n\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}