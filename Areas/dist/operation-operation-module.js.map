{"version":3,"sources":["./src/app/operation/assetmng/assetmng.component.html","./src/app/operation/dynamicemails/dynamicemails.component.html","./src/app/operation/dynamicform/dynamicform.component.html","./src/app/operation/emailmng/emailmng.component.html","./src/app/operation/invoicelines/invoicelines.component.html","./src/app/operation/invoicemng/invoicemng.component.html","./src/app/operation/invoicemng/reports/lbd-chartBranchs/lbd-chartBranch.component.html","./src/app/operation/invoicemng/reports/lbd-chartMonths/lbd-chartMonth.component.html","./src/app/operation/invoicemng/reports/reports.component.html","./src/app/operation/mulipleselectbox/mulipleselectbox.component.html","./src/app/operation/requestmng/requestmng.component.html","./src/app/operation/testautocomplete/testautocomplete.component.html","./src/app/operation/testlogin/testlogin.component.html","./src/app/operation/assetmng/assetmng.component.css","./src/app/operation/assetmng/assetmng.component.ts","./src/app/operation/dynamicemails/dynamicemails.component.css","./src/app/operation/dynamicemails/dynamicemails.component.ts","./src/app/operation/dynamicform/dynamicform.component.css","./src/app/operation/dynamicform/dynamicform.component.ts","./src/app/operation/emailmng/emailmng.component.css","./src/app/operation/emailmng/emailmng.component.ts","./src/app/operation/invoicelines/invoicelines.component.css","./src/app/operation/invoicelines/invoicelines.component.ts","./src/app/operation/invoicemng/invoicemng.component.css","./src/app/operation/invoicemng/invoicemng.component.ts","./src/app/operation/invoicemng/reports/lbd-chartBranchs/lbd-chartBranch.component.ts","./src/app/operation/invoicemng/reports/lbd-chartMonths/lbd-chartMonth.component.ts","./src/app/operation/invoicemng/reports/reports.component.css","./src/app/operation/invoicemng/reports/reports.component.ts","./src/app/operation/invoicemng/service/invoicemng.service.ts","./src/app/operation/mulipleselectbox/mulipleselectbox.component.css","./src/app/operation/mulipleselectbox/mulipleselectbox.component.ts","./src/app/operation/operation-routing.ts","./src/app/operation/operation.module.ts","./src/app/operation/requestmng/requestmng.component.css","./src/app/operation/requestmng/requestmng.component.ts","./src/app/operation/testautocomplete/testautocomplete.component.css","./src/app/operation/testautocomplete/testautocomplete.component.ts","./src/app/operation/testlogin/testlogin.component.css","./src/app/operation/testlogin/testlogin.component.ts","./src/app/sweetalert.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8bAA+X,mBAAmB,mJAAmJ,yCAAyC,47EAA47E,mBAAmB,kIAAkI,yCAAyC,wZAAwZ,oEAAoE,KAAK,kEAAkE,cAAc,4EAA4E,qBAAqB,mSAAmS,qEAAqE,KAAK,8DAA8D,cAAc,wEAAwE,qBAAqB,2DAA2D,qBAAqB,gnFAAgnF,YAAY,KAAK,cAAc,oyBAAoyB,whNAAwhN,kDAAkD,+TAA+T,GAAG,kwBAAkwB,eAAe,kQAAkQ,OAAO,+GAA+G,cAAc,6DAA6D,uBAAuB,6DAA6D,gBAAgB,6DAA6D,wBAAwB,+GAA+G,sBAAsB,2FAA2F,mDAAmD,8FAA8F,yDAAyD,6DAA6D,wBAAwB,6DAA6D,sBAAsB,6DAA6D,qBAAqB,6DAA6D,uBAAuB,6DAA6D,mBAAmB,6DAA6D,oBAAoB,w4BAAw4B,89GAA89G,kDAAkD,sTAAsT,GAAG,ynBAAynB,OAAO,0DAA0D,kBAAkB,0DAA0D,oBAAoB,iNAAiN,qFAAqF,cAAc,gFAAgF,gBAAgB,+EAA+E,qBAAqB,sOAAsO,mBAAmB,0DAA0D,eAAe,0DAA0D,gBAAgB,qhD;;;;;;;;;;;;ACAn6uB;AAAe,uoBAAwkB,iIAAiI,MAAM,qMAAqM,gWAAgW,mIAAmI,MAAM,klBAAklB,+WAA+W,6BAA6B,2B;;;;;;;;;;;;ACA12E;AAAe,0TAA2P,wEAAwE,KAAK,4XAA4X,mFAAmF,KAAK,4lBAA4lB,qBAAqB,mB;;;;;;;;;;;;ACA55C;AAAe,0yGAA2uG,oBAAoB,gYAAgY,kBAAkB,yNAAyN,qBAAqB,wDAAwD,cAAc,4FAA4F,mBAAmB,wzBAAwzB,qBAAqB,oJAAoJ,cAAc,oJAAoJ,mBAAmB,sLAAsL,2BAA2B,kmFAAkmF,YAAY,KAAK,cAAc,01FAA01F,0CAA0C,+OAA+O,GAAG,2mBAA2mB,eAAe,4HAA4H,oBAAoB,4HAA4H,4BAA4B,qDAAqD,4BAA4B,6FAA6F,4BAA4B,qDAAqD,4BAA4B,mPAAmP,QAAQ,qkD;;;;;;;;;;;;ACAzlZ;AAAe,6F;;;;;;;;;;;;ACAf;AAAe,2KAA4G,8BAA8B,gTAAgT,2QAA2Q,gCAAgC,gxGAAgxG,SAAS,wCAAwC,WAAW,6lBAA6lB,2CAA2C,s4DAAs4D,oCAAoC,81BAA81B,sCAAsC,+qBAA+qB,w2DAAw2D,4BAA4B,8oDAA8oD,gBAAgB,iBAAiB,cAAc,iZAAiZ,kFAAkF,6TAA6T,UAAU,KAAK,UAAU,2LAA2L,gFAAgF,ySAAyS,UAAU,KAAK,UAAU,0LAA0L,8EAA8E,oSAAoS,WAAW,KAAK,WAAW,+gBAA+gB,mHAAmH,muBAAmuB,i0HAAi0H,kDAAkD,uPAAuP,GAAG,ifAAif,OAAO,2CAA2C,kBAAkB,2CAA2C,kBAAkB,2CAA2C,gBAAgB,6CAA6C,kBAAkB,4CAA4C,gBAAgB,2CAA2C,yBAAyB,2CAA2C,qBAAqB,2CAA2C,uBAAuB,y+BAAy+B,uiBAAuiB,uBAAuB,u2C;;;;;;;;;;;;ACA1prB;AAAe,0IAA2E,SAAS,mCAAmC,YAAY,6FAA6F,cAAc,mLAAmL,cAAc,2IAA2I,cAAc,+C;;;;;;;;;;;;ACAvlB;AAAe,0IAA2E,SAAS,mCAAmC,YAAY,6FAA6F,cAAc,kLAAkL,cAAc,2IAA2I,cAAc,+C;;;;;;;;;;;;ACAtlB;AAAe,6KAA8G,8BAA8B,0XAA0X,qXAAqX,0FAA0F,gdAAgd,UAAU,KAAK,UAAU,oOAAoO,0FAA0F,idAAid,UAAU,KAAK,UAAU,qOAAqO,0FAA0F,idAAid,UAAU,KAAK,UAAU,8NAA8N,0FAA0F,6bAA6b,UAAU,KAAK,UAAU,ihDAAihD,2FAA2F,icAAic,UAAU,KAAK,UAAU,4NAA4N,2FAA2F,+bAA+b,UAAU,KAAK,UAAU,oOAAoO,2FAA2F,+bAA+b,UAAU,KAAK,UAAU,spBAAspB,mHAAmH,kRAAkR,gBAAgB,iBAAiB,cAAc,0+BAA0+B,UAAU,SAAS,QAAQ,8LAA8L,wrBAAwrB,usBAAusB,8SAA8S,KAAK,WAAW,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,kDAAkD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,UAAU,iDAAiD,WAAW,iDAAiD,WAAW,qEAAqE,KAAK,WAAW,u7BAAu7B,4IAA4I,sOAAsO,eAAe,2FAA2F,uCAAuC,oEAAoE,KAAK,sCAAsC,qEAAqE,MAAM,aAAa,oX;;;;;;;;;;;;ACA/vb;AAAe,2EAAY,QAAQ,qTAAqT,WAAW,yiBAAyiB,WAAW,yB;;;;;;;;;;;;ACAv5B;AAAe,2F;;;;;;;;;;;;ACAf;AAAe,uIAAwE,OAAO,iCAAiC,mBAAmB,UAAU,iRAAiR,gDAAgD,oBAAoB,S;;;;;;;;;;;;ACAjf;AAAe,0M;;;;;;;;;;;;ACAf;AAAe,qFAAsB,sBAAsB,mBAAmB,wBAAwB,0BAA0B,yBAAyB,wBAAwB,sBAAsB,kCAAkC,QAAQ,wBAAwB,sBAAsB,sBAAsB,kBAAkB,wBAAwB,0BAA0B,0BAA0B,yBAAyB,sBAAsB,kCAAkC,8BAA8B,KAAK,yBAAyB,sBAAsB,uBAAuB,0BAA0B,KAAK,mBAAmB,sBAAsB,uBAAuB,0BAA0B,KAAK,mBAAmB,4BAA4B,0BAA0B,0BAA0B,KAAK,iBAAiB,uCAAuC,uBAAuB,yBAAyB,mCAAmC,2CAA2C,KAAK,mDAAmD,uoE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp+B;AAEc;AACS;AACN;AACG;AACJ;AACe;AACjD;AAK4C;AACtD;AACkB;AACF;AAI0B;AACjC;AACqB;AACY;AAQ3E;IAkCE,2BACU,OAA0B,EAC1B,MAAmB,EACnB,YAA0B,EAC1B,OAA0B,EAC1B,MAAoB,EACpB,UAA4B,EAC5B,MAAuB,EACvB,MAAqB,EACrB,MAAsB,EACtB,WAA+B,EAC/B,SAAoB,EACpB,EAAe,EACf,KAAqB;QAZrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAa;QACnB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAc;QACpB,eAAU,GAAV,UAAU,CAAkB;QAC5B,WAAM,GAAN,MAAM,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,cAAS,GAAT,SAAS,CAAW;QACpB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QA7C/B,oBAAe,GAAG,KAAK,CAAC;QACxB,cAAS,GAAW,CAAC,CAAC;QACtB,aAAQ,GAAW,CAAC,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACrB,UAAK,GAAe,EAAE,CAAC;QAIvB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAQ,EAAE,CAAC;QACb,SAAI,GAAiB,EAAE,CAAC;QACxB,WAAM,GAAiB,EAAE,CAAC;QAGjC,UAAK,GAAW,WAAW,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAEzB,mBAAc,GAAiB,EAAE,CAAC;QAClC,sBAAiB,GAAQ,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1E,eAAU,GAAqB,EAAE,CAAC;QAClC,YAAO,GAAmB,EAAE,CAAC;QAC7B,cAAS,GAAoB,EAAE,CAAC;QAChC,kBAAa,GAAoB,EAAE,CAAC;QACpC,aAAQ,GAAmB,EAAE,CAAC;QAwB5B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAC3E,mEAAmE;QACnE,kDAAkD;QAClD,wBAAwB;QACxB,IAAI;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,IAAI;YACnB,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAvCD,sCAAU,GAAV,UAAW,MAAc;QACvB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3C,mBAAmB;QAErB,CAAC,CAAC,CAAC;IACL,CAAC;IAmCD,oCAAQ,GAAR;QAAA,iBAqCC;QApCC,IAAI,CAAC,QAAQ,GAAG;YACd,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,gBAAgB;YAC3B,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,CAAC,CAAC;YAClB,iBAAiB,EAAE,IAAI;YACvB,SAAS,EAAE,GAAG;YACd,cAAc,EAAE,CAAC;YACjB,qBAAqB,EAAE,wCAAwC;YAC/D,8BAA8B,EAAE,mBAAmB;YACnD,wBAAwB,EAAE,KAAK;YAC/B,sBAAsB,EAAE,KAAK;YAC7B,WAAW,EAAE,KAAK;SACnB,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,QAAQ,CAAC;YACT,IAAG,MAAM,IAAI,EAAE,EAAC;gBACd,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACpD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,8CAA8C;gBAE7H,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;gBACtB,QAAQ,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,CAAgB;oBACzD,QAAQ,CAAC;oBACT,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;oBACjE,QAAQ,CAAC;gBACX,CAAC,CAAC,CAAC;aAEL;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM;QAAf,iBAYC;QAXW,QAAQ,CAAC;QACT,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,GAAc;YACrD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,GAAkB;YAC3E,QAAQ,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,qCAAqC,GAAG,GAAG,CAAC,WAAW,GAAG,GAAG,CAAE,CAAC;YACzI,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,KAAI,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACf,CAAC;IACD,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;IAChB,gBAAgB;IAChB,8EAA8E;IAC9E,oBAAoB;IACpB,kFAAkF;IAClF,6BAA6B;IAC7B,8BAA8B;IAC9B,2BAA2B;IAC3B,2DAA2D;IAC3D,kCAAkC;IAClC,uDAAuD;IACvD,gCAAgC;IAChC,qBAAqB;IACrB,qBAAqB;IAErB,wEAAwE;IACxE,mCAAmC;IAEnC,6HAA6H;IAC7H,uGAAuG;IACvG,sEAAsE;IACtE,8FAA8F;IAE9F,wCAAwC;IACxC,iBAAiB;IAEjB,sBAAsB;IACtB,mCAAmC;IACnC,2EAA2E;IAC3E,qGAAqG;IACrG,4EAA4E;IAC5E,YAAY;IACZ,YAAY;IAEZ,QAAQ;IACR,OAAO;IAEP,QAAQ;IACR,wDAAwD;IACxD,mCAAmC;IACnC,UAAU;IAEV,IAAI;IACJ,0CAAc,GAAd,UAAe,IAAY,EAAE,IAAS;QACpC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,sCAAU,GAAV,UAAW,IAAiB;QAC1B,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAtB,CAAsB,CAAC,CAAC,KAAK;YAC/D,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAtB,CAAsB,CAAC,CAAC,YAAY;SACzE,CAAC,CAAC;IACL,CAAC;IACD,0CAAc,GAAd,UAAe,CAAC;QAEd,IAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,cAAc,EAAE;YAC3C,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACjC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;iBAChE,CAAC,CAAC,CAAC;aACP;SACJ;aAAM;YACH,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACjC;SACJ;IACH,CAAC;IACD,0CAAc,GAAd;QAAA,iBAgBC;QAfO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,IAAkB;YACtD,QAAQ,CAAC;YACT,KAAI,CAAC,MAAM,GAAE,EAAE,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,WAAC;gBACZ,IAAG,CAAC,CAAC,CAAC,OAAO,EAAC;oBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB;YACH,CAAC,CAAC;YACF,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;gBACnB,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,aAAa,GAAI,KAAK,GAAG,CAAC,CAAC,cAAc,GAAG,KAAK,GAAI,CAAC,CAAC,gBAAgB,GAAK,KAAK,GAAG,CAAC,CAAC,aAAa,GAAI,oBAAoB,GAAG,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;YAChM,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,CAAE,aAAa;QACxC,CAAC,EAAE,aAAG;YACL,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACZ,CAAC;IACD,+CAAmB,GAAnB;QAAA,iBAIC;QAHO,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,UAAC,QAA0B;YACnE,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IACD,6CAAiB,GAAjB;QAAA,iBAeC;QAdM,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,IAAqB;YAC5D,QAAQ,CAAC;YACR,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,WAAC;gBACR,IAAM,QAAQ,GAAkB,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAG,CAAC;gBAC/G,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACzB,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;gBACrC,QAAQ,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;gBAC3C,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC,cAAc,GAAI,KAAK,GAAG,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;gBACzF,IAAG,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;oBAC3B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;YACP,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACV,CAAC;IACD,2CAAe,GAAf;QAAA,iBAMC;QAJK,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAoB;YAEtD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IACD,4CAAgB,GAAhB;QAAA,iBAQC;QAPC,MAAM;QACA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAoB;YAC1D,+BAA+B;YAC/B,oBAAoB;YAC1B,QAAQ;YACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACZ,CAAC;IACD,uCAAW,GAAX,UAAY,KAAK;QAAjB,iBAOC;QANC,QAAQ,CAAC;QACT,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,CAAe;YACjE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAoB,GAApB;QAEE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,aAAG;YAC3B,IAAI;YACH,IAAG,GAAG,CAAC,gBAAgB,EAAE;gBAC3B,yCAAyC;gBACtC,OAAO,IAAI;aACX;YACD,OAAO,KAAK,CAAC;QAEd,CAAC,CAAC,CAAC;IAEN,CAAC;IACD,6CAAiB,GAAjB;QAEE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,aAAG;YAC5B,IAAI;YACF,IAAG,GAAG,CAAC,aAAa,EAAE;gBACpB,gCAAgC;gBAClC,OAAO,IAAI;aACV;YACD,OAAO,KAAK,CAAC;QAEf,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,+CAAmB,GAAnB,UAAoB,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,UAAU,EAAE;YACxD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;SAC3B;aAAM,IAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,mBAAmB,EAAE;YAC1E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;aAAM;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,0BAA0B;YAC1B,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEtD,mDAAmD;YACnD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;YAElD,yCAAyC;YACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAE/C,kDAAkD;YAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,kDAAkD;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI;gBAEjC,yCAAyC;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,oBAAoB;oBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;6BACV,QAAQ,EAAE;6BACV,WAAW,EAAE;6BACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3B,CAAC,OAAK,EACN;wBACA,gDAAgD;wBAChD,0BAA0B;wBAC1B,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;SACR;IAEH,CAAC;IACM,qCAAS,GAAhB;QACE,8EAA8E;QAC9E,kBAAkB;QAClB,sCAAsC;QACtC,gGAAgG;QAChG,8CAA8C;IAChD,CAAC;IACM,0CAAc,GAArB,UAAsB,IAAS;QAC7B,oBAAoB;QACpB,IAAI,CAAC,cAAc,CAAC;IACtB,CAAC;IACM,2CAAe,GAAtB,UAAuB,IAAS;QAC9B,oBAAoB;IACtB,CAAC;IACM,wCAAY,GAAnB,UAAoB,IAAiB;QAEnC,iCAAiC;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,sDAAsD;QACtD,6DAA6D;IAE/D,CAAC;IACM,sCAAU,GAAjB,UAAkB,IAAS;QAEzB,oBAAoB;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACM,6CAAiB,GAAxB,UAAyB,KAAU;QAAnC,iBAMC;QAJC,qBAAqB;QACrB,KAAK,CAAC,OAAO,CAAC,aAAG;YACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAa,GAAb,UAAc,KAAW;QAAzB,iBAIC;QAHG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,aAAG;YAC7B,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IACA,+CAAmB,GAAnB,UAAoB,CAAC,EAAE,GAAG;QAA1B,iBA2BC;QA1BC,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EACnB;YACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,YAAU,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;gBAC/B,IAAI,mBAAmB,GAA0B,QAAQ,CAAC,cAAc,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;gBAChG,IAAG,CAAC,mBAAmB,CAAC,OAAO;oBAAE,YAAU,GAAG,KAAK,CAAC;gBACpD,sCAAsC;YACxC,CAAC,CAAC,CAAC;YACH,IAAG,YAAU;gBACb,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC1F,sBAAsB,CAAC,OAAO,GAAG,IAAI,CAAC;YACtC,8DAA8D;SAC/D;aACI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACzB,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC1F,IAAG,sBAAsB,CAAC,OAAO;gBAAE,sBAAsB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,aAAa;gBAC9C,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE;oBAC7B,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;iBAC9C;YACH,CAAC,CAAC,CAAC;SACJ;QACD,8DAA8D;QAC9D,8CAA8C;QAC9C,GAAG;IACL,CAAC;IACD,+CAAmB,GAAnB,UAAoB,CAAC,EAAE,GAAG;QAA1B,iBAoCA;QAnCC,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EACnB;YACE,IAAG,GAAG,CAAC,aAAa,EAAE;gBACpB,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;;oBAE9B,IAAI,UAAU,GAAG,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAE;oBACzC,CAAC,aAAI,GAAC,UAAU,IAAG,CAAC,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,cAAc,KAAE,CAAC;oBACxD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAE,CAAC;gBAE5B,CAAC,CAAC;aACH;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,YAAU,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,KAAK;gBAC/B,IAAI,mBAAmB,GAA0B,QAAQ,CAAC,cAAc,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC;gBACnG,IAAG,CAAC,mBAAmB,CAAC,OAAO;oBAAE,YAAU,GAAG,KAAK,CAAC;gBACpD,sCAAsC;YACxC,CAAC,CAAC,CAAC;YACH,IAAG,YAAU;gBACb,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YAC7F,sBAAsB,CAAC,OAAO,GAAG,IAAI,CAAC;YACtC,8DAA8D;SAC/D;aACI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACzB,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YAC7F,IAAG,sBAAsB,CAAC,OAAO;gBAAE,sBAAsB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,EAAE,EAAE,aAAa;gBAC3C,IAAI,EAAE,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE;oBAC1B,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;iBACjD;YACH,CAAC,CAAC,CAAC;SACJ;QACD,8DAA8D;QAC9D,8CAA8C;QAC9C,GAAG;IACL,CAAC;IACA,kDAAsB,GAAtB,UAAuB,CAAC;QAAxB,iBAWC;QAVA,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAG;gBACrB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;SACN;aAAM,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAG,IAAM,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;SACtD;IAEF,CAAC;IACD,kDAAsB,GAAtB,UAAuB,CAAC;QAAxB,iBAWC;QAVA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAG;gBACxB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACN;aAAM,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAG,IAAM,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;SACzD;IAEF,CAAC;IACD,yCAAa,GAAb;QACE,IAAG,IAAI,CAAC,eAAe,EAAC;YACvB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;SACxE;QAAC,IAAG,CAAC,IAAI,CAAC,eAAe,EAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;SAClE;IAEH,CAAC;IACD,wDAA4B,GAA5B;QACE,sBAAsB;QACtB,GAAG;QACH,0FAA0F;QAC1F,oDAAoD;QACpD,mBAAmB;QACnB,6BAA6B;QAC7B,4CAA4C;QAC5C,MAAM;QACN,KAAK;QACL,iCAAiC;IACnC,CAAC;IACD,oCAAQ,GAAR,UAAS,KAAa;QAEpB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9B;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,kCAAM,GAAN,UAAO,KAAK;QACV,wBAAwB;IAC1B,CAAC;IACD,wCAAY,GAAZ,UAAa,GAAQ;QAGnB,mDAAmD;QACnD,IAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QAElD,yCAAyC;QACzC,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE/C,kDAAkD;QAClD,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvC,kDAAkD;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI;YAEjC,yCAAyC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,oBAAoB;gBACpB,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACV,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3B,CAAC,KAAK,EACN;oBACA,gDAAgD;oBAChD,0BAA0B;oBAC1B,OAAO,IAAI,CAAC;iBACb;aACF;QACH,CAAC,CAAC,CAAC;QAEH,+DAA+D;IACjE,CAAC;IACD,wCAAY,GAAZ,UAAa,CAAC;QAAd,iBAiBC;QAfC,iBAAiB;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBACvD,IAAG,GAAG,EAAE;oBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;iBACtB;qBAAM,IAAI,CAAC,GAAG,EAAE;oBACf,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;gBAED,mBAAmB;YACrB,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IACD,gDAAoB,GAApB;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAExG,CAAC;IACD,2CAAe,GAAf;QAAA,iBAYC;QAXD,IAAI;QACF,8GAA8G;QAC9G,+CAA+C;QAC/C,sDAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC;aAC5C,IAAI,CACH,oEAAY,CAAC,GAAG,CAAC,EACjB,2DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAC/B;aACA,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,+CAAmB,GAAnB,UAAoB,KAAK;QAEvB,wBAAwB;QACxB,qCAAqC;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAEA,sBAAI,4CAAa;aAAjB,cAAsB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAI,uCAAQ;aAAZ,cAAiB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAwB,CAAC,CAAC,CAAC;;;OAAA;IACtE,sBAAI,+CAAgB;aAApB,cAAyB,OAAO,IAAI,CAAC,aAAa,CAAC,aAA0B,CAAC,CAAC,CAAC;;;OAAA;IAChF,sBAAI,2CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAsB,CAAC,CAAC,CAAC;;;OAAA;;gBAzhBvD,yFAAiB;gBAClB,6EAAW;gBACL,wDAAY;gBACjB,yFAAiB;gBAClB,wFAAY;gBACR,oGAAgB;gBACpB,iGAAe;gBACf,2FAAa;gBACb,8FAAc;gBACT,0FAAkB;gBACpB,wDAAS;gBAChB,0DAAW;gBACR,+DAAc;;IAtCV;QAApB,+DAAS,CAAC,QAAQ,CAAC;;qDAAa;IATtB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gMAAwC;;SAEzC,CAAC;yCAoCmB,yFAAiB;YAClB,6EAAW;YACL,wDAAY;YACjB,yFAAiB;YAClB,wFAAY;YACR,oGAAgB;YACpB,iGAAe;YACf,2FAAa;YACb,8FAAc;YACT,0FAAkB;YACpB,wDAAS;YAChB,0DAAW;YACR,+DAAc;OA/CpB,iBAAiB,CA8jB7B;IAAD,wBAAC;CAAA;AA9jB6B;;;;;;;;;;;;;AC/B9B;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACiB;AAE4B;AAO/F;IAmBE,gCACU,EAAe,EACf,MAA2B;QAD3B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAqB;QApBrC,qBAAgB,GAAG,KAAK;QACjB,WAAM,GAAwB,EAAE,CAAC;QAExC,kBAAa,GAAG;YACd,WAAW,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,CAAC;YACpC,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,eAAe,EAAE,EAAE,EAAG,CAAC;SACrD;QAgBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7B,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAvBD,sDAAqB,GAArB;QAAA,iBAUC;QATC,MAAM;QACA,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAwB;YACnE,gDAAgD;YACvD,SAAS;YACF,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACnB,kCAAkC;YACjC,iDAAiD;YACjD,IAAI;QACL,CAAC,CAAC,CAAC;IACZ,CAAC;IAeD,yCAAQ,GAAR;IACA,CAAC;IAED,uCAAM,GAAN;QAEE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IACD,mDAAkB,GAAlB;QAEE,IAAI,CAAC,gBAAgB,GAAG,IAAI;IAC9B,CAAC;IAED,qDAAoB,GAApB,UAAqB,OAAO;QAE1B,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACZ,YAAY,EAAE,CAAC,EAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IACD,kDAAiB,GAAjB,UAAkB,OAAO;QAEvB,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACZ,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,CAAC,EAAE,CAAC;SACtB,CAAC,CAAC;IACP,CAAC;IACD,sDAAqB,GAArB,UAAsB,KAAK;QACzB,IAAI,OAAO,GAAc,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;QAChE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzB,CAAC;IACD,mDAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,OAAO,GAAc,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC9D,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzB,CAAC;IACD,sCAAsC;IACtC,KAAK;IACL,4BAA4B;IAC5B,IAAI;IACJ,0CAAS,GAAT;QAAA,iBAiBC;QAfC,IAAI,QAAQ,GAAc,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;QACjE,IAAI,MAAM,GAAc,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,WAAC;YAEtC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,YAAY,EAAE,CAAC,CAAC,YAAY;aAC7B,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,WAAC;YAEpC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACxB,UAAU,EAAE,CAAC,CAAC,UAAU;gBACxB,eAAe,EAAE,CAAC,CAAC,eAAe;aACnC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qDAAoB,GAApB,UAAqB,OAAO,EAAE,KAAK;QAEjC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAExF,CAAC;IACD,sBAAI,2DAAuB;aAA3B;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAc,CAAC;QAC3D,CAAC;;;OAAA;IACD,sBAAI,wDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;QACzD,CAAC;;;OAAA;;gBAjFa,0DAAW;gBACP,4GAAmB;;IArB1B,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,+MAA6C;;SAE9C,CAAC;yCAqBc,0DAAW;YACP,4GAAmB;OArB1B,sBAAsB,CAsGlC;IAAD,6BAAC;CAAA;AAtGkC;;;;;;;;;;;;;ACVnC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCnB;AACyB;AAOnE;IAyBE,oBAAoB;IACpB,iCAAiC;IACjC,IAAI;IACJ,sBAAsB;IACtB,+CAA+C;IAC/C,IAAI;IAEJ,8BAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QA9BnC,SAAI,GAAG;YACL,MAAM,EAAE;gBACN;oBACE,qBAAqB,EAAE,qBAAqB;oBAC5C,uBAAuB,EAAE;wBACvB;4BACE,WAAW,EAAE,uBAAuB;yBACrC;qBACF;iBACF;gBACD,KAAK;gBACL,mDAAmD;gBACnD,4BAA4B;gBAC5B,QAAQ;gBACR,iDAAiD;gBACjD,QAAQ;gBACR,MAAM;gBACN,IAAI;aACL;SACF;QAYC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC1B,CAAC;QAEF,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,0CAAW,GAAX;QAEE,IAAI,OAAO,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACrD,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACZ,qBAAqB,EAAE,CAAC,EAAE,CAAC;YAC3B,uBAAuB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC3C,CAAC,CACH;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,KAAK;QACf,IAAI,OAAO,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACrD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,gDAAiB,GAAjB,UAAkB,OAAO;QACvB,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACZ,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;IACP,CAAC;IAED,gDAAiB,GAAjB,UAAkB,OAAO,EAAE,KAAK;QAC9B,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACzB,CAAC;IAGD,wCAAS,GAAT;QAAA,iBASC;QAPC,IAAI,OAAO,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;YAExB,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACzB,qBAAqB,EAAE,CAAC,CAAC,qBAAqB;gBAC9C,uBAAuB,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;aAAE,CAAC,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;IAED,6CAAc,GAAd,UAAe,CAAC;QAAhB,iBASC;QAPC,IAAI,GAAG,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC;QAC3B,CAAC,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAC;YACjC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrB,WAAW,EAAE,CAAC,CAAC,WAAW;aAC3B,CAAC,CAAC;QACL,CAAC,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC;;gBAxDuB,0DAAW;;IAhCxB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,yMAA2C;;SAE5C,CAAC;yCAiCwB,0DAAW;OAhCxB,oBAAoB,CAyFhC;IAAD,2BAAC;CAAA;AAzFgC;;;;;;;;;;;;;ACTjC;AAAe,6GAA8C,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGuB;AACN;AACG;AACJ;AACe;AACjD;AAI4C;AACtD;AACkB;AAE4C;AAO/F;IA6BE,2BACU,MAA2B,EAC3B,UAA4B,EAC5B,MAAuB,EACvB,MAAqB,EACrB,MAAsB,EACtB,WAA+B,EAC/B,SAAoB,EACpB,EAAe;QAPf,WAAM,GAAN,MAAM,CAAqB;QAC3B,eAAU,GAAV,UAAU,CAAkB;QAC5B,WAAM,GAAN,MAAM,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,cAAS,GAAT,SAAS,CAAW;QACpB,OAAE,GAAF,EAAE,CAAa;QApClB,aAAQ,GAAG,EAAE,CAAC;QAErB,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,UAAU,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YAC9B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,SAAS,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;SAI7B,CAAC,CAAC;QAIH,cAAS,GAAQ,EAAE,CAAC;QACb,SAAI,GAAwB,EAAE,CAAC;QAC/B,WAAM,GAAwB,EAAE,CAAC;QAGxC,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAW,WAAW,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAEzB,mBAAc,GAAwB,EAAE,CAAC;QACzC,YAAO,GAAmB,EAAE,CAAC;QAC7B,cAAS,GAAoB,EAAE,CAAC;QAChC,kBAAa,GAAoB,EAAE,CAAC;QACpC,aAAQ,GAAmB,EAAE,CAAC;QAY5B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAC3E,+DAA+D;QAC/D,kDAAkD;QAClD,wBAAwB;QACxB,IAAI;QACJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAEC,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;YACpB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,CAAC,CAAC;YAClB,iBAAiB,EAAE,IAAI;YACvB,SAAS,EAAE,GAAG;YACd,cAAc,EAAE,CAAC;YACjB,qBAAqB,EAAE,QAAQ;YAC/B,8BAA8B,EAAE,mBAAmB;YACnD,wBAAwB,EAAE,KAAK;YAC/B,sBAAsB,EAAE,KAAK;YAC7B,WAAW,EAAE,KAAK;SACnB,CAAC;QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,IAAI;YACrB,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC7B,4BAA4B;YAC3B,+BAA+B;SAClC,CAAC,CAAC;IACP,CAAC;IACD,qEAAqE;IACrE,oCAAQ,GAAR;QAAA,iBAiBC;QAdC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAG1B,+DAA+D;QAC/D,2EAA2E;QAC3E,mDAAmD;QAEjD,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,eAAK;YAElE,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,0BAA0B;YAC1B,wBAAwB;QAE9B,CAAC,CAAC,CAAC;IACf,CAAC;IACD,oCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IACA,0CAAc,GAAd,UAAe,IAAY,EAAE,IAAS;QACpC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,sCAAU,GAAV,UAAW,IAAoB;QAE7B,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,GAAG;YACf,gCAAgC;YAChC,4EAA4E;YAC5E,mFAAmF;SACpF,CAAC,CAAC;IACL,CAAC;IACD,2CAAe,GAAf,UAAgB,IAAoB;QACrC,KAAK;QACL,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjB,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,EAAE;SACH,CAAC,CAAC;IACL,CAAC;IACD,0CAAc,GAAd,UAAe,CAAC;QAEd,IAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,cAAc,EAAE;YAC3C,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACjC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAClC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;iBAChE,CAAC,CAAC,CAAC;aACP;SACJ;aAAM;YACH,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACjC;SACJ;IACH,CAAC;IACD,iDAAqB,GAArB;QAAA,iBAUC;QATC,MAAM;QACA,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAwB;YACnE,gDAAgD;YACvD,SAAS;YACF,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAE,aAAa;YAC/B,iDAAiD;YACjD,IAAI;QACL,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBAoBC;QAlBM,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAqB;YAErE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAE,qBAAqB,EAAG,KAAI,CAAC,SAAS,CAAC,CAAC;YACrD,QAAQ,CAAC;YACT,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAC1B,wBAAwB;YACtB,IAAI,CAAC,OAAO,CAAC,WAAC;gBACZ,QAAQ,CAAC;gBACL,IAAI,QAAQ,GAAkB,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAI,CAAC;gBAChI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACzB,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC,cAAc,GAAG,KAAK,GAAI,CAAC,CAAC,WAAW,GAAI,IAAI,CAAC;gBAChG,IAAG,QAAQ,CAAC,WAAW,IAAI,IAAI,EAAE;oBAC/B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACrC,mCAAmC;iBACjC;YACP,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACV,CAAC;IACD,2CAAe,GAAf;QAAA,iBAMC;QALA,OAAO;QACF,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAoB;YAC9D,UAAU;YACF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IACD,4CAAgB,GAAhB;QAAA,iBAQC;QAPC,MAAM;QACA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAoB;YAC1D,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxB,QAAQ;YACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACZ,CAAC;IACD,0CAAc,GAAd,UAAe,KAAK;QAElB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAE7E,CAAC;IAED,+CAAmB,GAAnB,UAAoB,CAAC;QAEnB,IAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,SAAS,EAAE;YACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAClC;aAAM;YACD,0BAA0B;YAC1B,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEtD,iDAAiD;YACjD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;YAElD,yCAAyC;YACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAE/C,kDAAkD;YAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,iDAAiD;YACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI;gBAEjC,yCAAyC;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,oBAAoB;oBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;6BACV,QAAQ,EAAE;6BACV,WAAW,EAAE;6BACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3B,CAAC,OAAK,EACN;wBACA,gDAAgD;wBAChD,wBAAwB;wBACxB,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;SACR;IAEH,CAAC;IACM,qCAAS,GAAhB;QACE,8EAA8E;QAC9E,kBAAkB;QAClB,sCAAsC;QACtC,gGAAgG;QAChG,8CAA8C;IAChD,CAAC;IACM,0CAAc,GAArB,UAAsB,IAAS;QAE7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC;IACtB,CAAC;IACM,2CAAe,GAAtB,UAAuB,IAAS;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACM,wCAAY,GAAnB,UAAoB,IAAoB;QAEtC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,sDAAsD;QACtD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAI,IAAI,CAAC,YAAY,CAAC,CAAC;IAE3D,CAAC;IACM,sCAAU,GAAjB,UAAkB,IAAS;QAEzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEI,uCAAW,GAAlB,UAAmB,KAAU;QAG3B,yBAAyB;QACzB,oDAAoD;QACpD,MAAM;QALR,iBAcC;QANC,KAAK,CAAC,OAAO,CAAC,aAAG;YACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YAE7C,OAAO,CAAC,GAAG,CAAE,uBAAuB,EAAG,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAE,6BAA6B,EAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IACM,yCAAa,GAApB,UAAqB,KAAW;QAAhC,iBAIC;QAHG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,aAAG;YAC7B,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEA,oCAAQ,GAAR,UAAS,CAAC,EAAE,GAAG;QACb,GAAG;QACH,kBAAkB;QAClB,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EACnB;YACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,YAAU,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;gBAC/B,IAAI,mBAAmB,GAA0B,QAAQ,CAAC,cAAc,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;gBAChG,IAAG,CAAC,mBAAmB,CAAC,OAAO;oBAAE,YAAU,GAAG,KAAK,CAAC;gBACpD,oCAAoC;YACtC,CAAC,CAAC,CAAC;YACH,IAAG,YAAU;gBACb,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC1F,sBAAsB,CAAC,OAAO,GAAG,IAAI,CAAC;YACtC,4DAA4D;SAC7D;aACI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACzB,IAAI,sBAAsB,GAAsB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC1F,IAAG,sBAAsB,CAAC,OAAO;gBAAE,sBAAsB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,aAAa;gBAC/C,oCAAoC;gBACpC,mDAAmD;gBACnD,KAAK;YACN,CAAC,CAAC,CAAC;SACJ;QACD,4DAA4D;QAC5D,4CAA4C;QAC5C,GAAG;IACL,CAAC;IACD,yCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IACD,wDAA4B,GAA5B;QACE,oBAAoB;QACpB,GAAG;QACH,0FAA0F;QAC1F,oDAAoD;QACpD,mBAAmB;QACnB,6BAA6B;QAC7B,0CAA0C;QAC1C,MAAM;QACN,KAAK;QACL,+BAA+B;IACjC,CAAC;IACD,oCAAQ,GAAR,UAAS,KAAa;QAEpB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9B;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,kCAAM,GAAN,UAAO,KAAK;QACV,sBAAsB;IACxB,CAAC;IACD,wCAAY,GAAZ,UAAa,GAAQ;QAGnB,iDAAiD;QACjD,IAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QAElD,yCAAyC;QACzC,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE/C,kDAAkD;QAClD,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvC,iDAAiD;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI;YAEjC,yCAAyC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,oBAAoB;gBACpB,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACV,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3B,CAAC,KAAK,EACN;oBACA,gDAAgD;oBAChD,wBAAwB;oBACxB,OAAO,IAAI,CAAC;iBACb;aACF;QACH,CAAC,CAAC,CAAC;QAEH,+DAA+D;IACjE,CAAC;IAED,8CAAkB,GAAlB;QACC,8CAA8C;QAC9C,yGAAyG;IAE1G,CAAC;IACD,2CAAe,GAAf;QAAA,iBAYC;QAXD,IAAI;QACF,8GAA8G;QAC9G,+CAA+C;QAC/C,sDAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC;aAC5C,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAC/B;aACA,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,+CAAmB,GAAnB,UAAoB,KAAK;QACvB,GAAG;QACH,sBAAsB;QACtB,mCAAmC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACrC,CAAC;IAID,sBAAI,2CAAY;QAFd,qDAAqD;QACxD,oDAAoD;aACnD,cAAqB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACtD,sBAAI,wCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAmB,CAAC,CAAC,CAAC;;;OAAA;IACjE,sBAAI,2CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAsB,CAAC,CAAC,CAAC;;;OAAA;IACvE,sBAAI,2CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAsB,CAAC,CAAC,CAAC;;;OAAA;;gBAxXtD,6GAAmB;gBACf,oGAAgB;gBACpB,iGAAe;gBACf,2FAAa;gBACb,8FAAc;gBACT,0FAAkB;gBACpB,wDAAS;gBAChB,0DAAW;;IAzBJ;QAApB,+DAAS,CAAC,QAAQ,CAAC;;qDAAa;IAZtB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gMAAwC;;SAEzC,CAAC;yCA+BkB,6GAAmB;YACf,oGAAgB;YACpB,iGAAe;YACf,2FAAa;YACb,8FAAc;YACT,0FAAkB;YACpB,wDAAS;YAChB,0DAAW;OArCd,iBAAiB,CA6Z7B;IAAD,wBAAC;CAAA;AA7Z6B;;;;;;;;;;;;;ACvB9B;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,4MAA4C;;SAE7C,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;ACPlC;AAAe,mEAAI,0BAA0B,OAAO,qBAAqB,sBAAsB,mBAAmB,wBAAwB,0BAA0B,yBAAyB,wBAAwB,sBAAsB,kCAAkC,QAAQ,4BAA4B,sBAAsB,sBAAsB,kBAAkB,wBAAwB,0BAA0B,yBAAyB,wBAAwB,sBAAsB,kCAAkC,8BAA8B,KAAK,6BAA6B,uBAAuB,uBAAuB,0BAA0B,KAAK,uBAAuB,sBAAsB,uBAAuB,0BAA0B,KAAK,uBAAuB,4BAA4B,0BAA0B,0BAA0B,KAAK,qBAAqB,uCAAuC,oBAAoB,sBAAsB,mCAAmC,2CAA2C,KAAK,mDAAmD,2tE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtgC;AAC1B;AACiC;AACO;AACnB;AAC9B;AACC;AACiB;AAGsB;AACe;AAE/B;AAEY;AAC5C;AACkB;AACpB;AAC0B;AACkB;AAEA;AAS3E;IAqCE,6BACU,aAAgC,EAChC,MAAyB,EACzB,SAAuB,EACvB,IAAgB,EAChB,OAAyB,EACzB,KAAwB,EACxB,KAA0B,EAC1B,MAAyB,EACzB,WAAwB,EACxB,MAAc,EACd,OAA0B,EAC1B,YAA0B,EAC1B,EAAe,EACf,WAA+B;QAb/B,kBAAa,GAAb,aAAa,CAAmB;QAChC,WAAM,GAAN,MAAM,CAAmB;QACzB,cAAS,GAAT,SAAS,CAAc;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAkB;QACzB,UAAK,GAAL,KAAK,CAAmB;QACxB,UAAK,GAAL,KAAK,CAAqB;QAC1B,WAAM,GAAN,MAAM,CAAmB;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAoB;QAjD3C,0BAA0B;QACxB,mBAAc,GAAG,EAAE,CAAC;QAEpB,wBAAmB,GAAC,CAAC,CAAC;QAEtB,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAE;QAAE,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAC;QAAC,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAC;QAAC,iBAAY,GAAG,CAAC,CAAC;QAClI,mBAAc,GAAG,CAAC,CAAC;QAAC,qBAAgB,GAAE,CAAC,CAAC;QAAC,cAAS,GAAG,CAAC,CAAC;QAAC,aAAQ,GAAG,CAAC,CAAC;QAAC,eAAU,GAAG,CAAC,CAAC;QAAC,oBAAe,GAAC,CAAC,CAAC;QAAC,gBAAW,GAAC,CAAC,CAAC;QAIhH,gBAAW,GAAsB,EAAE,CAAC;QACpC,cAAS,GAAoB,EAAE,CAAC;QAChC,mBAAc,GAAyB,EAAE,CAAC;QAC1C,qBAAgB,GAAoB,EAAE,CAAC;QACvC,aAAQ,GAAoB,EAAE,CAAC;QAC/B,iBAAY,GAAoB,EAAE,CAAC;QAC1C,cAAS,GAAW,CAAC,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACf,YAAO,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,UAAK,GAAW,WAAW,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAIzB,YAAO,GAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,gBAAW,GAAS,IAAI,IAAI,EAAE,CAAC;QAC/B,aAAQ,GAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,WAAM,GAAS,IAAI,IAAI,EAAE,CAAC;QAC1B,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,EAAE,CAAC;QAoBhB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,IAAI;YACf,SAAS,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,eAAe,EAAE,KAAK;YACtB,SAAS,EAAE,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,IAAI,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,6CAAe,GAAf;QACG,QAAQ,CAAC;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC/G,6BAA6B;QAC7B,qCAAqC;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAEzH,CAAC;IACD,yDAA2B,GAA3B,UAA4B,KAAK;QAE/B,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC,EAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAC,KAAK,EAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvG,iCAAiC;QACjC,0BAA0B;IAC5B,CAAC;IAED,4CAAc,GAAd;QAAA,iBASC;QARC,wDAAwD;QACxD,SAAS;QACT,wBAAwB;QACxB,KAAK;QACL,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,aAAG;YAE5C,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAkB,GAAlB;QAAA,iBASC;QAPG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAC;YACrB,KAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,CAAC;QAC1C,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,8CAAgB,GAAhB;QAAA,iBA0DC;QAxDE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,QAAQ,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAqB;YAChF,QAAQ,CAAC;YACT,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,aAAG;gBACX,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;oBAClC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC5B,iCAAiC;iBAC9B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;oBACtC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAChC,kCAAkC;iBAC5B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACjF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,gCAAgC;iBAC1B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC/E,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC/B,oCAAoC;iBAC7B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;oBAC1F,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC5B,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAClF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,iCAAiC;iBAC9B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACpF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9B,sCAAsC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC7E,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC7B,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC9E,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,iCAAiC;iBAC9B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACnF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAChF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9B,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACnF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC3B,kCAAkC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC9E,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC7B,mCAAmC;iBAC/B;YACP,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QACjC,CAAC,EAAE,aAAG;YACL,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACzC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;IAEN,CAAC;IACD,+CAAiB,GAAjB;QAAA,iBAKC;QAJC,IAAI;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,IAAqB;YAC5D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACN,CAAC;IACD,iDAAmB,GAAnB;QAAA,iBAkFC;QAjFE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAsB;YAC7D,IAAI,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAG,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;gBACpC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;gBACtC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;wBACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;wBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;gBACpC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;gBAChC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;wBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;gBAChC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;wBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;wBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;gBACnC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;wBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;gBACnC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;wBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;QAEJ,CAAC,CAAC,CAAC;IACN,CAAC;IACD,oDAAsB,GAAtB;QAAA,iBAMC;QALC,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAyB;YACvE,MAAM;YACF,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACN,CAAC;IACD,iDAAmB,GAAnB,UAAoB,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IACD,mDAAqB,GAArB,UAAsB,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC7E,CAAC;IACD,sCAAQ,GAAR,UAAS,MAAM;QAAf,iBAiCC;QAhCC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;YACjE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,4BAAkB;gBACzE,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBACvD,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,kFAAkF;gBAClF,iCAAiC;gBACjC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAC9B,CAAC,EAAE,eAAK;gBACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAI,KAAK,CAAC,OAAO,CAAC,CAAC;gBACzD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAE;oBAC9D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;iBAC1C;YACP,CAAC,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;YAErC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,4BAAkB;gBACxG,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAChE,CAAC,EAAE,eAAK;gBACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAI,KAAK,CAAC,OAAO,CAAC,CAAC;gBACzD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAE;oBAC9D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;iBAC1C;YACP,CAAC,CAAC,CAAC;SACV;IACH,CAAC;IACD,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IACD,0CAAY,GAAZ,UAAa,CAAC;QAEV,IAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1D;IACL,CAAC;IACD,8CAAgB,GAAhB,UAAiB,WAAgB;QAC/B,kBAAkB;QAClB,IAAG,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,EAAC;YACxD,gGAAgG;YAChG,OAAO,IAAI,CAAC;SACf;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;IACD,gDAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBAcC;QAbC,QAAQ,CAAC;QACT,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG;YACd,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,CAAC,OAAO,GAAG,UAAU,KAAK;YAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IACD,iFAAiF;IACjF,yCAAW,GAAX,UAAY,CAAC;QAAb,iBAaC;QAZA,GAAG;QACF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAG;gBACvB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;aAAM,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAG,IAAM,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;SACxD;QACC,6BAA6B;IACjC,CAAC;IACD,sCAAQ,GAAR,UAAS,CAAC,EAAE,GAAG;QAAf,iBA4BC;QA3BC,GAAG;QACH,kBAAkB;QAClB,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EACnB;YACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,YAAU,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;gBACnC,IAAI,qBAAqB,GAAsB,QAAQ,CAAC,cAAc,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;gBAChG,IAAG,CAAC,qBAAqB,CAAC,OAAO;oBAAE,YAAU,GAAG,KAAK,CAAC;gBACtD,6BAA6B;YAC/B,CAAC,CAAC,CAAC;YACH,IAAG,YAAU;gBACb,IAAI,wBAAwB,GAAsB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YAC9F,wBAAwB,CAAC,OAAO,GAAG,IAAI,CAAC;YACxC,6BAA6B;SAC9B;aACI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACzB,IAAI,wBAAwB,GAAsB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YAC9F,IAAG,wBAAwB,CAAC,OAAO;gBAAE,wBAAwB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC9E,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,aAAa;gBAClD,IAAI,OAAO,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,EAAE;oBACvC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;oBACjD,8BAA8B;iBAC7B;YACH,CAAC,CAAC,CAAC;SACJ;QACF,6BAA6B;IAC9B,CAAC;IACD,2CAAa,GAAb;QACE,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,EAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;SACjD;aAAK;YACJ,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;SAC5E;IACH,CAAC;IACD,4DAA8B,GAA9B;QACE,oBAAoB;QACpB,GAAG;QACH,0FAA0F;QAC1F,oDAAoD;QACpD,mBAAmB;QACnB,+BAA+B;QAC/B,0CAA0C;QAC1C,MAAM;QACN,KAAK;QACL,+BAA+B;IACjC,CAAC;IACD,sCAAQ,GAAR,UAAS,KAAa;QACrB,GAAG;QACF,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9B;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,oCAAM,GAAN,UAAO,KAAK;QACV,sBAAsB;IACxB,CAAC;IACD,kDAAoB,GAApB;QACE,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IACD,iDAAmB,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IACD,2CAAa,GAAb,UAAc,GAAkB;QAE5B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClE,2DAA2D;QAC3D,6DAA6D;QAI7D,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAGnD,CAAC;IACD,6CAAe,GAAf,UAAgB,GAAkB;QAAlC,iBA0BC;QAzBC,mDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,cAAc,GAAG,GAAG,CAAC,SAAS,GAAG,qCAAqC;YAC7E,IAAI,EAAE,MAAM;YACZ,2EAA2E;YAC3E,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;YACtB,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAG,kCAAkC;YACtD,sBAAsB,EAAE,EAAE;YAC1B,gBAAgB,EAAG,2BAA2B;YAC9C,qBAAqB,EAAE,EAAE;SAC1B,CAAC,CAAC,IAAI,CAAC,aAAG;YACT,IAAG,GAAG,CAAC,KAAK,EAAC;gBACf,MAAM;gBACF,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,GAAkB;oBACpE,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;oBAClD,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAC;wBAC7D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;qBAC1C;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC;IACD,kDAAoB,GAApB;QAAA,iBA4CC;QA3CD,IAAI;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,EAAE;YACvC,kFAAkF;SAEhF;aAAM;YACL,IAAI,KAAG,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,YAAE;gBAC9B,KAAG,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,mDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,2CAA2C;gBACjF,IAAI,EAAE,MAAM;gBACZ,6EAA6E;gBAC7E,eAAe,EAAE,IAAI;gBACrB,gBAAgB,EAAE,IAAI;gBACtB,YAAY,EAAE,KAAK;gBACnB,iBAAiB,EAAG,+BAA+B;gBACnD,sBAAsB,EAAE,EAAE;gBAC1B,gBAAgB,EAAG,4BAA4B;gBAC/C,qBAAqB,EAAE,EAAE;aAC1B,CAAC,CAAC,IAAI,CAAC,aAAG;gBACT,IAAG,GAAG,CAAC,KAAK,EAAC;oBAChB,OAAO;oBACF,KAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAG,CAAC,CAAC,SAAS,CAAC,UAAC,MAAuB;wBACxE,KAAI,CAAC,gBAAgB,EAAE,CAAC;wBAC3B,mHAAmH;wBAChH,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;wBAC3B,gBAAgB;wBAChB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC,EAAE,eAAK;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAC;4BACnE,gGAAgG;yBAC3F;oBACH,CAAC,CAAC,CAAC;iBAEJ;YAEH,CAAC,CAAC;SAEH;IACH,CAAC;IACD,6CAAe,GAAf,UAAgB,KAAK,EAAE,SAAS,EAAE,YAAY;QACxC,QAAQ,CAAC;QACT,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,IAAM,QAAQ,GAAG,MAAM,GAAG,SAAS,GAAG,GAAG,GAAG,YAAY,GAAI,MAAM,CAAC;QAEnE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,GAAkB;YAC5D,QAAQ,CAAC;YACX,YAAY,CAAC,IAAI,GAAK,GAAG,CAAC,OAAO,CAAC;YAClC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACjC,YAAY,CAAC,KAAK,EAAE,CAAC;QAEtB,CAAC,CAAC,CAAC;IACT,CAAC;IACD,wCAAwC;IACxC,6CAAe,GAAf;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAClC,CAAC,CAAC;IACJ,CAAC;IACF,0CAAY,GAAZ,UAAa,OAAY;QAAzB,iBAwDC;QAvDE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,4BAA4B;QACzB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,QAAyB;YACvF,QAAQ,CAAC;YACZ,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC,aAAG;gBACf,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;oBAC/B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;oBACpC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACjF,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC3E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;oBACrF,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC7E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACzE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACzE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC7E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC3E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChC;YACP,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAA/C,CAA+C,CAAC,CAAC;YAErF,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,WAAC,IAAG,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC;YAChC,IAAM,aAAa,GAAG,iBAAO,IAAI,WAAI,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,GAAG,CAAC,EAA7B,CAA6B,CAAC,EAAhD,CAAgD,CAAC;YAElF,IAAM,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAErD,IAAI,CAAC,OAAO,CAAC,aAAG;gBACZ,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAG,OAAO,GAAG,KAAI,CAAC,QAAQ,IAAI,OAAO,GAAG,KAAI,CAAC,MAAM,EAAC;oBAClD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACzB;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACN,CAAC;IAED,uCAAuC;IAEvC,IAAI;IAEJ,0CAAY,GAAZ,UAAa,GAAQ;QAEnB,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;YAChC,iDAAiD;YACjD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;YAClD,yCAAyC;YACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACvD,kDAAkD;YAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,kDAAkD;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAI;gBAC3C,yCAAyC;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,oBAAoB;oBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;6BACV,QAAQ,EAAE;6BACV,WAAW,EAAE;6BACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3B,CAAC,OAAK,EACN;wBACA,gDAAgD;wBAChD,wBAAwB;wBACxB,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YACpC,iDAAiD;YACjD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;YAClD,yCAAyC;YACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACvD,kDAAkD;YAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,kDAAkD;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAI;gBAC3C,yCAAyC;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,oBAAoB;oBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;wBACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;6BACV,QAAQ,EAAE;6BACV,WAAW,EAAE;6BACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3B,CAAC,OAAK,EACN;wBACA,gDAAgD;wBAChD,wBAAwB;wBACxB,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;SACF;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,+DAA+D;IACjE,CAAC;IACD,kDAAoB,GAApB,UAAqB,CAAC;QAAtB,iBAyEC;QAvEC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,UAAU,EAAE;YACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC7B;aAAK;YACE,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC9B,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC7D,iDAAiD;gBACjD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;gBAClD,yCAAyC;gBACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACvD,kDAAkD;gBAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,kDAAkD;gBAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAI;oBAC3C,yCAAyC;oBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;wBAC9B,oBAAoB;wBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;4BACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;iCACV,QAAQ,EAAE;iCACV,WAAW,EAAE;iCACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC3B,CAAC,OAAK,EACN;4BACA,gDAAgD;4BAChD,wBAAwB;4BACxB,OAAO,IAAI,CAAC;yBACb;qBACF;oBAED,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;oBAC/B,KAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;aACnC;iBAAK;gBACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAClC,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC7D,iDAAiD;gBACjD,IAAM,OAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;gBAClD,yCAAyC;gBACzC,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACvD,kDAAkD;gBAClD,IAAM,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,kDAAkD;gBAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAI;oBAC3C,yCAAyC;oBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,EAAE,CAAC,EAAE,EAAE;wBAC9B,oBAAoB;wBACpB,IACE,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;4BACZ,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC;iCACV,QAAQ,EAAE;iCACV,WAAW,EAAE;iCACb,OAAO,CAAC,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC3B,CAAC,OAAK,EACN;4BACA,gDAAgD;4BAChD,wBAAwB;4BACxB,OAAO,IAAI,CAAC;yBACb;qBACF;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;aACnC;SAER;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IACD,gDAAkB,GAAlB,UAAmB,CAAC;QAElB,8BAA8B;QAC9B,UAAU;QACV,IAAI;QACJ,sBAAsB;QACtB,qBAAqB;QAErB,kEAAkE;QAClE,iCAAiC;QACjC,UAAU;QACV,4BAA4B;QAC5B,0CAA0C;QAE1C,0FAA0F;QAC1F,qCAAqC;QACrC,YAAY;QACZ,YAAY;QACZ,mCAAmC;QACnC,GAAG;IAEL,CAAC;IACD,oDAAsB,GAAtB,UAAuB,CAAO;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IACD,6CAAe,GAAf;QAAA,iBASC;QARG,8GAA8G;QAC9G,+CAA+C;QAC/C,uDAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC;aAC5C,IAAI,CAAE,oEAAY,CAAC,GAAG,CAAC,EAAE,2DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAAE;aACvD,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAClC,CAAC;IAED,sBAAI,+CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,6CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAgB,CAAC,CAAG,CAAC;;;OAAA;IACjF,sBAAI,2CAAU;aAAd,cAAoB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC,CAAE,CAAC;;;OAAA;IAC7E,sBAAI,gDAAe;aAAnB,cAAwB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAgB,CAAC,CAAC,CAAC;;;OAAA;IACrF,sBAAI,2CAAU;aAAd,cAAoB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC,CAAC,CAAC;;;OAAA;IAE5E,4CAAc,GAAd,UAAe,OAAO;QACpB,IAAI,EAAE,GAAG,KAAK;QACd,IAAG,OAAO,IAAI,IAAI,EAAC;YACjB,EAAE,GAAG,IAAI,CAAC;SACX;QAAA,CAAC;QACF,OAAO,EAAE,CAAC;IACZ,CAAC;;gBAjvBwB,yFAAiB;gBACxB,yFAAiB;gBACd,uEAAY;gBACjB,+DAAU;gBACN,gGAAe;gBAClB,uGAAiB;gBACjB,6GAAmB;gBAClB,8EAAiB;gBACZ,oFAAW;gBAChB,sDAAM;gBACL,wEAAiB;gBACZ,uDAAY;gBACtB,0DAAW;gBACF,2FAAkB;;IA1BpB;QAApB,+DAAS,CAAC,QAAQ,CAAC;;uDAAa;IAzBtB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,sMAA0C;;SAE3C,CAAC;yCAuCyB,yFAAiB;YACxB,yFAAiB;YACd,uEAAY;YACjB,+DAAU;YACN,gGAAe;YAClB,uGAAiB;YACjB,6GAAmB;YAClB,8EAAiB;YACZ,oFAAW;YAChB,sDAAM;YACL,wEAAiB;YACZ,uDAAY;YACtB,0DAAW;YACF,2FAAkB;OAnD9B,mBAAmB,CA0xB/B;IAAD,0BAAC;CAAA;AA1xB+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/ByF;AACzH,qGAAqG;AAChE;AACI;AAQzC,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,mDAAG;IACH,qDAAI;IACJ,mDAAG;AACL,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAED,wBAAwB;AACxB,YAAY;AACZ,YAAY;AACZ,IAAI;AAOJ;IA8CE,iCAAsB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACpC,CAAC;gCA/CU,uBAAuB;IAClC,CAAC;IAgDM,0CAAQ,GAAf;QACC,IAAI;QACJ,IAAI,CAAC,OAAO,GAAG,qBAAmB,yBAAuB,CAAC,SAAS,EAAI,CAAC;IAEzE,CAAC;IAEM,iDAAe,GAAtB;QAEK,IAAI,4CAAY,CAAC,MAAI,IAAI,CAAC,OAAS,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAEvG,CAAC;IACN,CAAC;IAEF,6CAAW,GAAX,UAAY,OAAsB;QAE7B,IAAI,4CAAY,CAAC,MAAI,IAAI,CAAC,OAAS,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACzG,CAAC;IAEL,CAAC;;IAjEM,iCAAS,GAAG,CAAC,CAAC;;gBA4CS,sDAAM;;IAzCpC;QADC,2DAAK,EAAE;;0DACa;IAGrB;QADC,2DAAK,EAAE;;6DACgB;IAGxB;QADC,2DAAK,EAAE;;+DACkB;IAM1B;QADC,2DAAK,EAAE;;oEACgC;IAMxC;QADC,2DAAK,EAAE;;wEACwB;IAIhC;QADC,2DAAK,EAAE;;iEACiB;IAGzB;QADC,2DAAK,EAAE;;oEACsB;IAG9B;QADC,2DAAK,EAAE;;oEACuB;IAG/B;QADC,2DAAK,EAAE;;+DACkB;IAG1B;QADC,2DAAK,EAAE;;uEACsC;IAG9C;QADC,2DAAK,EAAE;;2DACe;IA1CZ,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,yOAA+C;YAC/C,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;yCA+C8B,sDAAM;OA9CzB,uBAAuB,CAoEnC;IAAD,8BAAC;CAAA;AApEmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BqF;AACpF;AACI;AAOzC,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,iDAAG;IACH,mDAAI;IACJ,iDAAG;AACL,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;AAQD;IA0CE,gCAAsB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACpC,CAAC;+BA3CU,sBAAsB;IACjC,CAAC;IA4CM,yCAAQ,GAAf;QAEE,IAAI,CAAC,OAAO,GAAG,oBAAkB,wBAAsB,CAAC,SAAS,EAAI,CAAC;QACtE,CAAC;IACH,CAAC;IAEM,gDAAe,GAAtB;QAEM,IAAI,4CAAY,CAAC,MAAI,IAAI,CAAC,OAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACvG,CAAC;IACN,CAAC;IAEF,4CAAW,GAAX,UAAY,OAAsB;QAEhC,IAAI,4CAAY,CAAC,MAAI,IAAI,CAAC,OAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QACxG,CAAC;IACH,CAAC;;IA3DM,gCAAS,GAAG,CAAC,CAAC;;gBAwCS,sDAAM;;IArCpC;QADC,2DAAK,EAAE;;yDACa;IAGrB;QADC,2DAAK,EAAE;;4DACgB;IAGxB;QADC,2DAAK,EAAE;;8DACkB;IAM1B;QADC,2DAAK,EAAE;;kEAC8B;IAGtC;QADC,2DAAK,EAAE;;sEACuB;IAG/B;QADC,2DAAK,EAAE;;gEACiB;IAGzB;QADC,2DAAK,EAAE;;mEACsB;IAG9B;QADC,2DAAK,EAAE;;mEACuB;IAG/B;QADC,2DAAK,EAAE;;8DACkB;IAG1B;QADC,2DAAK,EAAE;;qEACoC;IAG5C;QADC,2DAAK,EAAE;;0DACe;IAtCZ,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,sOAA8C;YAC9C,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;yCA4C8B,sDAAM;OA1CzB,sBAAsB,CA8DlC;IAAD,6BAAC;CAAA;AA9DkC;;;;;;;;;;;;;ACrBnC;AAAe,0EAAW,mCAAmC,0CAA0C,QAAQ,+CAA+C,uc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvE;AACrC;AACiC;AACO;AACnB;AAC9B;AACC;AACiB;AAGsB;AACe;AAE9B;AAEW;AAG9C;AAC0B;AACkB;AAEA;AAG2C;AACI;AAU1H;IAqDE,0BACU,aAAgC,EAChC,MAAyB,EACzB,SAAuB,EACvB,IAAgB,EAChB,OAAyB,EACzB,KAAwB,EACxB,KAA0B,EAC1B,MAAyB,EACzB,WAAwB,EACxB,MAAc,EACd,OAA0B,EAC1B,YAA0B,EAC1B,EAAe,EACf,WAA+B;QAb/B,kBAAa,GAAb,aAAa,CAAmB;QAChC,WAAM,GAAN,MAAM,CAAmB;QACzB,cAAS,GAAT,SAAS,CAAc;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAkB;QACzB,UAAK,GAAL,KAAK,CAAmB;QACxB,UAAK,GAAL,KAAK,CAAqB;QAC1B,WAAM,GAAN,MAAM,CAAmB;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAoB;QAvDzC,oBAAoB;QAEpB,mBAAc,GAAG,EAAE,CAAC;QAEpB,wBAAmB,GAAC,CAAC,CAAC;QAEtB,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAE;QAAE,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAC;QAAC,iBAAY,GAAG,CAAC,CAAC;QAAC,kBAAa,GAAG,CAAC,CAAC;QAAC,iBAAY,GAAG,CAAC,CAAC;QAClI,mBAAc,GAAG,CAAC,CAAC;QAAC,qBAAgB,GAAE,CAAC,CAAC;QAAC,cAAS,GAAG,CAAC,CAAC;QAAC,aAAQ,GAAG,CAAC,CAAC;QAAC,eAAU,GAAG,CAAC,CAAC;QAAC,oBAAe,GAAC,CAAC,CAAC;QAAC,gBAAW,GAAC,CAAC,CAAC;QAKhH,gBAAW,GAAsB,EAAE,CAAC;QACpC,cAAS,GAAoB,EAAE,CAAC;QAChC,mBAAc,GAAyB,EAAE,CAAC;QAC1C,qBAAgB,GAAoB,EAAE,CAAC;QACvC,mBAAc,GAAoB,EAAE,CAAC;QACrC,uBAAkB,GAAoB,EAAE,CAAC;QACzC,qBAAgB,GAAoB,EAAE,CAAC;QACvC,yBAAoB,GAAoB,EAAE,CAAC;QAClD,cAAS,GAAW,CAAC,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACf,YAAO,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,UAAK,GAAW,WAAW,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAIzB,YAAO,GAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,gBAAW,GAAS,IAAI,IAAI,EAAE,CAAC;QAC/B,aAAQ,GAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,WAAM,GAAS,IAAI,IAAI,EAAE,CAAC;QAC1B,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,EAAE,CAAC;QAGlB,cAAS,GAAG,CAAC,CAAC;QAmBZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,IAAI;YACf,SAAS,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,IAAI,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE1B,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,sCAAW,GAAX;IACA,CAAC;IAED,0CAAe,GAAf,UAAgB,OAAe;QAE7B,IAAI,CAAC,sBAAsB,GAAG,yFAAc,CAAC,GAAG,CAAC;QAEjD,IAAI,CAAC,0BAA0B,GAAG;YAChC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;YACjI,MAAM,EAAE,OAAO;SAChB,CAAC;QACF,QAAQ,CAAC;QACT,IAAI,CAAC,oBAAoB,GAAG;YAC1B,iBAAiB,EAAE,EAAE;YACrB,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;aAChB;YACD,MAAM,EAAE,OAAO;SAChB,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG;YAC7B,CAAC,+BAA+B,EAAE;oBAChC,iBAAiB,EAAE,CAAC;oBACpB,KAAK,EAAE;wBACL,qBAAqB,EAAE,UAAU,KAAK;4BACpC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClB,CAAC;qBACF;iBACF,CAAC;SACH,CAAC;QAEF,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC;QAErB,IAAG,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;YAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAAE;QACxE,IAAG,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;YAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAAE;QACxE,IAAG,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;YAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAAE;QACxE,IAAG,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;YAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAAE;QAExE,IAAI,CAAC,6BAA6B,GAAG;YACnC,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,wBAAwB,EAAE;YACrD,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,0BAA0B,EAAE;YACvD,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,2BAA2B,EAAE;YACxD,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,2BAA2B,EAAE;YACxD,gBAAgB;SACjB,CAAC;IACJ,CAAC;IACD,2CAAgB,GAAhB,UAAiB,OAAQ;QAAzB,iBAoIC;QAnIC,QAAQ,CAAC;QACT,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,IAAI,IAAI,GAAG,SAAS,CAAC;QACpB,IAAI,CAAC,uBAAuB,GAAG,4FAAe,CAAC,GAAG,CAAC;QACnD,IAAI,CAAC,2BAA2B,GAAG;YAClC,MAAM,EAAE,EAAE;YACV,MAAM,EAAE;YACN,WAAW;YACX,WAAW;YACX,UAAU;aACX;SACD,CAAC;QACF,IAAG,OAAO,IAAI,SAAS,EAAC;YACvB,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;gBAEzB,IAAG,CAAC,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;oBAC/D,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBAC1D;YACH,CAAC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,KAAK;YACtD,IAAI,GAAG,GAAG,EAAE,CAAC;YAEb,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,IAAI;gBACxB,QAAQ,CAAC;gBACT,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;gBACnB,IAAG,GAAG,CAAC,MAAM,IAAI,EAAE,EAAC;oBAElB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACvB,KAAI,CAAC,SAAS,IAAI,GAAG,CAAC,QAAQ,CAAC;oBAC/B,IAAG,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,EAAE,EAAE;wBAC1E,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAE9D,GAAG,GAAG,EAAE,CAAC;wBACT,QAAQ,CAAC;qBACV;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IAAG,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAC;gBACrD,KAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClD,GAAG,GAAG,EAAE,CAAC;gBACT,QAAQ,CAAC;aACV;QAEL,CAAC,CAAC,CAAC;QAGH,+DAA+D;QAC/D,gCAAgC;QAChC,qBAAqB;QACrB,4DAA4D;QAC5D,uBAAuB;QACvB,MAAM;QACN,4BAA4B;QAC5B,cAAc;QACd,0DAA0D;QAC1D,mBAAmB;QACnB,QAAQ;QACR,MAAM;QACN,cAAc;QAEd,iCAAiC;QACjC,4BAA4B;QAC5B,cAAc;QACd,mEAAmE;QACnE,8BAA8B;QAC9B,6CAA6C;QAC7C,gCAAgC;QAChC,uCAAuC;QACvC,oBAAoB;QACpB,gCAAgC;QAChC,uCAAuC;QACvC,oBAAoB;QACpB,gCAAgC;QAChC,uCAAuC;QACvC,oBAAoB;QACpB,4BAA4B;QAC5B,WAAW;QACX,QAAQ;QACR,0DAA0D;QAC1D,cAAc;QACd,MAAM;QACR,oEAAoE;QACpE,gBAAgB;QAChB,kEAAkE;QAClE,gCAAgC;QAChC,4BAA4B;QAC5B,eAAe;QACf,wCAAwC;QACxC,uBAAuB;QACvB,oBAAoB;QACpB,UAAU;QACV,QAAQ;QACR,MAAM;QAGL,oBAAoB;QACpB,IAAI,CAAC,oBAAoB,GAAG;YAC1B,iBAAiB,EAAE,EAAE;YACrB,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;aAChB;YACD,MAAM,EAAE,OAAO;SAChB,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG;YAC7B,CAAC,+BAA+B,EAAE;oBAChC,iBAAiB,EAAE,CAAC;oBACpB,KAAK,EAAE;wBACL,qBAAqB,EAAE,UAAU,KAAK;4BACpC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClB,CAAC;qBACF;iBACF,CAAC;SACH,CAAC;QACF,IAAI,CAAC,+BAA+B,GAAG;YACrC,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,wBAAwB,EAAE;YAC7D,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,0BAA0B,EAAE;SAClE,CAAC;QAEH,qFAAqF;QACrF,qFAAqF;QACrF,qFAAqF;QAErF,IAAI,CAAC,+BAA+B,GAAG;YACrC,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,wBAAwB,EAAE;SAItD,CAAC;IACJ,CAAC;IACD,8CAAmB,GAAnB,UAAoB,OAAQ;QAC5B,KAAK;QACH,IAAI,MAAM,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvC,IAAG,OAAO,IAAI,IAAI,EAAC;YACjB,MAAM,GAAG,OAAO,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,+CAAoB,GAApB,UAAqB,OAAQ;QAC9B,MAAM;QACH,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAE;YAC5B,MAAM;YACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QACF,OAAO,MAAM,CAAC;IACjB,CAAC;IACD,0CAAe,GAAf;QAEG,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpC,4BAA4B;QAC5B,sCAAsC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC/G,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAE1H,CAAC;IACD,sDAAsD;IAEtD,sDAA2B,GAA3B,UAA4B,KAAK;QAE/B,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC,EAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAC,KAAK,EAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvG,iCAAiC;QACjC,0BAA0B;IAC5B,CAAC;IACD,yCAAc,GAAd;QAAA,iBASC;QARC,wDAAwD;QACxD,SAAS;QACT,wBAAwB;QACxB,KAAK;QACL,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,aAAG;YAE5C,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAkB,GAAlB;QAAA,iBASC;QAPG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAC;YAC3B,KAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,CAAC;QAC1C,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,2CAAgB,GAAhB;QAAA,iBA2DC;QAzDE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAqB;YAEhF,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,aAAG;gBACX,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;oBAClC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,sCAAsC;iBACnC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;oBACtC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtC,kCAAkC;iBAC5B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACjF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACxC,gCAAgC;iBAC1B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC/E,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrC,oCAAoC;iBAC7B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;oBAC1F,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAClF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAChC,iCAAiC;iBAC9B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACpF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,sCAAsC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC7E,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACnC,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC9E,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAChC,iCAAiC;iBAC9B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACnF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACjC,gCAAgC;iBAC7B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAChF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,oCAAoC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACnF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACjC,kCAAkC;iBAC/B;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC9E,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACnC,mCAAmC;iBAC/B;YACP,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QACjC,CAAC,EAAE,aAAG;YACL,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACzC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;IAEN,CAAC;IACD,4CAAiB,GAAjB;QAAA,iBAKC;QAJC,IAAI;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,IAAqB;YAC5D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACN,CAAC;IACD,8CAAmB,GAAnB;QAAA,iBAkFC;QAjFE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAsB;YAC7D,IAAI,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC3C,IAAG,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;gBACpC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;gBACtC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;wBACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;wBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;gBACpC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBACjC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;gBAChC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;wBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;gBAChC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;wBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAClC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;wBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;gBACnC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;wBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;YAAC,IAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;gBACnC,GAAG,CAAC,OAAO,CAAC,YAAE;oBACZ,IAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;wBAC9B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3B;gBACH,CAAC,CAAC,CAAC;aACJ;QAEJ,CAAC,CAAC,CAAC;IACN,CAAC;IACD,iDAAsB,GAAtB;QAAA,iBAMC;QALC,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAyB;YACvE,MAAM;YACF,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACN,CAAC;IACD,8CAAmB,GAAnB,UAAoB,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IACD,gDAAqB,GAArB,UAAsB,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC7E,CAAC;IACD,mCAAQ,GAAR,UAAS,MAAM;QAAf,iBAiCC;QAhCC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;YACjE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,4BAAkB;gBACzE,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBACvD,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,kFAAkF;gBAClF,iCAAiC;gBACjC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAC9B,CAAC,EAAE,eAAK;gBACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAI,KAAK,CAAC,OAAO,CAAC,CAAC;gBACzD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAE;oBAC9D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;iBAC1C;YACP,CAAC,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;YAErC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,4BAAkB;gBACxG,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAChE,CAAC,EAAE,eAAK;gBACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAI,KAAK,CAAC,OAAO,CAAC,CAAC;gBACzD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAE;oBAC9D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;iBAC1C;YACP,CAAC,CAAC,CAAC;SACV;IACH,CAAC;IACD,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IACD,uCAAY,GAAZ,UAAa,CAAC;QAEV,IAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1D;IACL,CAAC;IACD,2CAAgB,GAAhB,UAAiB,WAAgB;QAC/B,kBAAkB;QAClB,IAAG,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,EAAC;YACxD,gGAAgG;YAChG,OAAO,IAAI,CAAC;SACf;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;IACD,6CAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBAgBC;QAfC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG;YACf,OAAO,CAAC,GAAG,CAAE,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/C,uCAAuC;YACpC,6CAA6C;YAC7C,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxD,8DAA8D;QAChE,CAAC,CAAC;QACF,MAAM,CAAC,OAAO,GAAG,UAAU,KAAK;YAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IACD,iFAAiF;IACjF,sCAAW,GAAX,UAAY,CAAC;QAAb,iBAaC;QAZA,GAAG;QACF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAChB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAG;gBAC7B,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;aAAM,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAG,IAAM,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;SAC9D;QACC,6BAA6B;IACjC,CAAC;IACD,mCAAQ,GAAR,UAAS,CAAC,EAAE,GAAG;QAAf,iBA4BC;QA3BC,GAAG;QACH,kBAAkB;QAClB,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EACnB;YACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,YAAU,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;gBACzC,IAAI,qBAAqB,GAAsB,QAAQ,CAAC,cAAc,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;gBAChG,IAAG,CAAC,qBAAqB,CAAC,OAAO;oBAAE,YAAU,GAAG,KAAK,CAAC;gBACtD,6BAA6B;YAC/B,CAAC,CAAC,CAAC;YACH,IAAG,YAAU;gBACb,IAAI,wBAAwB,GAAsB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YAC9F,wBAAwB,CAAC,OAAO,GAAG,IAAI,CAAC;YACxC,6BAA6B;SAC9B;aACI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACzB,IAAI,wBAAwB,GAAsB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YAC9F,IAAG,wBAAwB,CAAC,OAAO;gBAAE,wBAAwB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC9E,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,aAAa;gBAClD,IAAI,OAAO,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,EAAE;oBACvC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;oBACjD,8BAA8B;iBAC7B;YACH,CAAC,CAAC,CAAC;SACJ;QACF,6BAA6B;IAC9B,CAAC;IACD,wCAAa,GAAb;QACE,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,EAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;SACjD;aAAK;YACJ,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;SAC5E;IACH,CAAC;IACD,yDAA8B,GAA9B;QACE,oBAAoB;QACpB,GAAG;QACH,0FAA0F;QAC1F,oDAAoD;QACpD,mBAAmB;QACnB,+BAA+B;QAC/B,0CAA0C;QAC1C,MAAM;QACN,KAAK;QACL,+BAA+B;IACjC,CAAC;IACD,mCAAQ,GAAR,UAAS,KAAa;QACrB,GAAG;QACF,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9B;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,iCAAM,GAAN,UAAO,KAAK;QACV,sBAAsB;IACxB,CAAC;IACD,+CAAoB,GAApB;QACE,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IACD,8CAAmB,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IACD,wCAAa,GAAb,UAAc,GAAkB;QAE9B,8BAA8B;QAC5B,kCAAkC;QAElC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAExD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAGnD,CAAC;IACD,0CAAe,GAAf,UAAgB,GAAkB;QAAlC,iBA0BC;QAzBC,mDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,cAAc,GAAG,GAAG,CAAC,SAAS,GAAG,qCAAqC;YAC7E,IAAI,EAAE,MAAM;YACZ,2EAA2E;YAC3E,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;YACtB,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAG,kCAAkC;YACtD,sBAAsB,EAAE,EAAE;YAC1B,gBAAgB,EAAG,2BAA2B;YAC9C,qBAAqB,EAAE,EAAE;SAC1B,CAAC,CAAC,IAAI,CAAC,aAAG;YACT,IAAG,GAAG,CAAC,KAAK,EAAC;gBACf,MAAM;gBACF,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,GAAkB;oBACpE,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;oBAClD,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAC;wBAC7D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;qBAC1C;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC;IACD,+CAAoB,GAApB;QAAA,iBA4CC;QA3CD,IAAI;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,EAAE;YACvC,kFAAkF;SAEhF;aAAM;YACL,IAAI,KAAG,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,YAAE;gBAC9B,KAAG,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,mDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,2CAA2C;gBACjF,IAAI,EAAE,MAAM;gBACZ,6EAA6E;gBAC7E,eAAe,EAAE,IAAI;gBACrB,gBAAgB,EAAE,IAAI;gBACtB,YAAY,EAAE,KAAK;gBACnB,iBAAiB,EAAG,+BAA+B;gBACnD,sBAAsB,EAAE,EAAE;gBAC1B,gBAAgB,EAAG,4BAA4B;gBAC/C,qBAAqB,EAAE,EAAE;aAC1B,CAAC,CAAC,IAAI,CAAC,aAAG;gBACT,IAAG,GAAG,CAAC,KAAK,EAAC;oBAChB,OAAO;oBACF,KAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAG,CAAC,CAAC,SAAS,CAAC,UAAC,MAAuB;wBACxE,KAAI,CAAC,gBAAgB,EAAE,CAAC;wBAC3B,mHAAmH;wBAChH,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;wBAC3B,gBAAgB;wBAChB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC,EAAE,eAAK;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAmC,CAAC,EAAC;4BACnE,gGAAgG;yBAC3F;oBACH,CAAC,CAAC,CAAC;iBAEJ;YAEH,CAAC,CAAC;SAEH;IACH,CAAC;IACD,0CAAe,GAAf,UAAgB,OAAO,EAAE,SAAS,EAAE,YAAY;QAC1C,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,IAAM,QAAQ,GAAG,MAAM,GAAG,SAAS,GAAG,GAAG,GAAG,YAAY,GAAI,MAAM,CAAC;QAEnE,YAAY,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IACD,wCAAwC;IACxC,yCAAc,GAAd,UAAe,OAAY,EAAE,QAAQ;QAEpC,0BAA0B;QAF3B,iBA0GC;QAtGA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,QAAyB;YAE1F,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,KAAI,CAAC,oBAAoB,GAAI,EAAE,CAAC;YAEhC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC,aAAG;gBACf,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;oBAC/B,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;oBACpC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACjF,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC3E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;oBACrF,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC7E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACzE,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACzE,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC7E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC/E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAAC,IAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC3E,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxC;YACN,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAEtB,IAAG,QAAQ,IAAI,YAAY,EAAC;gBAEtB,KAAI,CAAC,gBAAgB,GAAI,EAAE,CAAC;gBAC5B,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,aAAG;oBACrC,KAAK;oBACH,IAAG,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBAClD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBACjD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBACjD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB,EAAE;wBACjD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACjC;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,oBAAoB,GAAI,KAAI,CAAC,gBAAgB,CAAC;gBACnD,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,aAAG;oBACnC,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAG,OAAO,GAAG,KAAI,CAAC,QAAQ,IAAI,OAAO,GAAG,KAAI,CAAC,MAAM,EAAC;wBAClD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACjC;gBACH,CAAC,CAAC,CAAC;gBACH,IAAG,KAAI,CAAC,2BAA2B,IAAI,IAAI,EAAC;oBAC3C,KAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC7C,KAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,EAAE,CAAC;iBAC7C;gBACH,aAAa;gBACX,IAAM,mBAAmB,GAAG,KAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBACxH,aAAa;gBACX,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;gBAC3C,KAAI,CAAC,2BAA2B,CAAC;aAEtC;iBAAM,IAAG,QAAQ,IAAI,WAAW,EAAE;gBAC7B,CAAC;gBACD,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAG;oBACjC,IAAG,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBAClD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBACjD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB;wBACjD,GAAG,CAAC,gBAAgB,IAAI,OAAO,CAAC,iBAAiB,EAAE;wBACjD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC/B;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,0BAA0B,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC5C,IAAI,MAAM,GAAQ,KAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;gBACzE,WAAW;gBACX,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC7B,KAAI,CAAC,0BAA0B,CAAC;aACrC;YACD,CAAC;YACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,iDAAsB,GAAtB;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IACD,kDAAuB,GAAvB;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IACD,iDAAsB,GAAtB,UAAuB,CAAO,EAAE,IAAI,EAAE,KAAK;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC/G,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACvH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,sBAAI,4CAAc;aAAlB,cAAuB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,0CAAY;aAAhB,cAAqB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAgB,CAAC,CAAG,CAAC;;;OAAA;IACjF,sBAAI,wCAAU;aAAd,cAAoB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC,CAAE,CAAC;;;OAAA;IAC7E,sBAAI,6CAAe;aAAnB,cAAwB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAgB,CAAC,CAAC,CAAC;;;OAAA;IACrF,sBAAI,wCAAU;aAAd,cAAoB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC,CAAC,CAAC;;;OAAA;IAE5E,yCAAc,GAAd,UAAe,OAAO;QACpB,IAAI,EAAE,GAAG,KAAK;QACd,IAAG,OAAO,IAAI,IAAI,EAAC;YACjB,EAAE,GAAG,IAAI,CAAC;SACX;QAAA,CAAC;QACF,OAAO,EAAE,CAAC;IACZ,CAAC;;gBA50BwB,yFAAiB;gBACxB,yFAAiB;gBACd,uEAAY;gBACjB,+DAAU;gBACN,gGAAe;gBAClB,uGAAiB;gBACjB,6GAAmB;gBAClB,8EAAiB;gBACZ,oFAAW;gBAChB,sDAAM;gBACL,wEAAiB;gBACZ,uDAAY;gBACtB,0DAAW;gBACF,2FAAkB;;IA5BpB;QAApB,+DAAS,CAAC,QAAQ,CAAC;;oDAAa;IAvCtB,gBAAgB;QAN5B,+DAAS,CAAC;YACT,SAAS,EAAE,CAAE,iGAAsB,EAAE,oGAAuB,CAAE;YAC9D,QAAQ,EAAE,aAAa;YACvB,wMAAuC;;SAExC,CAAC;yCAuDyB,yFAAiB;YACxB,yFAAiB;YACd,uEAAY;YACjB,+DAAU;YACN,gGAAe;YAClB,uGAAiB;YACjB,6GAAmB;YAClB,8EAAiB;YACZ,oFAAW;YAChB,sDAAM;YACL,wEAAiB;YACZ,uDAAY;YACtB,0DAAW;YACF,2FAAkB;OAnE9B,gBAAgB,CAq4B5B;IAAD,uBAAC;CAAA;AAr4B4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCsB;AACD;AACK;AAGvD,kJAAkJ;AAKlJ;IAEE,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,oCAAQ,GAAR;IACA,CAAC;IAED,0CAAc,GAAd,UAAe,IAAU,EAAE,EAAQ;QAChC,QAAQ,CAAC;QACV,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI;YACV,EAAE,EAAE,EAAE;SACP;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oEAAW,CAAC,MAAM,GAAG,gCAAgC,EAAE,IAAI,CAAC,CAAC;IACrF,CAAC;IACD,0CAAc,GAAd,UAAe,EAAU;QACrB,QAAQ,CAAC;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oEAAW,CAAC,MAAM,GAAG,0BAA0B,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC;IACF,sCAAU,GAAV,UAAW,IAAmB;QAC5B,QAAQ,CAAC;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oEAAW,CAAC,MAAM,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IACD,uCAAW,GAAX,UAAY,EAAU,EAAE,IAAmB;QACzC,QAAQ,CAAC;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oEAAW,CAAC,MAAM,GAAG,WAAW,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IACD,yCAAa,GAAb,UAAc,EAAE;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oEAAW,CAAC,MAAM,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IACjE,CAAC;IACD,kDAAsB,GAAtB,UAAuB,IAAI;QACzB,QAAQ,CAAC;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oEAAW,CAAC,MAAM,GAAG,kCAAkC,EAAE,IAAI,CAAE,CAAC;IACxF,CAAC;IAED,iDAAqB,GAArB,UAAsB,IAAqB;QAA3C,iBAmCC;QAlCC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAC3G,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAE;QAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;QAC5G,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,UAAU,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;YACvB,YAAY;YACX,IAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAC;gBAE5C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACtC,YAAY;gBACZ,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,QAAQ,IAAI,KAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBAC3E,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAE;gBAEvK,MAAM,CAAC,IAAI,CAAC,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAE,CAAC,CAAC;gBAErK,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBACnF,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAC;gBAAC,QAAQ,GAAG,CAAC,CAAE;gBAAC,QAAQ,GAAG,CAAC,CAAC;aAErF;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,yDAA6B,GAA7B,UAA8B,GAAG,EAAE,KAAa;QAC9C,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAG;YACvB,IAAG,GAAG,CAAC,gBAAgB,IAAI,GAAG,EAAC;gBAC7B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAM,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5D,IAAG,GAAG,CAAC,SAAS,KAAK,SAAS,IAAI,QAAQ,IAAI,KAAK,EAAC;oBAChD,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC;iBAC3B;aACF;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,sCAAsC;IAEtC,sDAA0B,GAA1B,UAA2B,IAAqB,EAAE,IAAI,EAAE,EAAE;QAA1D,iBAgBC;QAfC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,OAAO,CAAC,UAAC,GAAkB,EAAE,KAAK;YACnC,IAAI,MAAM,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;YAEtD,MAAM,CAAC,QAAQ,GAAG,KAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,cAAc,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACtG,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,gBAAgB,CAAC;YACtC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,cAAc,CAAC;YACnC,IAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,MAAM,IAAI,GAAG,CAAC,cAAc,EAAjC,CAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,OAAO,IAAI,GAAG,CAAC,gBAAgB,EAApC,CAAoC,CAAC,CAAC,EAAE;gBAClI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAC;QACL,aAAa;QACX,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,sDAA0B,GAA1B,UAA2B,GAAG,EAAE,EAAE,EAAE,IAAI,EAAC,EAAE;QACzC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,GAAkB;YACvC,IAAG,GAAG,CAAC,gBAAgB,IAAI,GAAG,IAAI,GAAG,CAAC,cAAc,IAAI,EAAE,EAAC;gBACzD,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAG,GAAG,CAAC,cAAc,KAAK,EAAE,IAAK,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,EAAE,EAAC;oBAC9D,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC;iBAC3B;aACF;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;;gBAjHyB,+DAAU;;IAFzB,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,iBAAiB,CAoH7B;IAAD,wBAAC;CAAA;AApH6B;;;;;;;;;;;;;ACV9B;AAAe,mEAAI,0BAA0B,OAAO,+CAA+C,uX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjD;AAOlD;IAEE;QAKA,SAAI,GAAG,QAAQ,CAAC;QAEhB,UAAK,GAAG;YACN,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;SACpC,CAAC;QACF,UAAK,GAAG;YACN,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;SACpC,CAAC;IAjBc,CAAC;IAEjB,4CAAQ,GAAR;IACA,CAAC;IAgBM,mDAAe,GAAtB,UAAuB,IAAI,EAAE,IAAI;QAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAEM,gDAAY,GAAnB,UAAoB,SAAS;QAA7B,iBAgBC;QAfC,IAAI,SAAS,KAAK,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,QAAQ,EAAX,CAAW,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,QAAQ,EAAX,CAAW,CAAC,CAAC;SAClD;IACH,CAAC;IAEM,2CAAO,GAAd,UAAe,SAAS;QACtB,IAAI,SAAS,KAAK,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,kBAAO,IAAI,CAAC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,kBAAO,IAAI,CAAC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;IACH,CAAC;IAnDU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,wNAAgD;;SAEjD,CAAC;;OACW,yBAAyB,CAqDrC;IAAD,gCAAC;CAAA;AArDqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL4B;AACM;AACA;AACN;AACS;AACM;AACZ;AACA;AACI;AAEiB;AAEA;AAC1F,0EAA0E;AACI;AACJ;AAC1E,0GAA0G;AAC1G,6GAA6G;AAC7G,0EAA0E;AAC1E,4FAA4F;AAG5F,IAAM,MAAM,GAAW,EAAE,CAAC;AAEnB,IAAM,eAAe,GAAW,CAAC;QACtC,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACE,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,8EAAiB;aAC7B,EAAC;gBACA,IAAI,EAAE,SAAS;gBACjB,6BAA6B;gBAC3B,SAAS,EAAE,uFAAgB;gBAC7B,MAAM;gBACN,8BAA8B;gBAC9B,yCAAyC;aACxC,EAAC;gBACA,IAAI,EAAE,cAAc;gBACtB,6BAA6B;gBAC3B,SAAS,EAAE,2FAAqB;aACjC,EAAC;gBACA,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,oFAAmB;aAC/B,EAAC;gBACA,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,oFAAmB;aAC/B,EAAC;gBACA,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,8EAAiB;aAC7B,EAAC;gBACA,IAAI,EAAE,aAAa;gBACnB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,uFAAoB;aAChC,EAAC;gBACA,IAAI,EAAE,eAAe;gBACrB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,6FAAsB;aAClC,EAAC;gBACA,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,iFAAkB;aAC9B,EAAC;gBACA,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,iFAAkB;aAC9B,EAAC;gBACA,IAAI,EAAE,kBAAkB;gBACxB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,sGAAyB;aACrC,EAAC;gBACA,IAAI,EAAE,kBAAkB;gBACxB,WAAW,EAAE,CAAC,sFAAS,CAAC;gBACxB,SAAS,EAAE,uGAAyB;aAErC;YAED,KAAK;YACL,wBAAwB;YACxB,mCAAmC;YACnC,IAAI;SAEP;KACF,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFsC;AACM;AAEO;AACY;AACM;AACA;AACzB;AACJ;AACsB;AACZ;AACa;AACrB;AAC4B;AAC7B;AACH;AACa;AACgB;AACJ;AACS;AACM;AACZ;AACrE,2DAA2D;AACU;AACqB;AACA;AACT;AACjF,0EAA0E;AACI;AACJ;AAC6B;AACG;AAC1G,4FAA4F;AAC5F,qEAAqE;AA4CrE;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAzC3B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oHAAsB;gBACtB,uHAAuB;gBACvB,8EAAiB;gBACjB,oFAAmB;gBACnB,oFAAmB;gBACnB,+EAAiB;gBACjB,wFAAoB;gBACpB,8FAAsB;gBACtB,kFAAkB;gBAClB,kFAAkB;gBAClB,uGAAyB;gBACzB,uGAAyB,EAAE,2FAAqB,EAAE,uFAAgB;aACnE;YACD,OAAO,EAAE;gBACP,2DAAW;gBACX,mEAAmB;gBACnB,oFAA2B;gBAC3B,oEAAc;gBACd,wDAAc;gBACd,8EAAqB;gBACrB,kEAAmB;gBACnB,2DAAW;gBACX,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,kEAAe,CAAC;gBACtC,6DAAgB,CAAC,OAAO,CAAC;oBACvB,aAAa,EAAE,qEAAwB,CAAC,cAAc;oBACpD,wBAAwB,EAAE,iBAAiB;oBAC3C,oBAAoB,EAAE,KAAK;oBAC3B,aAAa,EAAE,SAAS;oBACxB,eAAe,EAAE,SAAS;oBAC1B,cAAc,EAAE,SAAS;iBAC5B,CAAC;gBACF,yIAAyI;gBACzI,uDAAW,CAAC,OAAO,CAAC,EAAC,WAAW,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC;gBACvE,0DAAW;gBACX,4EAAkB,CAAC,OAAO,EAAE;gBAC5B,0EAAgB,CAAC,OAAO,EAAE;aAC3B;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC7E5B;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,sMAA0C;;SAE3C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;ACPhC;AAAe,mEAAI,0BAA0B,OAAO,+CAA+C,uX;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjD;AAOlD;IAEE;QAKA,UAAK,GAAG,0BAA0B,CAAC;QAE5B,cAAS,GAAG;YACjB;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,QAAQ;aACjB;YACD;gBACE,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,QAAQ;aACjB;SACF,CAAC;IAnFc,CAAC;IAEjB,4CAAQ,GAAR;IACA,CAAC;IAkFD,+CAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAChD,CAAC;IAzFU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,wNAAgD;;SAEjD,CAAC;;OACW,yBAAyB,CA2FrC;IAAD,gCAAC;CAAA;AA3FqC;;;;;;;;;;;;;ACPtC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mMAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AAK3C;IAEE;IAAgB,CAAC;IAFN,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,iBAAiB,CAG7B;IAAD,wBAAC;CAAA;AAH6B","file":"operation-operation-module.js","sourcesContent":["export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ngx-alerts></ngx-alerts>\\n    <div class=\\\"content\\\" >\\n        <form [formGroup]=\\\"assignForm\\\" (ngSubmit)=\\\"onSubmit()\\\" > \\n                <div class=\\\" row card col-md-12\\\">\\n                  <div class=\\\"content\\\" >\\n                    <div class=\\\"row card col-md-12\\\" style=\\\"background-color: #f9f9f9;  position: static;\\\">\\n                        <br>  \\n                        <div class=\\\"col-md-4\\\">\\n                                <label>Select Employee:   {{ assignForm.controls.empFullName.value }} </label>\\n                                <ngx-autocomplete\\n                                    formControlName=\\\"empId\\\"\\n                                    [searchKeyword]=\\\"'EmpCode'\\\" \\n                                    [inputId]=\\\"'searchEmployee'\\\" \\n                                    [placeholderValue]=\\\"'Enter the Employee Name'\\\" \\n                                    [entries]=\\\"EmployeesList\\\" \\n                                    (selectedValue)=\\\"selectEvent($event)\\\">\\n                                </ngx-autocomplete>\\n                        </div>\\n                        <div class=\\\"col-md-8\\\">\\n                                <label> Multiselect Assets </label>\\n                                <ng-multiselect-dropdown #multiSelect\\n                                    [placeholder]=\\\"'Enter Asset code'\\\" \\n                                    [data]=\\\"Assets\\\" \\n                                    [formControl]=\\\"getAssignForm.astDescription\\\" \\n                                    [settings]=\\\"settings\\\"\\n                                    [disabled]=\\\"false\\\"\\n                                    (onFilterChange)=\\\"onFilterChange($event)\\\"\\n                                    (onDropDownClose)=\\\"onDropDownClose($event)\\\"\\n                                    (onSelect)=\\\"onItemSelect($event)\\\" \\n                                    (onDeSelect)=\\\"onDeSelect($event)\\\"\\n                                    (onSelectAll)=\\\"onSelectAllAssets($event)\\\"\\n                                    (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"  >\\n                                </ng-multiselect-dropdown>\\n                        </div>\\n                        <br><br>\\n                    </div>\\n                    <div class=\\\"row col-md-12\\\">\\n                      <!-- (click)=\\\"onSubmit('Save')\\\"  -->\\n                        <button type=\\\"submit\\\"  class=\\\"btn btn-primary \\\" > Assign </button>\\n                        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-primary pull-right\\\" > Cancel </button>\\n                        <br><br>\\n                    </div>\\n                    <br>\\n                  </div>\\n                </div>\\n                <br>       \\n                <div class=\\\"row card col-md-12\\\" >  \\n                  <div class=\\\"content\\\" >\\n                      <h4 class=\\\"title\\\"> Movement Details </h4> \\n                      <div class=\\\"row card col-md-12\\\" style=\\\"background-color: #f9f9f9;  position: static;\\\" >      \\n                              <div class=\\\" col-md-6\\\">\\n                                <h4> Current Assets with : {{ assignForm.controls.empFullName.value }}  </h4>\\n                              </div>\\n                              <div class=\\\" col-md-6\\\">\\n                                <h4>New Assets List</h4>\\n                              </div>\\n                              <div class=\\\" col-md-6\\\">\\n                                <legend></legend>\\n                                    <li *ngFor=\\\"let ast of assignForm.controls.assetsCurrent.value; let i = index\\\">\\n                                        <span> {{i+1}} :</span>\\n                                        <span>Code:  {{ast?.astCode}}     </span>\\n                                        <span> Description: {{ast?.astDescription}}</span> \\n                                    </li>\\n                              </div>\\n                              <div class=\\\" col-md-6\\\">\\n                                <legend></legend>\\n                                <li *ngFor=\\\"let ast of assignForm.controls.assetsNew.value; let i = index\\\">\\n                                    <!-- <span> {{i+1}} :</span>\\n                                    <span>Code:  {{ast?.astCode}}     </span>\\n                                    <span> Description: {{ast?.astDescription}}</span>  -->\\n                                    <span> {{ast?.astCodeDescEmp}}     </span>\\n                                </li>\\n                              </div>\\n                      </div>\\n                  </div>\\n                </div>\\n         \\n        </form>\\n\\n        <!-- Assets List -->\\n        <div class=\\\"row card col-md-12  \\\" >\\n          <div class=\\\"content\\\">\\n                                <br>\\n                                <div class=\\\"row card col-md-12 toolbarCard\\\" >\\n                                    <div class=\\\" col-md-2\\\" >\\n                                      <i class=\\\"pe-7s-refresh-2 toolbarIcon\\\" (click)=\\\"onGetAllAssets()\\\" ></i>\\n                                      <i class=\\\"pe-7s-print toolbarIcon\\\"  printTitle=\\\"Assets-List\\\" printSectionId=\\\"print-section\\\" ngxPrint ></i>     \\n                                      <i class=\\\"pe-7s-cloud-download toolbarIcon\\\"  (click)=\\\"onExportExcel()\\\"></i>  \\n                                    \\n                                    </div>\\n                                    <div class=\\\" col-md-1\\\">\\n                                      <select id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"marginsDropdownList\\\" class=\\\"form-control\\\" >\\n                                        <option value=\\\"5\\\">Rows</option>\\n                                        <option value=\\\"5\\\">5</option>\\n                                        <option value=\\\"10\\\">10</option>\\n                                        <option value=\\\"25\\\">25</option>\\n                                        <option value=\\\"50\\\">50</option>\\n                                        <option value=\\\"100\\\">100</option>\\n                                        <option value=\\\"9999\\\">All</option>\\n                                        </select> \\n                                    </div>\\n                                    <div class=\\\" col-md-5 marginsPaging\\\" >\\n                                      <pagination-controls  (pageChange)=\\\"pageIndex = $event\\\" > </pagination-controls>\\n\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                      <select \\n                                        (change)=\\\"onFilterByAssetType($event)\\\" class=\\\"form-control\\\" data-title=\\\"Single Select\\\" \\n                                        data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                                        <option value=\\\"0\\\"> Show All </option>\\n                                        <option value=\\\"1\\\"> Show By Employees </option>\\n                                        <option *ngFor=\\\"let a of AssetTypes\\\" value={{a.asttypId}} > {{a.asttypName}} </option>\\n                                      </select>\\n                                    </div>\\n                                    <div class=\\\" col-md-2 marginsSearch \\\">\\n                                      <input #search id=\\\"search\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon1\\\" class=\\\"form-control\\\" >       \\n                                    </div>\\n                                </div>\\n                                <br><br><br>\\n                                <!--  Show By Assets-->\\n                                <div class=\\\"content\\\" *ngIf=\\\"!showByEmployees\\\">\\n                                  By Assets\\n                                <div id=\\\"print-section\\\"  class=\\\"row card col-md-12\\\" style=\\\"overflow-x:auto;\\\" >\\n                                  <div class=\\\"content\\\">\\n                                        <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                        <thead>\\n                                              <tr>\\n                                                <th> \\n                                                  <div class=\\\" form-check\\\">\\n                                                    <label class=\\\" form-check-label\\\">\\n                                                      <input id=\\\"assetItemALL--\\\" (change)=\\\"onSelectAllCheckboxAST($event)\\\" class=\\\" form-check-input\\\"  type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                                      <span class=\\\" form-check-sign\\\">\\n                                                        <span class=\\\" check\\\"> </span>\\n                                                      </span>\\n                                                    </label>\\n                                                  </div>\\n                                                </th>\\n                                                <th>\\n                                                  #\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astId'\\\" (click)=\\\"setOrder('id')\\\">\\n                                                  ID <span [hidden]=\\\"reverse\\\">▼</span><span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'info.astDescription'\\\" (click)=\\\"setOrder('astDescription')\\\"\\n                                                  class=\\\"mdl-data-table__cell--non-numeric\\\">\\n                                                  Description <span [hidden]=\\\"reverse\\\">▼</span><span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astCode'\\\" (click)=\\\"setOrder('astCode')\\\">\\n                                                  Code <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astSerialNumber'\\\" (click)=\\\"setOrder('astSerialNumber')\\\" >\\n                                                  SN <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astPartNumber'\\\" (click)=\\\"setOrder('astPartNumber')\\\">\\n                                                  PN <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astDialNumber'\\\" (click)=\\\"setOrder('astDialNumber')\\\" *ngIf=\\\"IsDailNumberExist()\\\" >\\n                                                  Dial Number <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astCircuitNumber'\\\" (click)=\\\"setOrder('astCircuitNumber')\\\" *ngIf=\\\"IsCircuitNumberExist()\\\">\\n                                                  Circuit Number <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'astPurchaseDate'\\\" (click)=\\\"setOrder('astPurchaseDate')\\\">\\n                                                  Purchase Date <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'AssetType'\\\" (click)=\\\"setOrder('AssetType')\\\">\\n                                                  Asset Type <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'Employee'\\\" (click)=\\\"setOrder('Employee')\\\">\\n                                                  Employee <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'Department'\\\" (click)=\\\"setOrder('Department')\\\">\\n                                                  Deparment <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'Branch'\\\" (click)=\\\"setOrder('Branch')\\\">\\n                                                  Branch <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <th [class.active]=\\\"order === 'Company'\\\" (click)=\\\"setOrder('Company')\\\">\\n                                                  Company <span [hidden]=\\\"reverse\\\">▼</span>\\n                                                  <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                                </th>\\n                                                <!-- <th >\\n                                                  Scrap \\n                                                </th> -->\\n                                              </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                              <tr  *ngFor=\\\"let row of Assets | orderBy: order:reverse:'case-insensitive' | paginate: { itemsPerPage: pageSize, currentPage: pageIndex }; let i = index\\\">\\n                                                <td>\\n                                                  <div class=\\\"form-check\\\">\\n                                                    <label class=\\\" form-check-label\\\">\\n                                                      <input id=\\\"assetItem--{{i}}\\\" class=\\\" form-check-input\\\" (change)=\\\"onSelectCheckboxAST($event, row)\\\" [(ngModel)]=\\\"row.checkbox\\\" [value]=\\\"row.checkbox\\\" type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                                      <span class=\\\" form-check-sign\\\">\\n                                                        <span class=\\\" check\\\"> </span>\\n                                                      </span>\\n                                                    </label>\\n                                                  </div>\\n                                                  <!-- <div *ngFor=\\\"let checkbox of checkboxes\\\">\\n                                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"checkbox.checked\\\" [value]=\\\"checkbox.value\\\"><span>{{checkbox.name}}</span>\\n                                                </div> -->\\n                        \\n                                                </td>\\n                                                <td>\\n                                                    {{ i+1 }}\\n                                                </td>\\n                                                <td>{{ row?.astId }}</td>\\n                                                <td>{{ row?.astDescription }}</td>\\n                                                <td>{{ row?.astCode }}</td>\\n                                                <td>{{ row?.astSerialNumber }}</td>\\n                                                \\n                                                <td>{{ row?.astPartNumber }}</td>\\n                                                <td *ngIf=\\\"IsDailNumberExist()\\\">{{ row?.astDialNumber ? row?.astDialNumber : 'N/A' }}</td>\\n                                                <td *ngIf=\\\"IsCircuitNumberExist()\\\">{{ row?.astCircuitNumber ? row?.astCircuitNumber : 'N/A' }}</td>\\n                                                <td>{{ row?.astPurchaseDate }}</td>\\n                                                <td>{{ row?.AssetTypeName }}</td>\\n                                                <td>{{ row?.EmployeeName }}</td>\\n                                                <td>{{ row?.DepartmentName }}</td>\\n                                                <td>{{ row?.BranchName }}</td>\\n                                                <td>{{ row?.CompanyName }}</td>\\n                                                <!-- <td>\\n                                                  <a (click)=\\\"onScrap(row)\\\" class=\\\"btn btn-simple btn-warning \\\"><i>Scrap</i></a> \\n                                                </td> -->\\n                                              </tr>\\n                                        </tbody>\\n                                        </table>\\n                                  </div>\\n                                </div> \\n                                </div>\\n                                <!-- end content By Assets-->\\n\\n                                <!--  Show By Employee-->\\n                                <div class=\\\"content\\\" *ngIf=\\\"showByEmployees\\\">\\n                                  By Employee\\n                                  <div id=\\\"print-section\\\"  class=\\\"row card col-md-12\\\" style=\\\"overflow-x:auto;\\\" >\\n                                    <div class=\\\"content\\\">\\n                                          <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                     <thead>\\n                                           <tr>\\n                                             <th> \\n                                               <div class=\\\" form-check\\\">\\n                                                 <label class=\\\" form-check-label\\\">\\n                                                   <input id=\\\"employeeItemALL--\\\" (change)=\\\"onSelectAllCheckboxEMP($event)\\\" class=\\\" form-check-input\\\"  type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                                   <span class=\\\" form-check-sign\\\">\\n                                                     <span class=\\\" check\\\"> </span>\\n                                                   </span>\\n                                                 </label>\\n                                               </div>\\n                                             </th>\\n                                             <th >\\n                                               # \\n                                             </th>\\n                                             <th [class.active]=\\\"order === 'empHRCode'\\\" (click)=\\\"setOrder('empHRCode')\\\"\\n                                               class=\\\"mdl-data-table__cell--non-numeric\\\">\\n                                               HR Code <span [hidden]=\\\"reverse\\\">▼</span><span [hidden]=\\\"!reverse\\\">▲</span>\\n                                             </th>\\n                                             <th [class.active]=\\\"order === 'empFullName'\\\" (click)=\\\"setOrder('empFullName')\\\">\\n                                              Full Name <span [hidden]=\\\"reverse\\\">▼</span>\\n                                               <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                             </th>\\n                                             <th>\\n                                               Assets\\n                                             </th>\\n                                             <th [class.active]=\\\"order === 'Department'\\\" (click)=\\\"setOrder('Department')\\\">\\n                                              Department <span [hidden]=\\\"reverse\\\">▼</span>\\n                                              <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                            </th>\\n                                             <th [class.active]=\\\"order === 'Branch'\\\" (click)=\\\"setOrder('Branch')\\\">\\n                                               Branch <span [hidden]=\\\"reverse\\\">▼</span>\\n                                               <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                             </th>\\n                                             <th [class.active]=\\\"order === 'Company'\\\" (click)=\\\"setOrder('Company')\\\">\\n                                               Company <span [hidden]=\\\"reverse\\\">▼</span>\\n                                               <span [hidden]=\\\"!reverse\\\">▲</span>\\n                                             </th>\\n                                           </tr>\\n                                     </thead>\\n                                     <tbody>\\n                                           <tr *ngFor=\\\"let row of Employees | orderBy: order:reverse:'case-insensitive' | paginate: { itemsPerPage: pageSize, currentPage: pageIndex }; let i = index\\\">\\n                                             <td>\\n                                               <div class=\\\"form-check\\\">\\n                                                 <label class=\\\" form-check-label\\\">\\n                                                   <input id=\\\"employeeItem--{{i}}\\\" class=\\\" form-check-input\\\" (change)=\\\"onSelectCheckboxEMP($event, row)\\\" [(ngModel)]=\\\"row.checkbox\\\" [value]=\\\"row.checkbox\\\" type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                                   <span class=\\\" form-check-sign\\\">\\n                                                     <span class=\\\"check\\\"> </span>\\n                                                   </span>\\n                                                 </label>\\n                                               </div>                     \\n                                             </td>\\n                                             <td>{{ i+1 }}</td>\\n                                             <td>{{ row?.empHRCode }}</td>\\n                                             <td>{{ row?.empFullName }}</td>\\n                                             <td>\\n                                                 <ul>\\n                                                      <li *ngFor=\\\"let ast of row.assetsCurrent; let i = index\\\">\\n                                                        <span>( {{ast?.astCode}}  )  </span>\\n                                                        <span>  {{ast?.AssetType}}  - </span>\\n                                                        <span>  {{ast?.astDescription}}</span> \\n                                                      </li>\\n                                                 </ul>\\n                                             </td>\\n                                             <td>{{ row?.Department }}</td>\\n                                             <td>{{ row?.Branch }}</td>\\n                                             <td>{{ row?.Company }}</td>\\n                                           </tr>\\n                                     </tbody>\\n                                     </table>\\n                                   </div>\\n                                  </div> \\n                                </div>\\n                                <!-- end content By Employee-->\\n           \\n                                <div class=\\\"col-md-12\\\">\\n                                  <div class=\\\"col-md-1\\\">\\n                                    <select class=\\\"col-md-1\\\" id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"form-control col-sm-1\\\" >\\n                                      <option value=\\\"5\\\">#Rows</option>\\n                                      <option value=\\\"5\\\">5</option>\\n                                      <option value=\\\"10\\\">10</option>\\n                                      <option value=\\\"25\\\">25</option>\\n                                      <option value=\\\"50\\\">50</option>\\n                                      <option value=\\\"100\\\">100</option>\\n                                      <option value=\\\"9999\\\">All</option>\\n                                      </select> \\n                                  </div>\\n                                  <div class=\\\"col-md-3\\\">\\n                                    <pagination-controls (pageChange)=\\\"pageIndex = $event\\\">    </pagination-controls>\\n                                  </div>\\n                                </div>\\n          </div>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <button (click)=\\\"showEmailSectionFn()\\\" >Show Emails</button><br>   <br>\\n\\n    <form [formGroup]=\\\"employeeForm\\\" (submit)=\\\"Submit()\\\">\\n        <div  class=\\\"card col-md-12\\\"  [hidden]=\\\"!showEmailSection\\\">\\n            <br>\\n            <legend> Emails Details</legend>\\n\\n            <div formArrayName=\\\"emailsINDIV\\\" class=\\\"col-md-4\\\">\\n                <button (click)=\\\"onAddIndividualEmail(employeeForm.controls.emailsINDIV)\\\">Add Individual Email</button><br>\\n                <div *ngFor=\\\"let mail of getIndividualEmailsForm.controls; let i = index\\\" >\\n                    <div [formGroupName]=\\\"i\\\" class=\\\"col-md-4\\\" >\\n                        <label> Email {{i+1 }} : </label>\\n                        <input  formControlName=\\\"emailAddress\\\" placeholder=\\\"Email Address\\\" />  <a (click)=\\\"deleteIndividualEmail(i)\\\" routerLink=\\\"active\\\" style=\\\"color: crimson;\\\" >   X </a>  \\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n            <div formArrayName=\\\"emailsGEN\\\" class=\\\"col-md-4\\\">\\n                <button (click)=\\\"onAddGenaricEmail(employeeForm.controls.emailsGEN)\\\">Add Genaric Email</button><br>\\n                <div *ngFor=\\\"let mail of getGenaricEmailsForm.controls; let i = index\\\" >\\n\\n                    <div [formGroupName]=\\\"i\\\" class=\\\"col-md-4\\\" >\\n                        <label> Email {{i+1 }}:</label>\\n                        <ngx-autocomplete\\n                        formControlName=\\\"genEmailId\\\"\\n                        [searchKeyword]=\\\"'genEmailAddress'\\\" \\n                        [inputId]=\\\"'searchGmail'\\\" \\n                        [placeholderValue]=\\\"'Enter the Employee Name'\\\" \\n                        [entries]=\\\"Emails\\\" \\n                        (selectedValue)=\\\"onSelectGenaricEmail($event)\\\"\\n                        >\\n                    </ngx-autocomplete>\\n                    <a (click)=\\\"deleteGenaricEmail(i)\\\" routerLink=\\\"active\\\" style=\\\"color: crimson;\\\" >   X </a>  \\n                    </div>\\n                </div>\\n  \\n                <div class=\\\"footer\\\" class=\\\"col-md-12\\\">\\n                    <button type=\\\"submit\\\"   >Submit</button>\\n                </div>\\n                <br>\\n            </div>\\n  \\n        </div>\\n\\n\\n    </form>\\n    <!-- <div>\\n        <h4>  employeeForm.value  </h4>\\n        {{ employeeForm.value | json }}\\n    </div> -->\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <button (click)=\\\"addNewEmail()\\\">Add new Individual Email</button><br><br>\\n    <form [formGroup]=\\\"myForm\\\">\\n      <div formArrayName=\\\"emails\\\">\\n          \\n        <div *ngFor=\\\"let eml of myForm.get('emails'); let i=index\\\">\\n        <fieldset>\\n          <legend><h3>Individual {{i+1}}: </h3></legend>\\n          <div [formGroupName]=\\\"i\\\">\\n            <label>Email Title: </label>\\n            <input formControlName=\\\"individualEmailsTitle\\\" /><span><button (click)=\\\"deleteEmail(i)\\\">Delete Email</button></span>\\n            <div formArrayName=\\\"individualEmailsAddress\\\">\\n              <div *ngFor=\\\"let esddre of eml.get('individualEmailsAddress').controls; let j=index\\\">\\n                <fieldset>\\n                <legend><h4>ADDRESS {{j+1}}</h4></legend>\\n                <div [formGroupName]=\\\"j\\\">\\n                  <label>Address Name:</label>\\n                  <input formControlName=\\\"emailAddress\\\" /><span><button (click)=\\\"deleteIndvAddress(eml.controls.individualEmailsAddress, j)\\\">Delete Email</button></span>\\n                </div>\\n                </fieldset>\\n              </div>\\n              <button (click)=\\\"addNewIndvAddress(eml.controls.individualEmailsAddress)\\\">Add new Address</button>\\n            </div>\\n          </div>\\n        </fieldset>\\n        </div>\\n      </div><br>\\n      \\n    </form>\\n  \\n    <pre>{{myForm.value | json}}</pre>\\n</div>\\n\\n\"","export default \"<div class=\\\"main-content\\\">\\n  <ngx-alerts></ngx-alerts>\\n    <div class=\\\"container-fluid\\\" >\\n        <form [formGroup]=\\\"emailForm\\\" (ngSubmit)=\\\"onSubmit()\\\" > \\n\\n\\n                <div class=\\\"card col-md-12\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <br>  \\n                        <div class=\\\"col-md-4\\\">\\n                            <label>Select Genaric Email </label>\\n                                <ngx-autocomplete\\n                                formControlName=\\\"genEmailId\\\"\\n                                [searchKeyword]=\\\"'genEmailAddress'\\\" \\n                                [inputId]=\\\"'searchGmail'\\\" \\n                                [placeholderValue]=\\\"'Enter the Employee Name'\\\" \\n                                [entries]=\\\"Emails\\\" \\n                                (selectedValue)=\\\"selectEmpEvent($event)\\\"\\n                            \\n                                >\\n                            </ngx-autocomplete>\\n                        \\n                        </div>\\n                        <div class=\\\"col-md-8\\\">\\n                            <label>Select Employees </label>\\n                            <ng-multiselect-dropdown #multiSelect\\n                            [placeholder]=\\\"'Select Employees'\\\" \\n                            [data]=\\\"EmployeesList\\\" \\n                            [formControl]=\\\"getEmployees\\\" \\n                            [settings]=\\\"settings\\\"\\n                            [disabled]=\\\"false\\\"\\n                            (onFilterChange)=\\\"onFilterChange($event)\\\"\\n                            (onDropDownClose)=\\\"onDropDownClose($event)\\\"\\n                            (onSelect)=\\\"onItemSelect($event)\\\" \\n                            (onDeSelect)=\\\"onDeSelect($event)\\\"\\n                            (onSelectAll)=\\\"onSelectAll($event)\\\"\\n                            (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"\\n                        \\n                            >\\n                    \\n                            </ng-multiselect-dropdown>\\n\\n                        </div>\\n                        <!-- <div class=\\\"col-md-3\\\">\\n                            <label>Multiselect astDescription or astCode </label>\\n                            \\n                            <ng-select class=\\\"btn \\\"\\n                                    [items]=\\\"Assets\\\"\\n                                    bindLabel=\\\"astDescription\\\"\\n                                    bindValue=\\\"astCode\\\"\\n                                    [multiple]=\\\"true\\\"\\n                                    (onSelectAll)=\\\"onChangeAssets($event)\\\"\\n                                    formControlName=\\\"getAssets\\\"\\n                                    \\n                                    [searchFn]=\\\"customSearchFn\\\"\\n                                    >\\n                            </ng-select>\\n                        </div> -->\\n                        <br>   <br>\\n                    </div>\\n                    <div class=\\\"row col-md-12\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\" > Assign </button>\\n                        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-primary pull-right\\\" > Cancel </button>\\n                        <!-- Form is:  {{ assetForm.status }} -->\\n                        <br>   <br>\\n                    </div>\\n                    <br>\\n                </div>\\n                <br>       \\n                <div class=\\\"card col-md-12\\\" >  <!--  [hidden]=\\\"getAssets.length == 0\\\" -->\\n                    <h4> Movment Details</h4>\\n                    <div class=\\\"row\\\">\\n                            <!-- Move assets to: {{ getToEmp.value }}\\n\\n                            <h4>Assets To Move</h4>\\n                            <ul >\\n                            <li *ngFor=\\\"let ast of getAssets.value\\\">\\n                                <span>Description: {{ast?.astDescription}}</span>\\n                                <span>Code:  {{ast?.astCode}}</span>\\n                                <span> <font color=\\\"red\\\">Remove from: </font>  {{ast?.EmployeeName}}</span>\\n                            </li>\\n                            </ul> -->\\n                    <!-- <table>\\n                        <tr class=\\\"col-md-12\\\">\\n                            <th class=\\\"col-md-3\\\">\\n                                Description\\n                            </th>\\n                            <th class=\\\"col-md-3\\\">\\n                                Code\\n                            </th>\\n                            <th class=\\\"col-md-3\\\">\\n                                Move from Emp\\n                            </th>\\n                        </tr>\\n                        <tbody>\\n                                <tr *ngFor=\\\"let ast of getAssets.value\\\" class=\\\"col-md-12\\\">\\n                                    <td class=\\\"col-md-3\\\">\\n                                        {{ast?.astDescription}}\\n                                    </td>\\n                                    <td class=\\\"col-md-3\\\">\\n                                        {{ast?.astCode}}\\n                                    </td>\\n                                    <td class=\\\"col-md-3\\\">\\n                                        {{ast?.EmployeeName}}\\n                                    </td>\\n                                </tr>\\n                        </tbody>\\n                    </table> -->\\n                            {{ emailForm.value | json  }}\\n                    </div>\\n                </div>\\n         \\n        </form>\\n        <!-- <br> -->\\n      \\n        <div class=\\\"row\\\" >\\n            <div class=\\\"col-md-12\\\">\\n            <br>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"content\\\">\\n                  <h4 class=\\\"title\\\">Genaric Emails List</h4>\\n                  <!--           Toolbar        -->\\n                  <div class=\\\"toolbar col-md-12\\\" >\\n          \\n                      <div class=\\\"col-md-2\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"onGetAllGenaricEmails()\\\">Refresh</button>\\n                      </div>\\n                      <div class=\\\"col-md-1\\\">\\n                        <button class=\\\"btn btn-primary\\\"  printTitle=\\\"MyTitle\\\" printSectionId=\\\"print-section\\\" [useExistingCss]=\\\"true\\\" ngxPrint>Print</button>\\n\\n                      </div >\\n                      <div class=\\\"col-md-1\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"onExportExcel()\\\">Export</button> \\n                      </div>\\n                     <!--        Here you can write extra buttons/actions for the toolbar              -->\\n                  </div>\\n                  <div class=\\\"toolbar col-md-12\\\" >\\n                    <div class=\\\"col-md-2\\\">\\n                      <select id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"form-control col-sm-1\\\" >\\n                        <option value=\\\"5\\\">Rows</option>\\n                        <option value=\\\"5\\\">5</option>\\n                        <option value=\\\"10\\\">10</option>\\n                        <option value=\\\"25\\\">25</option>\\n                        <option value=\\\"50\\\">50</option>\\n                        <option value=\\\"100\\\">100</option>\\n                        <option value=\\\"9999\\\">All</option>\\n                        </select> \\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                      <pagination-controls  (pageChange)=\\\"p = $event\\\"> </pagination-controls>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\">   Filter:</div>\\n                    <div class=\\\"col-md-2\\\">\\n                      \\n                \\n                        <select formControlName=\\\"asttypId\\\" required\\n                          (change)=\\\"onFilterByAssetType($event)\\\" class=\\\"form-control\\\" data-title=\\\"Single Select\\\" \\n                          data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                          <option value=\\\"\\\"> Show All </option>\\n                          <!-- <option *ngFor=\\\"let a of Emails\\\" value={{a.asttypId}} > {{a.asttypName}} </option> -->\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                      <input #search id=\\\"search\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon1\\\">\\n                    </div>\\n\\n                  <!--        Here you can write extra buttons/actions for the toolbar              -->\\n                 </div>\\n\\n                  <div id=\\\"print-section\\\" >\\n                  <div class=\\\"fresh-datatables\\\">\\n                    <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                    <!-- Table Headers -->\\n                    <thead>\\n                          <tr>\\n                            <th> \\n                              <div class=\\\" form-check\\\">\\n                                <label class=\\\" form-check-label\\\">\\n                                  <input id=\\\"assetItemALL--\\\" (change)=\\\"onSelectAll()\\\" class=\\\" form-check-input\\\"  type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                  <span class=\\\" form-check-sign\\\">\\n                                    <span class=\\\" check\\\"> </span>\\n                                  </span>\\n                                </label>\\n                              </div>\\n                              <!-- <div class=\\\" form-check\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"CheckAllOptions()\\\">Toggle</button>\\n                              </div> -->\\n                            </th>\\n                            <th [class.active]=\\\"order === 'astId'\\\" (click)=\\\"setOrder('id')\\\">\\n                              Employee <span [hidden]=\\\"reverse\\\">▼</span><span [hidden]=\\\"!reverse\\\">▲</span>\\n                            </th>\\n                            <th [class.active]=\\\"order === 'info.astDescription'\\\" (click)=\\\"setOrder('astDescription')\\\"\\n                              class=\\\"mdl-data-table__cell--non-numeric\\\">\\n                              Individual Emails <span [hidden]=\\\"reverse\\\">▼</span><span [hidden]=\\\"!reverse\\\">▲</span>\\n                            </th>\\n                            <th [class.active]=\\\"order === 'astCode'\\\" (click)=\\\"setOrder('astCode')\\\">\\n                              Genaric Emails <span [hidden]=\\\"reverse\\\">▼</span>\\n                              <span [hidden]=\\\"!reverse\\\">▲</span>\\n                            </th>\\n          \\n                            <th >\\n                              Actions \\n                            </th>\\n\\n                          </tr>\\n                    </thead>\\n                    <!-- Table Body -->\\n                    <tbody>\\n                          <tr  *ngFor=\\\"let emp of Employees | orderBy: order:reverse:'case-insensitive' | paginate: { itemsPerPage: pageSize, currentPage: 1 }; let i = index\\\">\\n                            <td>\\n                              <div class=\\\"form-check\\\">\\n                                <label class=\\\" form-check-label\\\">\\n                                  <input id=\\\"assetItem--{{i}}\\\" class=\\\" form-check-input\\\" (change)=\\\"onSelect($event, emp)\\\" [(ngModel)]=\\\"emp.checkbox\\\" [value]=\\\"emp.checkbox\\\" type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                  <span class=\\\" form-check-sign\\\">\\n                                    <span class=\\\" check\\\"> </span>\\n                                  </span>\\n                                </label>\\n                              </div>\\n                              <!-- <div *ngFor=\\\"let checkbox of checkboxes\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"checkbox.checked\\\" [value]=\\\"checkbox.value\\\"><span>{{checkbox.name}}</span>\\n                            </div> -->\\n    \\n                            </td>\\n                            <td>{{ emp?.empFullName }}</td>\\n                            <td > \\n                              <ul >\\n                                <li >     {{ emp?.empIndividualEmail0 }}  </li>\\n                                <li >     {{ emp?.empIndividualEmail1 }}  </li>\\n                                <li *ngIf=\\\"emp?.empIndividualEmail2 != ''\\\">     {{ emp?.empIndividualEmail2 }}  </li>\\n                                <li >     {{ emp?.empIndividualEmail3 }}  </li>\\n                              </ul>\\n                            </td>\\n                            <td>\\n                              <ul *ngFor=\\\"let mail of emp.GenaricEmailsAddress\\\">\\n                                <li >     {{ mail }}  </li>\\n                              </ul>\\n                            </td>\\n                            <td>\\n                              <!-- <a (click)=\\\"onEditAsset(row)\\\" class=\\\"btn btn-simple btn-warning btn-icon edit\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                              <a (click)=\\\"onDeleteAsset(row?.astId)\\\" class=\\\"btn btn-simple btn-danger btn-icon remove \\\"><i class=\\\"fa fa-times\\\"></i></a> </td>\\n                         -->  </tr>\\n                    </tbody>\\n                    </table>\\n                  </div>\\n                 </div> \\n                 <!-- endprintsection -->\\n                </div>\\n                <!-- end content-->\\n            </div>\\n            <!--  end card  -->\\n            </div>\\n          <!-- end col-md-12 -->\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-1\\\">\\n              <select class=\\\"col-md-1\\\" id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"form-control col-sm-1\\\" >\\n                <option value=\\\"5\\\">#Rows</option>\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"9999\\\">All</option>\\n                </select> \\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <pagination-controls (pageChange)=\\\"p = $event\\\">    </pagination-controls>\\n            </div>\\n           </div>\\n      </div>\\n    </div>\\n</div>\\n\"","export default \"<p>invoicelines works!</p>\\n\"","export default \"\\n<div class=\\\"main-content\\\">\\n  <ngx-alerts></ngx-alerts>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading>\\n    <div class=\\\"container-fluid\\\" >\\n        <form [formGroup]=\\\"invoiceForm\\\" (ngSubmit)=\\\"onSubmit()\\\" > \\n            <div class=\\\"row card col-md-12\\\"  >\\n              <div class=\\\"content\\\">\\n                <div class=\\\"row card col-md-12\\\" style=\\\"background-color:  #f9f9f9;\\\" >\\n                  <br>\\n                  <div class=\\\"col-md-12\\\" >\\n                            <div class=\\\"col-md-6\\\"  >\\n                                    <label  for=\\\"\\\" class=\\\"control-label\\\">From Supplier: <span *ngIf=\\\"getSupplierName.value\\\" >  {{ getSupplierName.value | json }}   </span> \\n                                      <span class=\\\"star\\\">*</span> \\n                                    </label>\\n                                    <ngx-autocomplete autofocus (keyup.enter)=\\\"focusableCategory.focus()\\\"\\n                                    required\\n                \\n                                    id=\\\"splId--\\\"\\n                                    formControlName=\\\"splId\\\"\\n                                    [searchKeyword]=\\\"'splName'\\\" \\n                                    [inputId]=\\\"'searchEmployee'\\\"\\n                                    [placeholderValue]=\\\"'Enter Supplier'\\\" \\n                                    [entries]=\\\"Suppliers\\\" \\n                                    (selectedValue)=\\\"selectSupplierEvent($event)\\\">\\n                                    </ngx-autocomplete>\\n                                    <small [hidden]=\\\"invoiceForm.controls.splId.valid || invoiceForm.controls.splId.pristine\\\" class=\\\"text-danger\\\">\\n                                      Supplier is required\\n                                    </small>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Invoice #:\\n                                <span class=\\\"star\\\">*</span>\\n                            </label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Inv Number\\\" required formControlName=\\\"invNumber\\\" class=\\\"form-control\\\" #focusableInvNumber (keyup.enter)=\\\"focusableAmount.focus()\\\" >\\n                            <small [hidden]=\\\"invoiceForm.controls.invNumber.valid || invoiceForm.controls.invNumber.pristine\\\" class=\\\"text-danger\\\">\\n                              Inv number is required\\n                            </small>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\">\\n                                \\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Amount:\\n                                <span class=\\\"star\\\">*</span>\\n                            </label>\\n                            <input type=\\\"text\\\" (blur)=\\\"formatCurrency_TaxableValue($event)\\\" placeholder=\\\"Inv Amount\\\" required formControlName=\\\"invAmount\\\" class=\\\"form-control\\\" #focusableAmount (keyup.enter)=\\\"focusableCategory.focus()\\\" >\\n                            <small [hidden]=\\\"invoiceForm.controls.invAmount.valid || invoiceForm.controls.invAmount.pristine\\\" class=\\\"text-danger\\\">\\n                              Inv Amount is required\\n                            </small>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\">\\n                              \\n                              <label class=\\\"control-label\\\" for=\\\"\\\">Category:\\n                                <span class=\\\"star\\\">*</span>\\n                            </label>\\n                            <select value=\\\"0\\\" required  formControlName=\\\"icId\\\" class=\\\"form-control\\\" data-title=\\\"Single Select\\\" data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\" #focusableCategory (keyup.enter)=\\\"focusablePaid.focus()\\\" >\\n                            <option value=\\\"0\\\" selected>-- Select--</option>\\n                              <option *ngFor=\\\"let ic of ItemsCategorys\\\" value={{ic.icId}} >\\n                                  {{ic.icName}}\\n                              </option>\\n\\n                            </select> \\n                            <small [hidden]=\\\"invoiceForm.controls.icId.valid || invoiceForm.controls.icId.pristine\\\" class=\\\"text-danger\\\">\\n                              Inv category is required\\n                            </small>\\n                        </div>\\n                  </div>\\n                  <div class=\\\"col-md-12\\\" >\\n                    <div class=\\\"col-md-6\\\">\\n                      <label  for=\\\"\\\" class=\\\"control-label\\\">To Cost Center: <span *ngIf=\\\"invoiceForm.value.CostCenterName\\\" >   {{ invoiceForm.value.CostCenterName | json }}      </span>\\n                        <span class=\\\"star\\\">*</span>\\n                      </label>\\n                      <ngx-autocomplete  \\n                          #focusableCostCenter\\n                          required\\n                          (keyup.enter)=\\\"focusableUpload.focus()\\\"\\n                          formControlName=\\\"CostCenterId\\\"\\n                          [searchKeyword]=\\\"'ccName'\\\" \\n                          [inputId]=\\\"'searchEmployee'\\\"\\n                          [placeholderValue]=\\\"'Enter Cost Center'\\\" \\n                          [entries]=\\\"CostCenters\\\" \\n                          (selectedValue)=\\\"selectCostCenterEvent($event)\\\">\\n                      </ngx-autocomplete>\\n                      <small [hidden]=\\\"invoiceForm.controls.CostCenterId.valid || invoiceForm.controls.CostCenterId.pristine\\\" class=\\\"text-danger\\\">\\n                        Cost Ceneter is required\\n                      </small>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <label class=\\\"control-label\\\" for=\\\"\\\">   Paid :\\n                        <span class=\\\"star\\\">*</span>\\n                    </label>\\n                    <select value=\\\"Paid\\\" required  formControlName=\\\"invStatus\\\" #focusablePaid  (keyup.enter)=\\\"focusableInvDate.focus()\\\"\\n                    class=\\\"form-control\\\" data-title=\\\"Single Select\\\" data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                      <option value=\\\"Paid\\\" selected >Paid</option>\\n                      <option value=\\\"UnPaid\\\" >UnPaid</option>\\n\\n                    </select> \\n                    <small [hidden]=\\\"invoiceForm.controls.invStatus.valid || invoiceForm.controls.invStatus.pristine\\\" class=\\\"text-danger\\\">\\n                      Status is required\\n                    </small>\\n                    </div>\\n                      <!--  <span >   {{ invoiceForm.value.invDate | json }} </span> -->\\n                            <div class=\\\"col-md-4\\\" >\\n                              <label class=\\\"control-label\\\" for=\\\"\\\"> Invoice Date:   \\n                                <span class=\\\"star\\\">*</span>  \\n                            </label>\\n                            \\n                            <div class=\\\"form-group\\\">\\n                              <input\\n                              #focusableInvDate\\n                              required\\n                              (keyup.enter)=\\\"focusableRemarks.focus()\\\"\\n                              focusableInvNumber\\n                              formControlName=\\\"invDate\\\"\\n                              class=\\\"form-control\\\"\\n                              #datepickerYMD=\\\"bsDatepicker\\\"\\n                              bsDatepicker\\n                              [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD HH:mm' }\\\">\\n                            </div> \\n                            <small [hidden]=\\\"invoiceForm.controls.invDate.valid || invoiceForm.controls.invDate.pristine\\\" class=\\\"text-danger\\\">\\n                             Inv Date is required\\n                            </small>\\n                            </div>\\n                  </div>\\n                  <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"control-label\\\" for=\\\"\\\"> Upload Invoice:\\n                        <span *ngIf=\\\"getInvFile.value == null\\\" > No Attachment</span>\\n                        <span *ngIf=\\\"getInvFile.value != null\\\" style=\\\"color: green;\\\" >File Attached</span>\\n                      </label>\\n                      <input id=\\\"custom-input\\\" type=\\\"file\\\" formControlName=\\\"InvFile\\\" (change)=\\\"fileChangeListener($event)\\\"  class=\\\"form-control\\\" #focusableUpload  (keyup.enter)=\\\"focusableInvNumber.focus()\\\" >  \\n                      <small [hidden]=\\\"invoiceForm.controls.InvFile.valid || invoiceForm.controls.InvFile.pristine\\\" class=\\\"text-danger\\\">\\n                        Upload Invoice please\\n                      </small>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                            <label class=\\\"control-label\\\" for=\\\"\\\"> Remarks:\\n\\n                            </label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Remarks\\\" formControlName=\\\"Remarks\\\" class=\\\"form-control\\\" #focusableRemarks  (keyup.enter)=\\\"focusableSubmit.focus()\\\" >\\n\\n                    </div>\\n                    <br><br> <br><br>\\n                  </div>\\n                </div>\\n                <div class=\\\"footer col-md-12\\\">\\n                    <button type=\\\"submit\\\" #focusableSubmit (keyup.enter)=\\\"focusableCancel.focus()\\\" class=\\\"btn btn-primary pe-7s-diskette\\\"  *ngIf=\\\"getInvoiceForm.InvoiceId.value == null\\\" [disabled]=\\\"invoiceForm.status == 'INVALID' \\\"   > Add </button> \\n                    <button type=\\\"submit\\\" #focusableSubmit (keyup.enter)=\\\"focusableCancel.focus()\\\" class=\\\"btn btn-primary pe-7s-diskette\\\"  *ngIf=\\\"getInvoiceForm.InvoiceId.value != null\\\" [disabled]=\\\"invoiceForm.status == 'INVALID' \\\"   > Save </button> \\n                    <button type=\\\"button\\\" #focusableCancel (click)=\\\"onCancel()\\\" class=\\\"btn btn-primary pull-right\\\" > Cancel </button>\\n                </div>\\n                <div class=\\\"col-md-12\\\">\\n              \\n                </div>\\n            </div>\\n          </div>\\n        </form>\\n<!-- <div>\\n  {{ invoiceForm.value | json }}\\n</div> -->\\n        <div class=\\\"row card col-md-12\\\">\\n          <br>\\n          <h4 class=\\\"title\\\">Invoices List</h4>  \\n\\n         <!-- Toolbar -->\\n         <form novalidate [formGroup]=\\\"searchForm\\\"> \\n          <div class=\\\"card col-md-12 toolbarCard\\\" >\\n            <div class=\\\" col-md-12\\\">\\n              <div class=\\\" col-md-2\\\" >\\n                <i class=\\\"pe-7s-refresh-2 toolbarIcon\\\" (click)=\\\"onGetAllInvoices()\\\" ></i>\\n                <i class=\\\"pe-7s-trash toolbarIcon\\\" (click)=\\\"onDeleteAllSellected()\\\" ></i>  \\n                <i class=\\\"pe-7s-print toolbarIcon\\\"  printTitle=\\\"Invoices\\\" printSectionId=\\\"print-section\\\" ngxPrint ></i>     \\n                <i class=\\\"pe-7s-cloud-download toolbarIcon\\\" (click)=\\\"onExportExcel()\\\"></i>  \\n              \\n              </div>\\n              <div class=\\\" col-md-2 marginsPaging\\\">\\n                <a routerLink=\\\"/operation/reports\\\" routerLinkActive=\\\"active\\\" class=\\\"pull-left\\\">Invoices Tables-Charts</a> \\n              </div>\\n              <div class=\\\" col-md-2\\\">\\n                <select id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"marginsDropdownList form-control\\\" value=\\\"5\\\">\\n                  <option value=\\\"5\\\">Rows</option>\\n                  <option value=\\\"5\\\">5</option>\\n                  <option value=\\\"10\\\">10</option>\\n                  <option value=\\\"25\\\">25</option>\\n                  <option value=\\\"50\\\">50</option>\\n                  <option value=\\\"100\\\">100</option>\\n                  <option value=\\\"9999\\\">All</option>\\n                  </select> \\n              </div>\\n              <div class=\\\" col-md-2\\\">\\n                From: {{FromDateString}}    <br>   To: {{ToDateString}} \\n              </div>\\n              <div class=\\\" col-md-4 marginsPaging\\\" >\\n                <pagination-controls  (pageChange)=\\\"pageIndex = $event\\\" > </pagination-controls>\\n              </div>\\n              <br>\\n            </div>\\n            <div class=\\\" col-md-12\\\">\\n              <div class=\\\" col-md-2\\\">\\n                <select formControlName=\\\"ItemCategoryName\\\"    [ngStyle]=\\\"{'background-color': searchForm.controls.ItemCategoryName.value ? 'gray' : 'white'}\\\"\\n                class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                <option value=\\\"\\\" >All-Categories</option>\\n                <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n              </select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n\\n                <select value=\\\"0\\\"  formControlName=\\\"CostCenterName\\\"  [ngStyle]=\\\"{'background-color': searchForm.controls.CostCenterName.value ? 'gray' : 'white'}\\\"\\n                  class=\\\"form-control\\\" data-title=\\\"Single Select\\\" \\n                  data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                  <option value=\\\"\\\">All-Cost Centers</option>\\n                  <option *ngFor=\\\"let a of CostCenters\\\" value={{a.ccName}} > {{a.ccName}} </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <select value=\\\"0\\\"  formControlName=\\\"SupplierName\\\"   [ngStyle]=\\\"{'background-color': searchForm.controls.SupplierName.value ? 'gray' : 'white'}\\\"\\n                  class=\\\"form-control\\\" data-title=\\\"Single Select\\\" \\n                  data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                  <option value=\\\"\\\">All-Suppliers</option>\\n                  <option *ngFor=\\\"let a of Suppliers\\\" value={{a.splName}} > {{a.splName}} </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                    <title>Filter Dates </title>\\n                    <input \\n      \\n                    (bsValueChange)=\\\"onFilterInvoicesByDate($event)\\\"\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    #daterangepicker=\\\"bsDaterangepicker\\\"\\n                    placeholder=\\\"Select Date Range\\\"\\n                    bsDaterangepicker\\n                    [bsConfig]=\\\"{ rangeInputFormat : 'MMMM Do YYYY, h:mm:ss a', dateInputFormat: 'MMMM Do YYYY, h:mm:ss a', showWeekNumbers: false }\\\">\\n              </div> \\n              <div class=\\\"col-md-2\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary pe-7s-search\\\"  (click)=\\\"searchFilter(searchForm.value)\\\"> Search </button> \\n              </div>\\n              <div class=\\\" col-md-2 marginsSearch \\\">\\n                <input #search id=\\\"search\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon1\\\" class=\\\"form-control\\\" >       \\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n         <br><br><br><br><br>\\n                  <div class=\\\"content\\\"> \\n                    <div id=\\\"print-section\\\" >\\n                    <div class=\\\"fresh-datatables\\\" style=\\\"overflow-x:auto;\\\" >\\n                      <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                      <thead>\\n                            <tr>\\n                              <th> \\n                                <div class=\\\" form-check\\\">\\n                                  <label class=\\\" form-check-label\\\">\\n                                    <input id=\\\"assetItemALL--\\\" (change)=\\\"onSelectAll($event)\\\" class=\\\" form-check-input\\\"  type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                    <span class=\\\" form-check-sign\\\">\\n                                      <span class=\\\" check\\\"> </span>\\n                                    </span>\\n                                  </label>\\n                                </div>\\n                               </th>\\n                              <th >\\n                                #\\n                              </th> \\n                              <th [class.active]=\\\"order === 'astCode'\\\" (click)=\\\"setOrder('astCode')\\\">\\n                                invNumber <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'astSerialNumber'\\\" (click)=\\\"setOrder('astSerialNumber')\\\" >\\n                                invAmount <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'astPartNumber'\\\" (click)=\\\"setOrder('astPartNumber')\\\">\\n                                invDate <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'astDialNumber'\\\" (click)=\\\"setOrder('astDialNumber')\\\" >\\n                                invStatus <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'astCircuitNumber'\\\" (click)=\\\"setOrder('astCircuitNumber')\\\" >\\n                                Remarks <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'ItemCategoryName'\\\" (click)=\\\"setOrder('ItemCategoryName')\\\">\\n                                Category <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'astPurchaseDate'\\\" (click)=\\\"setOrder('astPurchaseDate')\\\">\\n                                Supplier <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th [class.active]=\\\"order === 'asttypName'\\\" (click)=\\\"setOrder('asttypName')\\\">\\n                                CostCenter <span [hidden]=\\\"reverse\\\">▼</span>\\n                                <span [hidden]=\\\"!reverse\\\">▲</span>\\n                              </th>\\n                              <th>\\n                                Download \\n                              </th>\\n                      \\n                              <th >\\n                                Actions \\n                              </th>\\n        \\n                            </tr>\\n                      </thead>\\n                      <tbody>\\n                            <tr  *ngFor=\\\"let row of Invoices | orderBy: order:reverse:'case-insensitive' | paginate: { itemsPerPage: pageSize, currentPage: pageIndex }; let i = index\\\">\\n                              <td>\\n                                <div class=\\\"form-check\\\">\\n                                  <label class=\\\" form-check-label\\\">\\n                                    <input id=\\\"assetItem--{{i}}\\\" class=\\\" form-check-input\\\" (change)=\\\"onSelect($event, row)\\\" [(ngModel)]=\\\"row.checkbox\\\" [value]=\\\"row.checkbox\\\" type=\\\"checkbox\\\" value=\\\"\\\" />\\n                                    <span class=\\\" form-check-sign\\\">\\n                                      <span class=\\\" check\\\"> </span>\\n                                    </span>\\n                                  </label>\\n                                </div>\\n                              </td>\\n                              <td>{{ i+1 }}</td>\\n                              <td>{{ row?.invNumber }}</td>\\n                              <td>{{ row?.invAmount }}</td>\\n                              <td>{{ row?.invDate }}</td> \\n                              <td >{{ row?.invStatus }}</td>\\n                              <td >{{ row?.Remarks }}</td>\\n                              <td>{{ row?.ItemCategoryName }}</td>\\n                              <td>{{ row?.SupplierName }}</td>\\n                              <td>{{ row?.CostCenterName }}</td>\\n                              <td> \\n                                <!-- *ngIf=\\\"IsInvFileExist(row?.InvFile)\\\" *ngIf=\\\"!IsInvFileExist(row?.InvFile)\\\" -->\\n                                <a  *ngIf=\\\"row.InvFileAttached\\\"  (click)=\\\"downloadInvoice(row.InvoiceId, row?.invNumber, row?.SupplierName )\\\" routerLink > Download </a>\\n                                <span *ngIf=\\\"!row.InvFileAttached\\\"  > No File</span>\\n                              </td>\\n                              <td>\\n                                <a (click)=\\\"onEditInvoice(row)\\\" class=\\\"btn btn-simple btn-warning btn-icon edit\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                <a (click)=\\\"onDeleteInvoice(row)\\\" class=\\\"btn btn-simple btn-danger btn-icon remove \\\"><i class=\\\"fa fa-times\\\"></i></a> </td>\\n                            </tr>\\n                            <tr>\\n                              <td>\\n                                    <div  class=\\\"text-center\\\" style=\\\"color: red; width: auto\\\">\\n                                      <p *ngIf=\\\"Invoices.length === 0\\\">\\n                                          No Entry found\\n                                      </p>\\n                                    </div>\\n                              </td>\\n                            </tr>\\n                            <tr>\\n                              <td>\\n                              </td>\\n                              <td>Total Amounts</td>\\n                              <td> = </td>\\n                              <td>{{ TotalInvoicesAmount }}</td>\\n                              <td></td> \\n                              <td ></td>\\n                              <td ></td>\\n                              <td></td>\\n                              <td></td>\\n                              <td> </td>\\n                              <td>\\n                            </tr>\\n                      </tbody>\\n                      </table>\\n                    </div>\\n                   </div> \\n                   <!-- endprintsection -->\\n                  </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"col-md-1\\\">\\n                <select class=\\\"col-md-1\\\" id=\\\"PerPage\\\" (change)=\\\"onChangeRowsPerPage($event)\\\" class=\\\"form-control col-sm-1\\\" >\\n                  <option value=\\\"5\\\">#Rows</option>\\n                  <option value=\\\"5\\\">5</option>\\n                  <option value=\\\"10\\\">10</option>\\n                  <option value=\\\"25\\\">25</option>\\n                  <option value=\\\"50\\\">50</option>\\n                  <option value=\\\"100\\\">100</option>\\n                  <option value=\\\"9999\\\">All</option>\\n                  </select> \\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <pagination-controls (pageChange)=\\\"pageIndex = $event\\\">    </pagination-controls>\\n              </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n</div>\\n\\n\\n\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h4 class=\\\"title\\\">{{ title }}</h4>\\n    <p class=\\\"category\\\">{{ subtitle }}</p>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div [attr.id]=\\\"chartId\\\" class=\\\"ct-chart {{ chartClass }}\\\"></div>\\n\\n    <div class=\\\"footer\\\">\\n      <div class=\\\"legend\\\">\\n        <span *ngFor=\\\"let item of legendItemsBranchs\\\">\\n          <i [ngClass]=\\\"item.imageClass\\\"></i> {{ item.title }}\\n        </span>\\n      </div>\\n      <hr *ngIf=\\\"withHr\\\">\\n      <div class=\\\"stats\\\">\\n        <i [ngClass]=\\\"footerIconClass\\\"></i> {{ footerText }}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h4 class=\\\"title\\\">{{ title }}</h4>\\n    <p class=\\\"category\\\">{{ subtitle }}</p>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div [attr.id]=\\\"chartId\\\" class=\\\"ct-chart {{ chartClass }}\\\"></div>\\n\\n    <div class=\\\"footer\\\">\\n      <div class=\\\"legend\\\">\\n        <span *ngFor=\\\"let item of legendItemsMonths\\\">\\n          <i [ngClass]=\\\"item.imageClass\\\"></i> {{ item.title }}\\n        </span>\\n      </div>\\n      <hr *ngIf=\\\"withHr\\\">\\n      <div class=\\\"stats\\\">\\n        <i [ngClass]=\\\"footerIconClass\\\"></i> {{ footerText }}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n    <ngx-alerts></ngx-alerts>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" ></ngx-loading>\\n      <div class=\\\"container-fluid\\\" >\\n\\n            <div class=\\\"row card col-md-12\\\"  >\\n                <a routerLink=\\\"/operation/invoicemng\\\" routerLinkActive=\\\"active\\\" class=\\\"pull-left\\\">Back to Invoices Management</a> \\n                <div class=\\\"content\\\">\\n                  <div class=\\\"row card col-md-12\\\" style=\\\"background-color:  #f9f9f9;\\\" >\\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\" row \\\">\\n                        <form novalidate [formGroup]=\\\"filterByMonthForm\\\"> \\n                          \\n                        <div class=\\\"col-md-2\\\">\\n\\n                              <select formControlName=\\\"ItemCategoryName1\\\"    [ngStyle]=\\\"{'background-color': filterByMonthForm.controls.ItemCategoryName1.value ? 'gray' : 'white'}\\\"\\n                              (change)=\\\"onFilterChange(filterByMonthForm.value, 'forMonths')\\\" \\n                              class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                              data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                              <option value=\\\"\\\" >Cat - 1</option>\\n                              <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                              </select>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n\\n                              <select formControlName=\\\"ItemCategoryName2\\\"   [ngStyle]=\\\"{'background-color': filterByMonthForm.controls.ItemCategoryName2.value ? 'gray' : 'white'}\\\"\\n                               (change)=\\\"onFilterChange(filterByMonthForm.value, 'forMonths')\\\" \\n                              class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                              data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                              <option value=\\\"\\\" >Cat - 2</option>\\n                              <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                              </select>\\n\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n\\n                              <select formControlName=\\\"ItemCategoryName3\\\"  [ngStyle]=\\\"{'background-color': filterByMonthForm.controls.ItemCategoryName3.value ? 'gray' : 'white'}\\\"\\n                               (change)=\\\"onFilterChange(filterByMonthForm.value, 'forMonths')\\\" \\n                              class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                              data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                              <option value=\\\"\\\" >Cat - 3</option>\\n                              <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                              </select>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                          <select formControlName=\\\"ItemCategoryName4\\\"   [ngStyle]=\\\"{'background-color': filterByMonthForm.controls.ItemCategoryName4.value ? 'gray' : 'white'}\\\"\\n                          (change)=\\\"onFilterChange(filterByMonthForm.value, 'forMonths' )\\\" \\n                          class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                          data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                          <option value=\\\"\\\" >Cat - 4</option>\\n                          <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                          </select>\\n                    </div>\\n                        <div>\\n                          <i class=\\\"pe-7s-refresh-2 toolbarIcon\\\" (click)=\\\"onGetAllInvoices(filterByMonthForm, 'forMonths')\\\" ></i>\\n                        </div>\\n                      </form>\\n                      </div>\\n                      <div class=\\\"row \\\">\\n                          <br>\\n                          <lbd-chartMonth\\n                          [title]=\\\"'Monthly Purchasing'\\\"\\n                          [subtitle]=\\\"'All invoices including Taxes'\\\"\\n                          [chartTypeMonth]=\\\"activityChartTypeMonth\\\"\\n                          [chartDataForMonths]=\\\"activityChartDataForMonths\\\"\\n                          [chartOptions]=\\\"activityChartOptions\\\"\\n                          [chartResponsive]=\\\"activityChartResponsive\\\"\\n                          [legendItemsMonths]=\\\"activityChartLegendItemsMonth\\\"\\n                          [withHr]=\\\"true\\\"\\n                          [footerIconClass]=\\\"'fa fa-check'\\\"\\n                          [footerText]=\\\"'Data information certified'\\\">\\n                          </lbd-chartMonth>\\n\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"row \\\">\\n                        <form novalidate [formGroup]=\\\"filterByBranchForm\\\"> \\n                        <div class=\\\"col-md-2\\\">\\n                          <select formControlName=\\\"ItemCategoryName1\\\"  [ngStyle]=\\\"{'background-color': filterByBranchForm.controls.ItemCategoryName1.value ? 'gray' : 'white'}\\\"\\n                            (change)=\\\"onFilterChange(filterByBranchForm.value, 'forBranchs')\\\" \\n                          class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                          data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                          <option value=\\\"\\\" >Category</option>\\n                          <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                        </select>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                          <!-- <select formControlName=\\\"ItemCategoryName2\\\"  [ngStyle]=\\\"{'background-color': filterByBranchForm.controls.ItemCategoryName2.value ? 'gray' : 'white'}\\\"\\n                           (change)=\\\"onFilterChange(filterByBranchForm.value, 'forBranchs')\\\" \\n                          class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                          data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                          <option value=\\\"\\\" >Cat - 2</option>\\n                          <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                        </select> -->\\n\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n\\n                          <!-- <select formControlName=\\\"ItemCategoryName3\\\"  [ngStyle]=\\\"{'background-color': filterByBranchForm.controls.ItemCategoryName3.value ? 'gray' : 'white'}\\\"\\n                           (change)=\\\"onFilterChange(filterByBranchForm.value, 'forBranchs')\\\" \\n                          class=\\\"form-control\\\" data-title=\\\"Single Select\\\" placeholder=\\\"Categories\\\"\\n                          data-style=\\\"btn-default btn-block\\\" data-menu-style=\\\"dropdown-blue\\\">\\n                          <option value=\\\"\\\" >Cat - 3</option>\\n                          <option *ngFor=\\\"let a of ItemsCategorys\\\" value={{a.icName}} > {{a.icName}} </option>\\n                        </select> -->\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                          <title>Filter Dates </title>\\n                            <input  \\n                            (bsValueChange)=\\\"onFilterInvoicesByDate($event, filterByBranchForm.value, 'forBranchs')\\\"\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            #daterangepicker=\\\"bsDaterangepicker\\\"\\n                            placeholder=\\\"Select Date Range\\\"\\n                            bsDaterangepicker\\n                            [bsConfig]=\\\"{ rangeInputFormat : 'MMMM Do YYYY, h:mm:ss a', dateInputFormat: 'MMMM Do YYYY, h:mm:ss a', showWeekNumbers: false }\\\">\\n                         \\n                        </div> \\n                        <div>\\n                          <!-- <i class=\\\"pe-7s-refresh-2 toolbarIcon\\\" (click)=\\\"onGetAllInvoices(filterByMonthForm, 'forMonths')\\\" ></i> -->\\n                          From: {{FromDateString}}    <br>   To: {{ToDateString}} \\n                        </div>\\n\\n                        </form>\\n                      </div>      \\n                      <div class=\\\"row \\\">\\n                        <br>\\n                        <lbd-chartBranch\\n                        [title]=\\\"'Branchs Purchasing'\\\"\\n                        [subtitle]=\\\"'All invoices including Taxes'\\\"\\n                        [chartTypeBranch]=\\\"activityChartTypeBranch\\\"\\n                        [chartDataForBranchs]=\\\"activityChartDataForBranchs\\\"\\n                        [chartOptions]=\\\"activityChartOptions\\\"\\n                        [chartResponsive]=\\\"activityChartResponsive\\\"\\n                        [legendItemsBranchs]=\\\"activityChartLegendItemsBranchs\\\"\\n                        [withHr]=\\\"true\\\"\\n                        [footerIconClass]=\\\"'fa fa-check'\\\"\\n                        [footerText]=\\\"'Data information certified'\\\">\\n                      </lbd-chartBranch>\\n                                                   <!-- From:  {{dateFrom}} To:   {{dateTo}} -->\\n                      </div>\\n                    </div>             \\n                  </div>\\n                  <div class=\\\"row card col-md-12\\\" style=\\\"background-color:  #f9f9f9;\\\" >\\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\" row \\\">\\n                       <title> Monthly Table </title> \\n                      </div>\\n                      <div class=\\\"row \\\">\\n                        <div id=\\\"print-section\\\" >\\n                          <div class=\\\"fresh-datatables\\\"  >\\n                            <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">                     \\n                            <thead>\\n                                  <tr>\\n                                    <th style=\\\"color: green;\\\">Categories</th>\\n                                    <th> Jan </th>\\n                                    <th> Feb </th>\\n                                    <th> March </th>\\n                                    <th> April </th>\\n                                    <th> May </th>\\n                                    <th> June </th>\\n                                    <th> July </th>\\n                                    <th> Aug </th>\\n                                    <th> Sep </th>\\n                                    <th> Oct </th>\\n                                    <th> Nov </th>\\n                                    <th> Dec </th>\\n                                    <th style=\\\"color: green;\\\">Total</th>              \\n                                  </tr>\\n                            </thead>\\n                            <tbody>\\n                                  <tr *ngFor=\\\"let row of activityChartDataForMonths.series\\\">\\n                                    <td style=\\\"color: green;\\\">{{ row[12] }}</td>\\n                                    <td>{{ row[0] }}</td>\\n                                    <td>{{ row[1] }}</td>\\n                                    <td>{{ row[2] }}</td>\\n                                    <td>{{ row[3] }}</td>\\n                                    <td>{{ row[4] }}</td> \\n                                    <td>{{ row[5] }}</td>\\n                                    <td>{{ row[6] }}</td>\\n                                    <td>{{ row[7] }}</td>\\n                                    <td>{{ row[8] }}</td>\\n                                    <td>{{ row[9] }}</td>\\n                                    <td>{{ row[10] }}</td>\\n                                    <td>{{ row[11] }}</td> \\n                                    <td style=\\\"color: green;\\\">{{ row[13] }}</td>                       \\n                                  </tr>                      \\n                            </tbody>\\n                            </table>\\n                          </div>\\n                         </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"row \\\">\\n                        <title>Branchs Table  </title> \\n                      </div>\\n          \\n                      <div class=\\\"row \\\">\\n                        <div id=\\\"print-section\\\" >\\n                          <div class=\\\"fresh-datatables\\\"  >\\n                            <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\"> \\n                            <thead>\\n                                  <tr >\\n                                    <th style=\\\"color: green;\\\">Cost Centers</th>\\n                                    <th> Amounts  </th>\\n                                    <th style=\\\"color: green;\\\">Total</th>        \\n                                  </tr>\\n                            </thead>\\n                            <tbody>\\n                              <!-- *ngFor=\\\"let row of activityChartDataForBranchs?.labels; let i = index;\\\" -->\\n                                  <tr >\\n                                    <td>{{ activityChartDataForBranchs?.labels }}</td>\\n                                    <td style=\\\"color: green;\\\">{{ activityChartDataForBranchs.series }} </td>\\n                                    <td style=\\\"color: green;\\\"> {{ totalByCC }}</td>                       \\n                                  </tr>\\n                            </tbody>\\n                            </table>\\n                          </div>\\n                         </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n            </div>\\n \\n  \\n      </div>\\n  </div>\"","export default \"<title > {{ name }}</title>\\n<p>\\n  Clicking on items toggles their selection, single arrow buttons move the selected items, double-arrows move all items\\n</p>\\n<div class=\\\"container\\\">\\n  <ul>\\n    LIST 1\\n    <li   *ngFor=\\\"let item of list1\\\" [class.item-selected]=\\\"item.selected\\\"   (click)=\\\"toggleSelection(item, 1)\\\">{{item.text}}</li>\\n  </ul>\\n  <div class=\\\"buttons-container\\\">\\n  <button class=\\\"pe-7s-angle-right-circle\\\" (click)=\\\"moveSelected('right')\\\"></button>\\n  <button class=\\\"pe-7s-angle-right-circle\\\" (click)=\\\"moveAll('right')\\\"></button>\\n  <button class=\\\"pe-7s-angle-left-circle\\\" (click)=\\\"moveSelected('left')\\\"></button>\\n  <button class=\\\"pe-7s-angle-left-circle\\\" (click)=\\\"moveAll('left')\\\"></button>\\n  </div>\\n  <ul>\\n    LIST 2\\n    <li   *ngFor=\\\"let item of list2\\\"    [class.item-selected]=\\\"item.selected\\\"    (click)=\\\"toggleSelection(item, 2)\\\">{{item.text}}</li>\\n  </ul>\\n</div>\\n\"","export default \"<p>requestmng works!</p>\\n\"","export default \"<p>testautocomplete works!</p>\\n\\n\\n<h3 style=\\\"text-align: center\\\">{{title}}</h3>\\n\\n<div style=\\\"width: 50%;position: absolute;left: 25%;top: 12%\\\">\\n  <ngx-autocomplete [searchKeyword]=\\\"'name'\\\" [inputId]=\\\"'searchEmployee'\\\"\\n    [placeholderValue]=\\\"'Enter the Employee Name'\\\" [entries]=\\\"employees\\\" (selectedValue)=\\\"selectEvent($event)\\\">\\n  </ngx-autocomplete>\\n</div>\\n\\n<div style=\\\"margin-top: 50%; font-weight: bold\\\">\\n    Selected Employee: {{ selected_employee}}\\n</div>\"","export default \"\\n\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <p>You Logged In Successfully </p>\\n\\n    </div>\\n</div>\\n\"","export default \"\\r\\n\\r\\n.toolbarIcon{\\r\\n  font-size: 25px;\\r\\n  color: black;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 7px;\\r\\n  padding-right: 7px;\\r\\n  padding-left: 7px;\\r\\n  cursor: pointer;\\r\\n  /* box-shadow: 1px 2px grey; */\\r\\n}\\r\\n.toolbarIcon:hover {\\r\\n  margin-top: 2px;\\r\\n  font-size: 28px;\\r\\n  color: blue;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 7px;\\r\\n  padding-right: 10px;\\r\\n  padding-left: 10px;\\r\\n  cursor: pointer;\\r\\n  border: 1px solid #f9f9f900;\\r\\n  background-color: white;\\r\\n}\\r\\n.marginsDropdownList{\\r\\n  margin-top: 8px;\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n.marginsPaging{\\r\\n  margin-top: 2px;\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n.marginsSearch{\\r\\n  /* margin-right: 10px; */\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n.toolbarCard{\\r\\n  box-shadow: 1px 1px 1px 1px grey; \\r\\n  /* margin: auto; */\\r\\n  /* height: 40px; */\\r\\n  background-color: #f9f9f9;\\r\\n  border: 1px solid rgb(212, 212, 212);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9uL2Fzc2V0bW5nL2Fzc2V0bW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZiw4QkFBOEI7QUFDaEM7QUFDQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsMkJBQTJCO0VBQzNCLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSx3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsZ0NBQWdDO0VBQ2hDLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLG9DQUFvQztBQUN0QyIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9hc3NldG1uZy9hc3NldG1uZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4udG9vbGJhckljb257XHJcbiAgZm9udC1zaXplOiAyNXB4O1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogN3B4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDdweDtcclxuICBwYWRkaW5nLWxlZnQ6IDdweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgLyogYm94LXNoYWRvdzogMXB4IDJweCBncmV5OyAqL1xyXG59XHJcbi50b29sYmFySWNvbjpob3ZlciB7XHJcbiAgbWFyZ2luLXRvcDogMnB4O1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBjb2xvcjogYmx1ZTtcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogN3B4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZjlmOWY5MDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuLm1hcmdpbnNEcm9wZG93bkxpc3R7XHJcbiAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIHBhZGRpbmctdG9wOiA3cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDdweDtcclxufVxyXG4ubWFyZ2luc1BhZ2luZ3tcclxuICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgcGFkZGluZy10b3A6IDdweDtcclxuICBwYWRkaW5nLWJvdHRvbTogN3B4O1xyXG59XHJcbi5tYXJnaW5zU2VhcmNoe1xyXG4gIC8qIG1hcmdpbi1yaWdodDogMTBweDsgKi9cclxuICBwYWRkaW5nLXRvcDogN3B4O1xyXG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XHJcbn1cclxuLnRvb2xiYXJDYXJke1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggMXB4IDFweCBncmV5OyBcclxuICAvKiBtYXJnaW46IGF1dG87ICovXHJcbiAgLyogaGVpZ2h0OiA0MHB4OyAqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIxMiwgMjEyLCAyMTIpO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EmployeeModel } from 'app/shared/models/EmployeeModel';\nimport { AssetService } from 'app/masterdata/asset/services/asset.service';\nimport { EmployeeService } from 'app/masterdata/employee/services/employee.service';\nimport { BranchService } from 'app/masterdata/branch/services/branch.service';\nimport { CompanyService } from 'app/masterdata/company/services/company.service';\nimport { ExportexcelService } from 'app/shared/services/exportexcel.service';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { AssetModel } from 'app/shared/models/AssetModel';\nimport { BranchsModel } from 'app/shared/models/BrachModel';\nimport { CompanyModel } from 'app/shared/models/CompanyModel';\nimport { AssetTypeModel } from 'app/shared/models/AssetTypeModel';\nimport { AssettypeService } from 'app/masterdata/assettype/services/assettype.service';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppstorageService } from 'app/shared/services/appstorage.service';\nimport { AssetTrackingModel } from 'app/shared/models/AssetTrackingModel';\nimport Swal from 'sweetalert2';\nimport { SweetalertService } from 'app/shared/services/sweetalert.service';\nimport { AlertService } from 'ngx-alerts';\nimport { LogsService } from 'app/shared/services/logs.service';\nimport { ShareddataService } from 'app/shared/services/shareddata.service';\nimport { UserModel } from 'app/shared/models/UserModel';\n\n@Component({\n  selector: 'app-assetmng',\n  templateUrl: './assetmng.component.html',\n  styleUrls: ['./assetmng.component.css']\n})\nexport class AssetmngComponent implements OnInit {\n\n  showByEmployees = false;\n  pageIndex: number = 1;\n  pageSize: number = 5;\n  public settings = {};\n  asset: AssetModel = {};\n  assignForm: FormGroup;\n  \n  @ViewChild('search') search: any;\n  CodeExist = false;\n  AssetTemp: any = {};\n  public temp: AssetModel[] = [];\n  public Assets: AssetModel[] = [];\n  public columns: Array<object>;\n\n  order: string = \"info.name\";\n  reverse: boolean = false;\n  sortedCollection: any[];\n  SelectedAssets: AssetModel[] = [];\n  SelectedEmployees: any = [{ empFullName: '', empHRCode: '', assets: '' }];\n  AssetTypes: AssetTypeModel[] = [];\n  Branchs: BranchsModel[] = [];\n  Employees: EmployeeModel[] = [];\n  EmployeesList: EmployeeModel[] = [];\n  Companys: CompanyModel[] = [];\n\n  AddUserLog(action: string) {\n    this.logSrv.sendUserLog(action).subscribe(res=>{\n      //console.log(res);\n      \n    });\n  }\n\n  constructor(\n    private swalSrv: SweetalertService,\n    private logSrv: LogsService,\n    private alertService: AlertService,\n    private shrdSrv: ShareddataService,\n    private astSrv: AssetService,\n    private astTypeSrv: AssettypeService,\n    private empSrv: EmployeeService,\n    private brnSrv: BranchService,\n    private comSrv: CompanyService,\n    private expExcelSrv: ExportexcelService,\n    private orderPipe: OrderPipe,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {\n    this.sortedCollection = orderPipe.transform(this.Assets, 'astDescription');\n    // ////console.log('sortedCollection....' , this.sortedCollection);\n    // for (let i = 1; i <= this.Assets.length; i++) {\n    //   this.Assets.push();\n    // }\n    this.assignForm = this.fb.group({\n      empId: ['', Validators.required],\n      empFullName: ['', Validators.required],\n      currentUserId: null,\n      assetsCurrent: [],\n      assetsNew: this.fb.array([])\n    });\n    this.onGetAllEmployees();\n    this.onGetAllAssetsTypes();\n    this.onGetAllAssets();\n    this.onGetAllBranchs();\n    this.onGetAllCompanys();\n  }\n  ngOnInit(): void {\n    this.settings = {\n      singleSelection: false,\n      idField: 'astId',\n      textField: \"astCodeDescEmp\",\n      enableCheckAll: true,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      limitSelection: -1,\n      clearSearchFilter: true,\n      maxHeight: 197,\n      itemsShowLimit: 6,\n      searchPlaceholderText: 'Search by Code / Description / Empoyee',\n      noDataAvailablePlaceholderText: 'No Data Available',\n      closeDropDownOnSelection: false,\n      showSelectedItemsAtTop: false,\n      defaultOpen: false\n    };\n\n    this.route.queryParams.subscribe(params => {\n      debugger;\n      if(params != {}){\n        this.assignForm.get('empId').setValue(params.empId);\n        this.assignForm.get('empFullName').setValue(params.empFullName);\n        this.assignForm.get('assetsCurrent').setValue(JSON.parse(params.assetsCurrent)); // incase the assets ent from the Emplyee page\n  \n          let id = params.empId;\n          debugger;\n          this.empSrv.GetEmployeeById(id).subscribe((e: EmployeeModel)=>{\n            debugger;\n            this.assignForm.get('assetsCurrent').patchValue(e.assetsCurrent);\n            debugger;\n          });\n\n       }\n    });\n  }\n\n  onSubmit(status): void {\n              debugger;\n              this.shrdSrv.getCurrentUser().subscribe((res: UserModel) =>{\n                this.assignForm.get('currentUserId').setValue(res.usrId);\n              });\n              this.astSrv.assignAssetToEmp(this.assignForm.value).subscribe((emp: EmployeeModel) => { \n                    debugger;\n                    this.swalSrv.showSwal('basic-success', \"( \" + emp.assetsCurrent.length + \" )Assets assigned successfully to: \" + emp.empFullName + \".\" );\n                    this.onGetAllAssets();\n                    this.assignForm.reset();\n                    this.onDeSelectAll();\n              });\n  }\n  onCancel() {\n    this.assignForm.reset();\n  }\n\n  // onScrap(row){\n  //   Swal.fire({\n  //     title: 'This Asset Will Be Removed from The Operation as a Scrap</h4>',\n  //     icon: 'info',\n  //     // html: ' <ul *ngFor=\" let a of assets \"> <li> a.astCode  </li>   </ul> ',\n  //     showCloseButton: true,\n  //     showCancelButton: true,\n  //     focusConfirm: false,\n  //     confirmButtonText:  '<i class=\"fa \"></i>Yes Remove',\n  //     confirmButtonAriaLabel: '',\n  //     cancelButtonText:  '<i class=\"fa \"> Cancel</i>',\n  //     cancelButtonAriaLabel: ''\n  //   }).then(res => {\n  //     if(res.value){\n        \n  //       this.astSrv.getAssetId(row.astId).subscribe((a: AssetModel) =>{\n  //           this.onGetAllAssets();\n\n  //           this.swalSrv.showSwal('basic-success', \"Asset with code( \" + a.astCode + \" ) Added to the Scrap Successfully \");\n  //           this.AddUserLog( \"Asset with code( \" + a.astCode + \" ) Added to the Scrap Successfully \");\n  //           // this.AddAssetTrackingLog(a, \"Scrap\", a.EmployeeName); \n  //           this.logSrv.sendAssetTrackingLog(a, a.EmployeeName, \"Scrap\").subscribe(logged=>{ \n              \n  //             // this.onGetAllAssets();\n  //           }); \n          \n  //       }, error => {\n  //         // this.loading = false;\n  //         if(error.message.includes('Http failure response for http://')){\n  //           this.swalSrv.showSwal('basic-error', \" Server connection Error / Data is not updated \");\n  //           this.AddUserLog( \"Server connection Error ( \" + error + \" )\" );\n  //         }\n  //       });\n\n  //     }\n  //   })\n\n  //   // \n  //   // this.astSrv.getAssetId(row.astId).subscribe(a=>{\n  //   //   // this.onGetAllAssets();\n  //   // })\n    \n  // }\n  customSearchFn(term: string, item: any) {\n    term = term.toLocaleLowerCase();\n    return item.astDescription.toLocaleLowerCase().indexOf(term) > -1 || \n    item.astCode.toLocaleLowerCase().indexOf(term) > -1;\n  }\n  createItem(item?: AssetModel): FormGroup {\n    return this.fb.group({\n      astId: item.astId,\n      astCode: item.astCode,\n      astCodeDescEmp: item.astCodeDescEmp,\n      EmployeeId: this.Assets.find(x => x.astId === item.astId).empId,\n      EmployeeName: this.Assets.find(x => x.astId === item.astId).EmployeeName\n    });\n  }\n  onChangeAssets(e) {\n    \n    const numberOfAssets = e.target.value || 0;\n    if (this.getAssetsNew.length < numberOfAssets) {\n        for (let i = this.getAssetsNew.length; i < numberOfAssets; i++) {\n            this.getAssetsNew.push(this.fb.group({\n                astCode: ['', Validators.required],\n                astDescription: ['', [Validators.required, Validators.email]]\n            }));\n        }\n    } else {\n        for (let i = this.getAssetsNew.length; i >= numberOfAssets; i--) {\n            this.getAssetsNew.removeAt(i);\n        }\n    }\n  }\n  onGetAllAssets() {\n          this.astSrv.getAllAssets().subscribe((asts: AssetModel[]) => {\n            debugger;\n            this.Assets =[];\n            asts.forEach(a=>{\n              if(!a.IsScrap){\n              this.Assets.push(a);\n              }\n            })\n            this.Assets.forEach(x => {\n              x.astCodeDescEmp = x.astCode + \" - \" + x.AssetTypeName  + \" - \" + x.astDescription + \" - \" +  x.astCircuitNumber   + \" - \" + x.astDialNumber  + \"  ( Current Emp:  \" + x.EmployeeName + \" ).\";\n            });\n            this.temp = this.Assets;  // for search\n           }, err=>{\n            this.alertService.danger('Server Error');\n           });\n  }\n  onGetAllAssetsTypes() {\n          this.astTypeSrv.getAllAssetsTypes().subscribe((astTypes: AssetTypeModel[]) => {\n                this.AssetTypes = astTypes;\n          });\n  }\n  onGetAllEmployees() {  \n         this.empSrv.getAllEmployees().subscribe((emps: EmployeeModel[]) => {\n           debugger;\n            this.Employees = emps;\n            emps.forEach(e => {\n                  const employee: EmployeeModel = { empId: 0, empFullName: '', empHRCode: '', EmpCode: '', DepartmentName: ''  };\n                  employee.empId = e.empId;\n                  employee.empFullName = e.empFullName;\n                  employee.DepartmentName = e.DepartmentName;\n                  employee.EmpCode = e.empHRCode + \" - \" + e.DepartmentName +  \" - \" + e.empFullName + \".\";\n                  if(employee.EmpCode != null) {\n                    this.EmployeesList.push(employee);\n                  }\n            });\n         });\n  }\n  onGetAllBranchs() {\n \n        this.brnSrv.getAllBranchs().subscribe((brns: BranchsModel[]) => {\n     \n             this.Branchs = brns;\n        });\n  }\n  onGetAllCompanys() {\n    //    \n          this.comSrv.getAllCompanys().subscribe((coms: CompanyModel[]) => {\n            ////console.log(this.Companys);\n            //console.log(coms);\n      //      \n            this.Companys = coms;\n           });\n  }\n  selectEvent(event) {\n    debugger;\n    this.assignForm.controls['empId'].setValue(event.empId);\n    this.assignForm.controls['empFullName'].setValue(event.empFullName);\n    this.empSrv.GetEmployeeById(event.empId).subscribe((e:EmployeeModel)=>{\n      this.assignForm.get('assetsCurrent').patchValue(e.assetsCurrent);\n    });\n  }\n  IsCircuitNumberExist() {\n\n    return this.Assets.find( ast => {\n     //  \n      if(ast.astCircuitNumber) {\n    //    //console.log(ast.astCircuitNumber)\n       return true\n      } \n      return false;\n \n     });\n \n  }\n  IsDailNumberExist() {\n\n    return this.Assets.find( ast => {\n    //  \n      if(ast.astDialNumber) {\n        //console.log(ast.astDialNumber)\n      return true\n      } \n      return false;\n\n    });\n\n  }\n  onFilterByAssetType(e) {\n    this.pageIndex = 1;\n    this.pageSize = 5;\n  \n    if(e.target.selectedOptions[0].text.toString() == 'Show All') {\n          this.showByEmployees = false;\n          this.onGetAllAssets();\n    } else if(e.target.selectedOptions[0].text.toString() == 'Show By Employees') {\n        this.showByEmployees = true;\n        this.onGetAllEmployees();\n    } else {\n          this.showByEmployees = false;\n          //  this.onGetAllAssets();\n          let val = e.target.selectedOptions[0].text.toString();\n          \n          // //console.log(Object.keys(this.temp[0]).length);\n          const value = val.toString().toLowerCase().trim();\n          \n          // get the amount of columns in the table\n          const count = Object.keys(this.temp[0]).length;\n          \n          // get the key names of each column in the dataset\n          const keys = Object.keys(this.temp[0]);\n          \n          // assign filtered matches to the active datatable\n          this.Assets = this.temp.filter(item => {\n            \n            // iterate through each row's column data\n            for (let i = 0; i < count; i++) {\n              // check for a match\n              if (\n                (item[keys[i]] &&\n                  item[keys[i]]\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(value) !== -1) ||\n                !value\n              ) {\n                // found match, return true to add to result set\n                // //console.log(item, 1);\n                return true;\n              }\n            }\n          });\n    }\n\n  }\n  public resetForm() {\n    // beacuse i need select all crickter by default when i click on reset button.\n    // this.setForm();\n    // this.multiSelect.toggleSelectAll();\n    // i try below variable isAllItemsSelected reference from your  repository but still not working\n    // this.multiSelect.isAllItemsSelected = true;\n  }\n  public onFilterChange(item: any) {\n    //console.log(item);\n    this.customSearchFn;\n  }\n  public onDropDownClose(item: any) {\n    //console.log(item);\n  }\n  public onItemSelect(item?: AssetModel) {\n    \n    //console.log('item  .. ', item);\n    this.getAssetsNew.push(this.createItem(item));\n    // this.getAssetIds.push(new FormControl(item.astId));\n    //console.log('this.getAssignForm...' ,  this.getAssignForm);\n    \n  }\n  public onDeSelect(item: any) {\n    \n    //console.log(item);\n    this.getAssetsNew.removeAt(item);\n  }\n  public onSelectAllAssets(items: any) {\n    \n    //console.log(items);\n    items.forEach(itm => {\n      this.getAssetsNew.push(this.createItem(itm));\n    });\n  }\n  onDeSelectAll(items?: any) {\n      this.getAssetsNew.value.forEach(itm => {\n            this.getAssetsNew.removeAt(itm);\n      });\n  }\n   onSelectCheckboxAST(e, ast) {\n     if(e.target.checked)\n     {\n       this.SelectedAssets.push(ast);\n       let allChecked = true;\n       this.Assets.forEach((asset, index) => {\n         var assetItemHTMLelemnt =     <HTMLInputElement> document.getElementById('assetItem--' + index);\n         if(!assetItemHTMLelemnt.checked) allChecked = false;\n         // //console.log(this.SelectedAssets);\n       });\n       if(allChecked) \n       var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"assetItemALL--\");\n       assetItemALLHTMLelemnt.checked = true;\n       // //console.log('Selected Assets:  ' ,  this.SelectedAssets);\n     }\n     else if (!e.target.checked){\n       var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"assetItemALL--\");\n       if(assetItemALLHTMLelemnt.checked) assetItemALLHTMLelemnt.checked = false;\n       this.SelectedAssets.filter((asset, selectedIndex) => {\n         if (asset.astId === ast.astId) {\n           this.SelectedAssets.splice(selectedIndex, 1);\n         }\n       });\n     }\n     // //console.log('Selected Assets:  ' ,  this.SelectedAssets);\n     // //console.log(' Assets:  ' ,  this.Assets);\n     // \n   }\n   onSelectCheckboxEMP(e, emp) {\n    if(e.target.checked)\n    {\n      if(emp.assetsCurrent) {\n        emp.assetsCurrent.forEach((a, index) =>{\n          \n             var assetIndex = \"Asset \" + (index + 1) ;\n             a = {[assetIndex]: a.astCode + \"-\" + a.astDescription };\n             Object.assign(emp, a );\n  \n        })\n      }\n      this.SelectedEmployees.push(emp);\n      let allChecked = true;\n      this.Employees.forEach((em, index) => {\n        var assetItemHTMLelemnt =     <HTMLInputElement> document.getElementById('employeeItem--' + index);\n        if(!assetItemHTMLelemnt.checked) allChecked = false;\n        // //console.log(this.SelectedAssets);\n      });\n      if(allChecked) \n      var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"employeeItemALL--\");\n      assetItemALLHTMLelemnt.checked = true;\n      // //console.log('Selected Assets:  ' ,  this.SelectedAssets);\n    }\n    else if (!e.target.checked){\n      var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"employeeItemALL--\");\n      if(assetItemALLHTMLelemnt.checked) assetItemALLHTMLelemnt.checked = false;\n      this.SelectedAssets.filter((em, selectedIndex) => {\n        if (em.empId === emp.empId) {\n          this.SelectedEmployees.splice(selectedIndex, 1);\n        }\n      });\n    }\n    // //console.log('Selected Assets:  ' ,  this.SelectedAssets);\n    // //console.log(' Assets:  ' ,  this.Assets);\n    // \n  }\n   onSelectAllCheckboxAST(e) {\n    this.SelectedAssets = [];\n    if(e.target.checked){\n        this.Assets.forEach(val => { \n          val.checkbox = true;\n          this.SelectedAssets.push(val);\n        });\n    } else if(!e.target.checked){\n      this.Assets.forEach(val => { val.checkbox = false });\n    }\n   \n   }\n   onSelectAllCheckboxEMP(e) {\n    this.SelectedEmployees = [];\n    if(e.target.checked){\n        this.Employees.forEach(val => { \n          val.checkbox = true;\n          this.SelectedEmployees.push(val);\n        });\n    } else if(!e.target.checked){\n      this.Employees.forEach(val => { val.checkbox = false });\n    }\n   \n   }\n   onExportExcel() {\n     if(this.showByEmployees){\n      this.expExcelSrv.exportAsExcelFile(this.SelectedEmployees, 'Employees');\n     } if(!this.showByEmployees){\n      this.expExcelSrv.exportAsExcelFile(this.SelectedAssets, 'Assets');\n     }\n \n   }\n   onPrintPreviewSelectedAssets() {\n     // //console.log(ast);\n     // \n     // this.bsModaleRef = this.modalService.show(AddeditasstComponent, {initialState: {ast}});\n     // this.bsModaleRef.content.onClose = (updated) => {\n     //   if (updated) {\n     //     this.onGetAllAssets();\n     //     //console.log('Edit clicked inside');\n     //   }\n     // };\n     // //console.log('Edit clicked');\n   }\n   setOrder(value: string) {\n\n     if (this.order === value) {\n       this.reverse = !this.reverse;\n     }\n \n     this.order = value;\n   }\n   onSort(event) {\n     // //console.log(event);\n   }\n   updateFilter(val: any) {\n  \n     \n     // //console.log(Object.keys(this.temp[0]).length);\n     const value = val.toString().toLowerCase().trim();\n     \n     // get the amount of columns in the table\n     const count = Object.keys(this.temp[0]).length;\n     \n     // get the key names of each column in the dataset\n     const keys = Object.keys(this.temp[0]);\n     \n     // assign filtered matches to the active datatable\n     this.Assets = this.temp.filter(item => {\n       \n       // iterate through each row's column data\n       for (let i = 0; i < count; i++) {\n         // check for a match\n         if (\n           (item[keys[i]] &&\n             item[keys[i]]\n               .toString()\n               .toLowerCase()\n               .indexOf(value) !== -1) ||\n           !value\n         ) {\n           // found match, return true to add to result set\n           // //console.log(item, 1);\n           return true;\n         }\n       }\n     });\n \n     //Whenever the filter changes, always go back to the first page\n   }\n   OnCodeChange(e) {\n     \n     //console.log(e);\n     this.CodeExist = false;\n     if (e.target.value.length >= 6) {\n       this.astSrv.GetAsssetByCode(e.target.value).subscribe(ast => {\n         if(ast) {\n           this.CodeExist = true;\n           this.AssetTemp = ast;\n         } else if (!ast) {\n           this.CodeExist = false;\n         }\n         \n         //console.log(ast);\n       });\n     }\n   \n   }\n   onBringExistingAsset() {\n     this.assignForm.patchValue(this.AssetTemp);\n     this.assignForm.controls.AssetTypes.get('asttypName').patchValue(this.AssetTemp.AssetType.asttypName);\n\n   }\n   ngAfterViewInit(): void {\n   //  \n     // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n     // Add 'implements AfterViewInit' to the class.\n     fromEvent(this.search.nativeElement, 'keydown')\n       .pipe(\n         debounceTime(550),\n         map(x => x['target']['value'])\n       )\n       .subscribe(value => {\n         this.updateFilter(value);\n       });\n   }\n   onChangeRowsPerPage(event) {\n     \n     // //console.log(event);\n     // //console.log(event.target.value);\n     this.pageSize = event.target.value;\n     this.pageIndex = 1;\n   }\n\n    get getAssignForm() { return this.assignForm.controls; }\n    get getToEmp() { return this.getAssignForm.toEmpName as FormControl; }\n    get getAssetsCurrent() { return this.getAssignForm.assetsCurrent as FormArray; }\n    get getAssetsNew() { return this.getAssignForm.assetsNew as FormArray; }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9keW5hbWljZW1haWxzL2R5bmFtaWNlbWFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { GenaricEmailModel } from 'app/shared/models/GenaricEmailModel';\nimport { GenaricemailService } from 'app/masterdata/genaricemail/service/genaricemail.service';\n\n@Component({\n  selector: 'app-dynamicemails',\n  templateUrl: './dynamicemails.component.html',\n  styleUrls: ['./dynamicemails.component.css']\n})\nexport class DynamicemailsComponent implements OnInit {\n  showEmailSection = false\n  public Emails: GenaricEmailModel[] = [];\n  employeeForm: FormGroup;\n  dataContainer = {\n    emailsINDIV: [{ emailAddress: \"\", }],\n    emailsGEN: [{ genEmailId: 0, genEmailAddress: \"\"  }],\n  }\n  onGetAllGenaricEmails() {\n    //    \n          this.gmlSrv.getAllGenaricemails().subscribe((mls: GenaricEmailModel[]) => {\n            // console.log('this.Emails....' , this.Emails);\n     //       \n            this.Emails = mls;\n           // this.temp = mls;  // for search\n            //  console.log('this.Emails....' , this.Emails);\n            //  \n           });\n  }\n  constructor(\n    private fb: FormBuilder,\n    private gmlSrv: GenaricemailService,\n    ) {\n    this.employeeForm = this.fb.group({\n      emailsINDIV: this.fb.array([]),\n      emailsGEN: this.fb.array([])\n    })\n    this.setEmails();\n    console.log(this.employeeForm.value);\n    \n    this.onGetAllGenaricEmails();\n  }\n\n  ngOnInit(): void {\n  }\n\n  Submit() {\n    \n    console.log(this.employeeForm.value);\n  }\n  showEmailSectionFn() {\n     \n    this.showEmailSection = true\n  }\n\n  onAddIndividualEmail(control) {\n     \n    control.push(\n      this.fb.group({\n        emailAddress: ['']\n      }))\n  }\n  onAddGenaricEmail(control) {\n     \n    control.push(\n      this.fb.group({\n        genEmailId: 0,\n        genEmailAddress: ['']\n      }))\n  }\n  deleteIndividualEmail(index) {\n    let control = <FormArray>this.employeeForm.controls.emailsINDIV;\n    control.removeAt(index)\n  }\n  deleteGenaricEmail(index) {\n    let control = <FormArray>this.employeeForm.controls.emailsGEN;\n    control.removeAt(index)\n  }\n  // deleteIndvAddress(control, index) {\n  //   \n  //   control.removeAt(index)\n  // }\n  setEmails() {\n    \n    let indivCtl = <FormArray>this.employeeForm.controls.emailsINDIV;\n    let genCtl = <FormArray>this.employeeForm.controls.emailsGEN;\n    this.dataContainer.emailsINDIV.forEach(x => {\n      \n      indivCtl.push(this.fb.group({\n        emailAddress: x.emailAddress\n      }));\n    });\n    this.dataContainer.emailsGEN.forEach(x => {\n      \n      genCtl.push(this.fb.group({\n        genEmailId: x.genEmailId,\n        genEmailAddress: x.genEmailAddress\n      }));\n    });\n  }\n  onSelectGenaricEmail(control, event) {\n\n    this.getGenaricEmailsForm.controls['genEmailId'].setValue(event.genEmailId);\n    this.getGenaricEmailsForm.controls['genEmailAddress'].setValue(event.genEmailAddress);\n  \n  }\n  get getIndividualEmailsForm(){\n    return this.employeeForm.get('emailsINDIV') as FormArray;\n  }\n  get getGenaricEmailsForm(){\n    return this.employeeForm.get('emailsGEN') as FormArray;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9keW5hbWljZm9ybS9keW5hbWljZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamicform',\n  templateUrl: './dynamicform.component.html',\n  styleUrls: ['./dynamicform.component.css']\n})\nexport class DynamicformComponent {\n\n  data = {\n    emails: [\n      {\n        individualEmailsTitle: \"example Email Title\",\n        individualEmailsAddress: [\n          {\n            indvAddress: \"example Email Address\",\n          }\n        ]\n      }\n      // ,{\n      //   genaricEmailsTitle: \"example Email Title Gen\",\n      //   genaricEmailsAddress: [\n      //     {\n      //       genAddress: \"example Email Address Gen\",\n      //     }\n      //   ]\n      // }\n    ]\n  }\n\n  myForm: FormGroup;\n\n  // get getMyForm() {\n  //   return this.myForm.controls;\n  // }\n  // get getMyEmails() {\n  //   return this.getMyForm.emails as FormArray;\n  // }\n\n  constructor(private fb: FormBuilder) {\n    this.myForm = this.fb.group({\n      emails: this.fb.array([])\n    })\n\n    this.setEmails();\n  }\n\n  addNewEmail() {\n     \n    let control = <FormArray>this.myForm.controls.emails;\n    control.push(\n      this.fb.group({\n        individualEmailsTitle: [''],\n        individualEmailsAddress: this.fb.array([])\n      })\n    )\n  }\n\n  deleteEmail(index) {\n    let control = <FormArray>this.myForm.controls.emails;\n    control.removeAt(index)\n  }\n\n  addNewIndvAddress(control) {\n    control.push(\n      this.fb.group({\n        projectName: ['']\n      }))\n  }\n\n  deleteIndvAddress(control, index) {\n    control.removeAt(index)\n  }\n\n\n  setEmails() {\n    \n    let control = <FormArray>this.myForm.controls.emails;\n    this.data.emails.forEach(x => {\n      \n      control.push(this.fb.group({ \n        individualEmailsTitle: x.individualEmailsTitle, \n        individualEmailsAddress: this.setIndvAddress(x) }))\n    })\n  }\n\n  setIndvAddress(x) {\n    \n    let arr = new FormArray([])\n    x.individualEmailsAddress.forEach(y => {\n      arr.push(this.fb.group({ \n        indvAddress: y.indvAddress \n      }))\n    })\n    return arr;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9lbWFpbG1uZy9lbWFpbG1uZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EmployeeModel } from 'app/shared/models/EmployeeModel';\nimport { AssetService } from 'app/masterdata/asset/services/asset.service';\nimport { EmployeeService } from 'app/masterdata/employee/services/employee.service';\nimport { BranchService } from 'app/masterdata/branch/services/branch.service';\nimport { CompanyService } from 'app/masterdata/company/services/company.service';\nimport { ExportexcelService } from 'app/shared/services/exportexcel.service';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { OrderPipe } from 'ngx-order-pipe';\nimport { BranchsModel } from 'app/shared/models/BrachModel';\nimport { CompanyModel } from 'app/shared/models/CompanyModel';\nimport { AssetTypeModel } from 'app/shared/models/AssetTypeModel';\nimport { AssettypeService } from 'app/masterdata/assettype/services/assettype.service';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { GenaricEmailModel } from 'app/shared/models/GenaricEmailModel';\nimport { GenaricemailService } from 'app/masterdata/genaricemail/service/genaricemail.service';\n\n@Component({\n  selector: 'app-emailmng',\n  templateUrl: './emailmng.component.html',\n  styleUrls: ['./emailmng.component.css']\n})\nexport class EmailmngComponent implements OnInit {\n  public settings = {};\n \n  emailForm = new FormGroup({\n    genEmailId: new FormControl(0),\n    genEmailAddress: new FormControl(''),\n    EmpGmails: new FormArray([]),\n   // empIds: new FormArray([]),\n    // currentEmployees: new FormArray([]),\n    // Employees: new FormArray([])\n  });\n\n  @ViewChild('search') search: any;\n\n  emailTemp: any = {};\n  public temp: GenaricEmailModel[] = [];\n  public Emails: GenaricEmailModel[] = [];\n\n  public columns: Array<object>;\n  pageSize: number = 10;\n  order: string = \"info.name\";\n  reverse: boolean = false;\n  sortedCollection: any[];\n  SelectedEmails: GenaricEmailModel[] = [];\n  Branchs: BranchsModel[] = [];\n  Employees: EmployeeModel[] = [];\n  EmployeesList: EmployeeModel[] = [];\n  Companys: CompanyModel[] = [];\n  \n  constructor(\n    private gmlSrv: GenaricemailService,\n    private astTypeSrv: AssettypeService,\n    private empSrv: EmployeeService,\n    private brnSrv: BranchService,\n    private comSrv: CompanyService,\n    private expExcelSrv: ExportexcelService,\n    private orderPipe: OrderPipe,\n    private fb: FormBuilder,\n  ) {\n    this.sortedCollection = orderPipe.transform(this.Emails, 'astDescription');\n    // console.log('sortedCollection....' , this.sortedCollection);\n    // for (let i = 1; i <= this.Emails.length; i++) {\n    //   this.Emails.push();\n    // }\n    this.onGetAllEmployees();\n    this.onGetAllGenaricEmails();\n    this.onGetAllBranchs();\n    this.onGetAllCompanys();\n}\n\n  ngOnInit(): void {\n    this.settings = {\n      singleSelection: false,\n      idField: 'empId',\n      textField: \"EmpData\",\n      enableCheckAll: true,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      limitSelection: -1,\n      clearSearchFilter: true,\n      maxHeight: 197,\n      itemsShowLimit: 6,\n      searchPlaceholderText: 'Search',\n      noDataAvailablePlaceholderText: 'No Data Available',\n      closeDropDownOnSelection: false,\n      showSelectedItemsAtTop: false,\n      defaultOpen: false\n    };\n        this.onGetAllGenaricEmails();\n        this.emailForm = this.fb.group({\n          genEmailId: null,\n          genEmailAddress: null,\n          EmpGmails: this.fb.array([])\n         // empIds: this.fb.array([])\n          // Employees: this.fb.array([])\n      });\n  }\n  // employee: EmployeeModel = { empId: 0, empFullName: '', Emails: []}\n  onSubmit(): void {\n \n\n    console.log(this.emailForm.value);\n    \n\n            //   this.employee.empId = this.emailForm.controls.empId.value;\n            //   this.employee.empFullName = this.emailForm.controls.empFullName.value;\n            //  this.employee.Emails = this.getEmployees.value;\n\n              this.gmlSrv.assignEmployeestoGmail(this.emailForm.value).subscribe(gmail => {\n                    \n                    this.onGetAllGenaricEmails();\n                    // this.emailForm.reset();\n                    // this.onDeSelectAll();\n\n              });\n  }\n  onCancel() {\n    this.emailForm.reset();\n }\n  customSearchFn(term: string, item: any) {\n    term = term.toLocaleLowerCase();\n    return item.astDescription.toLocaleLowerCase().indexOf(term) > -1 || \n    item.astCode.toLocaleLowerCase().indexOf(term) > -1;\n  }\n  createItem(item?: EmployeeModel): FormGroup {\n    \n    return this.fb.group({\n      empId: item.empId,\n      genEmailId: 999\n      // empFullName: item.empFullName\n      // EmployeeId: this.Emails.find(x => x.astId === item.astId).Employee.empId,\n      // EmployeeName: this.Emails.find(x => x.astId === item.astId).Employee.empFullName\n    });\n  }\n  createItemEmpId(item?: EmployeeModel): FormControl {\n //   \n var id = item.empId;\n    return this.fb.control({\n      id\n    });\n  }\n  onChangeEmails(e) {\n    \n    const numberOfEmails = e.target.value || 0;\n    if (this.getEmployees.length < numberOfEmails) {\n        for (let i = this.getEmployees.length; i < numberOfEmails; i++) {\n            this.getEmployees.push(this.fb.group({\n                astCode: ['', Validators.required],\n                astDescription: ['', [Validators.required, Validators.email]]\n            }));\n        }\n    } else {\n        for (let i = this.getEmployees.length; i >= numberOfEmails; i--) {\n            this.getEmployees.removeAt(i);\n        }\n    }\n  }\n  onGetAllGenaricEmails() {\n    //    \n          this.gmlSrv.getAllGenaricemails().subscribe((mls: GenaricEmailModel[]) => {\n            // console.log('this.Emails....' , this.Emails);\n     //       \n            this.Emails = mls;\n            this.temp = mls;  // for search\n            //  console.log('this.Emails....' , this.Emails);\n            //  \n           });\n  }\n\n  onGetAllEmployees() {\n         \n         this.empSrv.getAllEmployeesWithEmails().subscribe((emps: EmployeeModel[]) => {\n          \n            this.Employees = emps;\n            console.log( ' this.Employees....' , this.Employees);\n            debugger;\n            this.EmployeesList = [];\n          //  this.Employees = [];\n            emps.forEach(e => {\n              debugger;\n                  var employee: EmployeeModel = { empId: 0, empFullName: '', DepartmentName: '', BranchName: '', CompanyName: '', EmpData: ''   };\n                  employee.empId = e.empId;\n                  employee.EmpData = \"(\" + e.empHRCode + \" )\" + e.DepartmentName + \" - \"  + e.empFullName  + \". \"; \n                  if(employee.empFullName != null) {\n                    this.EmployeesList.push(employee);\n                 //   this.Employees.push(employee);\n                  }\n            });\n         });\n  }\n  onGetAllBranchs() {\n   //     \n        this.brnSrv.getAllBranchs().subscribe((brns: BranchsModel[]) => {\n     //        \n             this.Branchs = brns;\n        });\n  }\n  onGetAllCompanys() {\n    //    \n          this.comSrv.getAllCompanys().subscribe((coms: CompanyModel[]) => {\n            console.log(this.Companys);\n            console.log(coms);\n      //      \n            this.Companys = coms;\n           });\n  }\n  selectEmpEvent(event) {\n\n    this.emailForm.controls['genEmailId'].setValue(event.genEmailId);\n    this.emailForm.controls['genEmailAddress'].setValue(event.genEmailAddress);\n  \n  }\n\n  onFilterByAssetType(e) {\n  \n    if(e.target.selectedOptions[0].text.toString() == '--All--') {\n          this.onGetAllGenaricEmails();\n    } else {\n          //  this.onGetAllEmails();\n          let val = e.target.selectedOptions[0].text.toString();\n          \n          // console.log(Object.keys(this.temp[0]).length);\n          const value = val.toString().toLowerCase().trim();\n          \n          // get the amount of columns in the table\n          const count = Object.keys(this.temp[0]).length;\n          \n          // get the key names of each column in the dataset\n          const keys = Object.keys(this.temp[0]);\n          \n          // email filtered matches to the active datatable\n          this.Emails = this.temp.filter(item => {\n            \n            // iterate through each row's column data\n            for (let i = 0; i < count; i++) {\n              // check for a match\n              if (\n                (item[keys[i]] &&\n                  item[keys[i]]\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(value) !== -1) ||\n                !value\n              ) {\n                // found match, return true to add to result set\n                // console.log(item, 1);\n                return true;\n              }\n            }\n          });\n    }\n\n  }\n  public resetForm() {\n    // beacuse i need select all crickter by default when i click on reset button.\n    // this.setForm();\n    // this.multiSelect.toggleSelectAll();\n    // i try below variable isAllItemsSelected reference from your  repository but still not working\n    // this.multiSelect.isAllItemsSelected = true;\n  }\n  public onFilterChange(item: any) {\n    \n    console.log(item);\n    this.customSearchFn;\n  }\n  public onDropDownClose(item: any) {\n    console.log(item);\n  }\n  public onItemSelect(item?: EmployeeModel) {\n       \n    console.log('item  .. ', item);\n    this.getEmployees.push(this.createItem(item));\n    // this.getAssetIds.push(new FormControl(item.astId));\n    console.log('this.getEmailForm...' ,  this.getEmailForm);\n    \n  }\n  public onDeSelect(item: any) {\n    \n    console.log(item);\n    this.getEmployees.removeAt(item);\n    }\n\n  public onSelectAll(items: any) {\n    \n  \n    // items.forEach(itm => {\n    //   this.getEmpIds.push(this.createItemEmpId(itm));\n    // });\n    \n   \n    items.forEach(itm => {\n      this.getEmpGmails.push(this.createItem(itm));\n     \n      console.log( 'this.getEmpGmails ...' , this.getEmpGmails);\n      console.log( 'this.getEmpGmails.value ...' , this.getEmpGmails.value);\n    });\n  }\n  public onDeSelectAll(items?: any) {\n      this.getEmployees.value.forEach(itm => {\n            this.getEmployees.removeAt(itm);\n      });\n  }\n \n   onSelect(e, ast) {\n     // \n     // console.log(e);\n     if(e.target.checked)\n     {\n       this.SelectedEmails.push(ast);\n       let allChecked = true;\n       this.Emails.forEach((asset, index) => {\n         var assetItemHTMLelemnt =     <HTMLInputElement> document.getElementById('assetItem--' + index);\n         if(!assetItemHTMLelemnt.checked) allChecked = false;\n         // console.log(this.SelectedEmails);\n       });\n       if(allChecked) \n       var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"assetItemALL--\");\n       assetItemALLHTMLelemnt.checked = true;\n       // console.log('Selected Emails:  ' ,  this.SelectedEmails);\n     }\n     else if (!e.target.checked){\n       var assetItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"assetItemALL--\");\n       if(assetItemALLHTMLelemnt.checked) assetItemALLHTMLelemnt.checked = false;\n       this.SelectedEmails.filter((asset, selectedIndex) => {\n        //  if (asset.astId === ast.astId) {\n        //    this.SelectedEmails.splice(selectedIndex, 1);\n        //  }\n       });\n     }\n     // console.log('Selected Emails:  ' ,  this.SelectedEmails);\n     // console.log(' Emails:  ' ,  this.Emails);\n     // \n   }\n   onExportExcel() {\n     this.expExcelSrv.exportAsExcelFile(this.SelectedEmails, 'Hello');\n   }\n   onPrintPreviewSelectedEmails() {\n     // console.log(ast);\n     // \n     // this.bsModaleRef = this.modalService.show(AddeditasstComponent, {initialState: {ast}});\n     // this.bsModaleRef.content.onClose = (updated) => {\n     //   if (updated) {\n     //     this.onGetAllEmails();\n     //     console.log('Edit clicked inside');\n     //   }\n     // };\n     // console.log('Edit clicked');\n   }\n   setOrder(value: string) {\n     \n     if (this.order === value) {\n       this.reverse = !this.reverse;\n     }\n \n     this.order = value;\n   }\n   onSort(event) {\n     // console.log(event);\n   }\n   updateFilter(val: any) {\n  \n     \n     // console.log(Object.keys(this.temp[0]).length);\n     const value = val.toString().toLowerCase().trim();\n     \n     // get the amount of columns in the table\n     const count = Object.keys(this.temp[0]).length;\n     \n     // get the key names of each column in the dataset\n     const keys = Object.keys(this.temp[0]);\n     \n     // email filtered matches to the active datatable\n     this.Emails = this.temp.filter(item => {\n       \n       // iterate through each row's column data\n       for (let i = 0; i < count; i++) {\n         // check for a match\n         if (\n           (item[keys[i]] &&\n             item[keys[i]]\n               .toString()\n               .toLowerCase()\n               .indexOf(value) !== -1) ||\n           !value\n         ) {\n           // found match, return true to add to result set\n           // console.log(item, 1);\n           return true;\n         }\n       }\n     });\n \n     //Whenever the filter changes, always go back to the first page\n   }\n\n   onGetCurrentEmails() {\n    //  this.emailForm.patchValue(this.AssetTemp);\n    //  this.emailForm.controls.AssetTypes.get('asttypName').patchValue(this.AssetTemp.AssetType.asttypName);\n\n   }\n   ngAfterViewInit(): void {\n   //  \n     // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n     // Add 'implements AfterViewInit' to the class.\n     fromEvent(this.search.nativeElement, 'keydown')\n       .pipe(\n         debounceTime(550),\n         map(x => x['target']['value'])\n       )\n       .subscribe(value => {\n         this.updateFilter(value);\n       });\n   }\n   onChangeRowsPerPage(event) {\n     // \n     // console.log(event);\n     // console.log(event.target.value);\n     this.pageSize = event.target.value;\n   }\n\n     // convenience getters for easy access to form fields\n  // get getEmailFormTEST() { return this.emailForm; }\n   get getEmailForm() { return this.emailForm.controls; }\n   get getEmpIds() { return this.getEmailForm.empIds as FormArray; }\n   get getEmployees() { return this.getEmailForm.Employees as FormArray; }\n   get getEmpGmails() { return this.getEmailForm.EmpGmails as FormArray; }\n   \n\n // get getAssetId() { return this.getEmployees.get('astId') as FormControl; }\n  // get getAssetIds() { return this.getEmailForm.assetIds as FormArray; }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9pbnZvaWNlbGluZXMvaW52b2ljZWxpbmVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invoicelines',\n  templateUrl: './invoicelines.component.html',\n  styleUrls: ['./invoicelines.component.css']\n})\nexport class InvoicelinesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"p {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n\\r\\n.toolbarIcon{\\r\\n  font-size: 25px;\\r\\n  color: black;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 7px;\\r\\n  padding-right: 5px;\\r\\n  padding-left: 4px;\\r\\n  cursor: pointer;\\r\\n  /* box-shadow: 1px 2px grey; */\\r\\n}\\r\\n\\r\\n.toolbarIcon:hover {\\r\\n  margin-top: 2px;\\r\\n  font-size: 28px;\\r\\n  color: blue;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 7px;\\r\\n  padding-right: 7px;\\r\\n  padding-left: 5px;\\r\\n  cursor: pointer;\\r\\n  border: 1px solid #f9f9f900;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.marginsDropdownList{\\r\\n  margin-top: 11px;\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n\\r\\n.marginsPaging{\\r\\n  margin-top: 2px;\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n\\r\\n.marginsSearch{\\r\\n  /* margin-right: 10px; */\\r\\n  padding-top: 7px;\\r\\n  padding-bottom: 7px;\\r\\n}\\r\\n\\r\\n.toolbarCard{\\r\\n  box-shadow: 1px 1px 1px 1px grey; \\r\\n  margin: auto;\\r\\n  /* height: 40px; */\\r\\n  background-color: #f9f9f9;\\r\\n  border: 1px solid rgb(212, 212, 212);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9uL2ludm9pY2VtbmcvaW52b2ljZW1uZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0VBQ25COztBQUVGO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLDhCQUE4QjtBQUNoQzs7QUFDQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsMkJBQTJCO0VBQzNCLHVCQUF1QjtBQUN6Qjs7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBQ0E7RUFDRSx3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLGdDQUFnQztFQUNoQyxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixvQ0FBb0M7QUFDdEMiLCJmaWxlIjoic3JjL2FwcC9vcGVyYXRpb24vaW52b2ljZW1uZy9pbnZvaWNlbW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xyXG4gIH1cclxuXHJcbi50b29sYmFySWNvbntcclxuICBmb250LXNpemU6IDI1cHg7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XHJcbiAgcGFkZGluZy1yaWdodDogNXB4O1xyXG4gIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICAvKiBib3gtc2hhZG93OiAxcHggMnB4IGdyZXk7ICovXHJcbn1cclxuLnRvb2xiYXJJY29uOmhvdmVyIHtcclxuICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG4gIGNvbG9yOiBibHVlO1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XHJcbiAgcGFkZGluZy1yaWdodDogN3B4O1xyXG4gIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZjlmOWY5MDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuLm1hcmdpbnNEcm9wZG93bkxpc3R7XHJcbiAgbWFyZ2luLXRvcDogMTFweDtcclxuICBwYWRkaW5nLXRvcDogN3B4O1xyXG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XHJcbn1cclxuLm1hcmdpbnNQYWdpbmd7XHJcbiAgbWFyZ2luLXRvcDogMnB4O1xyXG4gIHBhZGRpbmctdG9wOiA3cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDdweDtcclxufVxyXG4ubWFyZ2luc1NlYXJjaHtcclxuICAvKiBtYXJnaW4tcmlnaHQ6IDEwcHg7ICovXHJcbiAgcGFkZGluZy10b3A6IDdweDtcclxuICBwYWRkaW5nLWJvdHRvbTogN3B4O1xyXG59XHJcbi50b29sYmFyQ2FyZHtcclxuICBib3gtc2hhZG93OiAxcHggMXB4IDFweCAxcHggZ3JleTsgXHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIC8qIGhlaWdodDogNDBweDsgKi9cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMTIsIDIxMiwgMjEyKTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SupplierService } from 'app/masterdata/supplier/service/supplier.service';\nimport { CostcenterService } from 'app/masterdata/costcenter/Services/costcenter.service';\nimport { FileService } from 'app/shared/services/downloadfile.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'ngx-alerts';\nimport { SweetalertService } from 'app/sweetalert.service';\nimport { SupplierModel } from 'app/shared/models/SupplierModel';\nimport { CostCenterModel } from 'app/shared/models/CostCenterModel';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { ItemcategoryService } from 'app/masterdata/itemscategory/service/itemcategory.service';\nimport { ItemsCategoryModel } from 'app/shared/models/ItemsCategoryModel';\nimport { InvoicemngService } from './service/invoicemng.service';\nimport { InvoicesModel } from 'app/shared/models/InvoicesModel';\nimport { ExportexcelService } from 'app/shared/services/exportexcel.service';\nimport { fromEvent } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AppstorageService } from 'app/shared/services/appstorage.service';\nimport { AuthService } from 'app/shared/authentication/service/auth.service';\nimport { ShareddataService } from 'app/shared/services/shareddata.service';\nimport { UserModel } from 'app/shared/models/UserModel';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-invoicemng',\n  templateUrl: './invoicemng.component.html',\n  styleUrls: ['./invoicemng.component.css']\n})\nexport class InvoicemngComponent implements OnInit, AfterViewInit {\n\n// invoice: InvoicesModel;\n  InvDateNgModel = \"\";\n\n  TotalInvoicesAmount=0;\n\n  totalLaptops = 0; totalDesktops = 0 ;  totalMobiles = 0; totalInvoices = 0; totalScreens = 0; totalPrinters = 0; totalServers = 0;  \n  totalDataLines = 0; selectedInvoices =0; noCompany = 0; noBranch = 0; noEmployee = 0; totalVoiceLines=0; noAssetType=0;\n\n  invoiceForm: FormGroup;\n  searchForm: FormGroup;\n  public CostCenters: CostCenterModel[] = [];\n  public Suppliers: SupplierModel[] = [];\n  public ItemsCategorys: ItemsCategoryModel[] = [];\n  public SelectedInvoices: InvoicesModel[] = [];\n  public Invoices: InvoicesModel[] = [];\n  public TempInvoices: InvoicesModel[] = [];\n  pageIndex: number = 1;\n  pageSize: number = 10;\n  public loading = false;\n  showStatistics = false;\n  order: string = \"info.name\";\n  reverse: boolean = false;\n  sortedCollection: any[];\n  @ViewChild('search') search: any;\n\n  minDate: Date = new Date('01.01.2019');\n  maxDate: Date = new Date();\n  currentDate: Date = new Date();\n  dateFrom: Date = new Date('02.01.2020');\n  dateTo: Date = new Date();\n  FromDateString = '';\n  ToDateString = '';\n\n  usr: UserModel;\n\n  constructor(\n    private sharedDataSrv: ShareddataService,\n    private strSrv: AppstorageService,\n    private sanitizer: DomSanitizer,\n    private http: HttpClient,\n    private spltSrv : SupplierService,\n    private ccSrv: CostcenterService,\n    private icSrv: ItemcategoryService,\n    private invSrv: InvoicemngService,\n    private fileService: FileService,\n    private router: Router,\n    private swalSrv: SweetalertService,\n    private alertService: AlertService,\n    private fb: FormBuilder,\n    private expExcelSrv: ExportexcelService\n  ) { \n    this.invoiceForm = this.fb.group({\n      InvoiceId: null,\n      invNumber:  [null, Validators.required],\n      invAmount:  [null, Validators.required],\n      invDate: [this.currentDate, Validators.required],\n      Remarks: null,\n      InvFile: null,\n      InvFileAttached: false,\n      invStatus: ['Paid', Validators.required],\n      ItemCategoryName: null,\n      CostCenterName: null,\n      SupplierName: null,\n      splId: [null, Validators.required],\n      CostCenterId:  [null, Validators.required],\n      icId: [0, Validators.required],\n    });\n    this.onGetAllItemsCategorys();\n    this.onGetAllCostCenters();\n    this.onGetAllSuppliers();\n    this.onGetAllInvoices();\n  }\n\n  ngOnInit(){\n    this.buildSearchForm();\n    this.setOneMonthDate();\n  }\n  setOneMonthDate(){\n     debugger;\n    let month = this.dateTo.getMonth();\n  \n    this.ToDateString = this.dateTo.getDate() + \" / \" + this.dateTo.getMonth() + \" / \" + this.dateTo.getFullYear();\n    // let pastmonth = month - 1;\n    // this.dateFrom.setMonth(pastmonth);\n    this.FromDateString = this.dateFrom.getDate() + \" / \" + this.dateFrom.getMonth() + \" / \" + this.dateFrom.getFullYear();\n\n  }\n  formatCurrency_TaxableValue(event)\n  {\n    var uy = new Intl.NumberFormat('en-US',{style: 'currency', currency:'USD'}).format(event.target.value);\n    // this.tax = event.target.value;\n    // this.taxableValue = uy;\n  }\n\n  getCurrentUser(){\n    // this.sharedDataSrv.getCurrentUser().subscribe( res=>{\n    //       \n    //       this.usr = res;\n    // })\n    this.strSrv.getUserFromStorage().subscribe(usr=>{\n      \n      this.usr = usr;\n    });\n  }\n  onUpdatestatistics() {\n      \n      this.TotalInvoicesAmount = 0;\n      this.pageIndex = 1;\n\n      this.Invoices.forEach(i=>{\n        this.TotalInvoicesAmount += i.invAmount;\n      });\n\n  }\n  onGetAllInvoices() {\n\n     this.Invoices = [];\n     this.TempInvoices = [];\n     this.loading = true;\n     debugger;\n     this.invSrv.getAllInvoices(this.dateFrom, this.dateTo).subscribe((invs: InvoicesModel[]) => {\n            debugger;\n            this.usr = this.strSrv.getUserFromStorage();\n             invs.forEach(inv=>{  \n                  if(this.usr.userRole.includes(\"IT\")){\n                    this.Invoices.push(inv);\n                //   this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Cairo\")){\n                     this.Invoices.push(inv);\n             //    this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"AirPort\") && inv.CostCenterName.includes('AirPort') ){\n                       this.Invoices.push(inv);\n             //  this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Alex\") && inv.CostCenterName.includes('Alex') ){\n                   this.Invoices.push(inv);\n            //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Alex-Port\") && inv.CostCenterName.includes('Alex-Port') ){\n                  this.Invoices.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Kader\") && inv.CostCenterName.includes('Kader') ){\n                  this.Invoices.push(inv);\n                //   this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Zegiew\") && inv.CostCenterName.includes('Zegiew') ){\n                  this.Invoices.push(inv);\n            //        this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"DMT\") && inv.CostCenterName.includes('DMT') ){\n                   this.Invoices.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"PSD\") && inv.CostCenterName.includes('PSD') ){\n                  this.Invoices.push(inv);\n                //   this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Sokhna\") && inv.CostCenterName.includes('Sokhna') ){\n                   this.Invoices.push(inv);\n                  this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Sharm\") && inv.CostCenterName.includes('Sharm') ){\n                    this.Invoices.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Safaga\") && inv.CostCenterName.includes('Safaga') ){\n                   this.Invoices.push(inv);\n                //    this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Free\") && inv.CostCenterName.includes('Free') ){\n                    this.Invoices.push(inv);\n               //     this.TempInvoices.push(inv);\n                  }\n            });\n            this.loading = false;\n            this.onUpdatestatistics();\n     }, err=>{\n      this.alertService.danger('Server Error');\n      this.loading = false;\n     });\n  \n  }\n  onGetAllSuppliers() {\n    //  \n     this.spltSrv.getAllSuppliers().subscribe((spls: SupplierModel[]) => {\n        this.Suppliers = spls;\n     });\n  }\n  onGetAllCostCenters() {\n     this.ccSrv.getAllCostCenters().subscribe((ccs: CostCenterModel[]) => {\n        let usr = this.strSrv.getUserFromStorage();\n        if(usr.userRole == \"IT\"){\n          this.CostCenters = ccs;\n        } if(usr.userRole.includes(\"Cairo\")){\n          this.CostCenters = ccs;\n        } if(usr.userRole.includes(\"Suez\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Suez')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Alex\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Alex')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Airport\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Airport')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Alex-Port\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Alex-Port')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Kader\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Kader')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Zeghiew\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Zeghiew')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Free\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Free')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"DMT\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('DMT')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"PSD\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('PSD')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Sharm\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Sharm')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Sokhna\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Sokhna')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Safaga\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Safaga')){\n              this.CostCenters.push(cc);\n            }\n          });\n        }\n \n     });\n  }\n  onGetAllItemsCategorys() {\n    //  \n     this.icSrv.getAllItemsCategorys().subscribe((ics: ItemsCategoryModel[]) => {\n    //    \n        this.ItemsCategorys = ics;\n     });\n  }\n  selectSupplierEvent(event) {\n      this.invoiceForm.controls['splId'].setValue(event.splId);\n  }\n  selectCostCenterEvent(event) {\n        this.invoiceForm.controls['CostCenterId'].setValue(event.CostCenterId);\n  }\n  onSubmit(status): void {\n    if (!this.invoiceForm.value.InvoiceId) {\n            this.loading = true;\n            let finalDate = new Date(this.getInvdate.value).toLocaleString();\n            this.invoiceForm.get('invDate').setValue(finalDate);\n            this.invSrv.addInvoice(this.invoiceForm.value).subscribe(ItemsCategoryAdded => {\n              this.alertService.success('Invoice Uploaded Successfully');\n                  this.invoiceForm.reset();\n                  // var supplierHTMLelemnt = <HTMLInputElement> document.getElementById('splId--');\n                  // supplierHTMLelemnt.value = '';\n                  this.loading = false;\n                  this.onGetAllInvoices();\n            }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n            });\n    } else if (this.invoiceForm.value.InvoiceId) {\n            \n            this.invSrv.editInvoice(this.invoiceForm.value.InvoiceId, this.invoiceForm.value).subscribe(ItemsCategoryAdded => {\n                  this.invoiceForm.reset();\n                  this.onGetAllInvoices();\n                  this.alertService.success('Invoice Changed Successfully');\n            }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n            });\n    }\n  }\n  onCancel() {\n    this.invoiceForm.reset();\n  }\n  onChangeDate(e){\n      \n      if(this.checkDateInRange(e)){\n        this.invoiceForm.get('invDate').setValue(e.target.value);\n      }\n  }\n  checkDateInRange(dateToCheck: any): boolean {\n    //Console examples\n    if(this.minDate < dateToCheck && dateToCheck < this.maxDate){\n        //console.log('the date : ', dateToCheck, ' is more than', minInput, ' is less than', maxInput);\n        return true;\n    } else {\n      return false;\n    }\n\n  }\n  fileChangeListener(event) {\n    debugger;\n    let me = this;\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.invoiceForm.get('InvFile').setValue(reader.result);\n    };\n    this.invoiceForm.get('InvFileAttached').setValue(true);\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n  //////////////////////////////////// Invoices List //////////////////////////////\n  onSelectAll(e) {\n   // \n    this.SelectedInvoices = [];\n    \n    if(e.target.checked){\n        this.Invoices.forEach(val => { \n          val.checkbox = true;\n          this.SelectedInvoices.push(val);\n        });\n    } else if(!e.target.checked){\n      this.Invoices.forEach(val => { val.checkbox = false });\n    }\n      // this.onUpdatestatistics();\n  }\n  onSelect(e, ast) {\n    // \n    // console.log(e);\n    if(e.target.checked)\n    {\n      this.SelectedInvoices.push(ast);\n      let allChecked = true;\n      this.Invoices.forEach((invoice, index) => {\n        var invoiceItemHTMLelemnt = <HTMLInputElement> document.getElementById('invoiceItem--' + index);\n        if(!invoiceItemHTMLelemnt.checked) allChecked = false;\n        // this.onUpdatestatistics();\n      });\n      if(allChecked) \n      var invoiceItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"invoiceItemALL--\");\n      invoiceItemALLHTMLelemnt.checked = true;\n      // this.onUpdatestatistics();\n    }\n    else if (!e.target.checked){\n      var invoiceItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"invoiceItemALL--\");\n      if(invoiceItemALLHTMLelemnt.checked) invoiceItemALLHTMLelemnt.checked = false;\n      this.SelectedInvoices.filter((invoice, selectedIndex) => {\n        if (invoice.InvoiceId === ast.InvoiceId) {\n          this.SelectedInvoices.splice(selectedIndex, 1);\n        //  this.onUpdatestatistics();\n        }\n      });\n    }\n   // this.onUpdatestatistics();\n  }\n  onExportExcel() {\n    if(this.SelectedInvoices.length == 0){\n      this.alertService.danger('No Invoice Selected');\n    } else{\n      this.expExcelSrv.exportAsExcelFile(this.SelectedInvoices, 'Invoices List');\n    }\n  }\n  onPrintPreviewSelectedInvoices() {\n    // console.log(ast);\n    // \n    // this.bsModaleRef = this.modalService.show(AddeditasstComponent, {initialState: {ast}});\n    // this.bsModaleRef.content.onClose = (updated) => {\n    //   if (updated) {\n    //     this.onGetAllInvoices();\n    //     console.log('Edit clicked inside');\n    //   }\n    // };\n    // console.log('Edit clicked');\n  }\n  setOrder(value: string) {\n   // \n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n\n    this.order = value;\n  }\n  onSort(event) {\n    // console.log(event);\n  }\n  onShowHideStatistics() {\n    this.showStatistics = !this.showStatistics;\n  }\n  onChangeRowsPerPage(event) {\n    this.pageSize = event.target.value;\n    this.pageIndex = 1;\n    this.onUpdatestatistics();\n  }\n  onEditInvoice(inv: InvoicesModel) {\n\n      this.invoiceForm.get('InvoiceId').patchValue(inv.InvoiceId);\n      this.invoiceForm.get('invNumber').patchValue(inv.invNumber);\n      this.invoiceForm.get('invAmount').patchValue(inv.invAmount);\n      this.invoiceForm.get('Remarks').patchValue(inv.Remarks);\n      this.invoiceForm.get('invDate').patchValue(inv.invDate);\n      this.invoiceForm.get('invStatus').patchValue(inv.invStatus);  \n      this.invoiceForm.get('icId').patchValue(inv.icId); \n      this.invoiceForm.get('ItemCategoryName').patchValue(inv.ItemCategoryName);     \n      this.invoiceForm.get('CostCenterId').patchValue(inv.CostCenterId);\n      this.invoiceForm.get('CostCenterName').patchValue(inv.CostCenterName);   \n      this.invoiceForm.get('splId').patchValue(inv.splId);\n      this.invoiceForm.get('SupplierName').patchValue(inv.SupplierName);\n      // this.invoiceForm.get('InvFile').patchValue(inv.InvFile);\n      // this.invoiceForm.get('InvFileAttached').patchValue(false);\n\n\n      \n      this.invoiceForm.patchValue(inv);\n      \n      let file = inv.InvFile.toString();\n      this.invoiceForm.get('InvFile').setValue(file);\n  \n\n  }\n  onDeleteInvoice(inv: InvoicesModel) {\n    Swal.fire({\n      title: 'Invoice # ( ' + inv.invNumber + ' ) Will be deleted permanently</h4>',\n      icon: 'info',\n      // html: ' <ul *ngFor=\" let a of assets \"> <li> a.invCode  </li>   </ul> ',\n      showCloseButton: true,\n      showCancelButton: true,\n      focusConfirm: false,\n      confirmButtonText:  '<i class=\"fa \"></i>Yes Delete It',\n      confirmButtonAriaLabel: '',\n      cancelButtonText:  '<i class=\"fa \">Cancel</i>',\n      cancelButtonAriaLabel: ''\n    }).then(res => {\n      if(res.value){\n    //    \n        this.invSrv.deleteInvoice(inv.InvoiceId).subscribe((inv: InvoicesModel) => {\n          this.alertService.success('Deleted Successfully');\n          this.onGetAllInvoices();\n        }, error => {\n          this.loading = false;\n          if(error.message.includes('Http failure response for http://')){\n            this.alertService.danger('Server error');\n          }\n        });\n      }\n    })\n  }\n  onDeleteAllSellected() {\n  //  \n    this.loading = true;\n    if(this.SelectedInvoices.length == 0) {\n   //   this.swalSrv.showSwal('basic-info', 'At leinv one invoice must be selected');\n\n    } else {\n      let ids = [];\n      this.SelectedInvoices.forEach(em => {\n        ids.push(em.InvoiceId);\n      });\n\n      Swal.fire({\n        title: this.SelectedInvoices.length + 'Invoices Will be deleted permanently</h4>',\n        icon: 'info',\n        // html: ' <ul *ngFor=\" let a of invoices \"> <li> a.invCode  </li>   </ul> ',\n        showCloseButton: true,\n        showCancelButton: true,\n        focusConfirm: false,\n        confirmButtonText:  '<i class=\"fa \"></i>Yes Delete',\n        confirmButtonAriaLabel: '',\n        cancelButtonText:  '<i class=\"fa \"> Cancel</i>',\n        cancelButtonAriaLabel: ''\n      }).then(res => {\n        if(res.value){\n     //     \n          this.invSrv.deleteSelectedInvoices(ids).subscribe((dltinv: InvoicesModel[]) => {\n            this.onGetAllInvoices();\n         //   this.swalSrv.showSwal('basic-success', \"( \" + dltAsts.length + \" ) Invoices have been deleted successfully \");\n            this.SelectedInvoices = [];\n            // this.onget();\n            this.loading = false;\n          }, error => {\n            this.loading = false;\n            if(error.message.includes('Http failure response for http://')){\n        //      this.swalSrv.showSwal('basic-error', \" Server connection Error / Data is not updated \");\n            }\n          });\n\n        }\n\n      })\n\n    }\n  }\n  downloadInvoice(invId, invNumber, SupplierName) {\n        debugger;\n        const downloadLink = document.createElement(\"a\");\n        const fileName = \"Inv-\" + invNumber + \"-\" + SupplierName +  \".pdf\";\n\n        this.invSrv.getInvoiceById(invId).subscribe((inv: InvoicesModel) => {\n           debugger;\n         downloadLink.href =   inv.InvFile;\n         downloadLink.download = fileName;\n         downloadLink.click();\n\n        });\n  }\n  /////////// Filters ////////////////////\n  buildSearchForm(): void {\n    this.searchForm = this.fb.group({\n      ItemCategoryName: new FormControl(''),\n      CostCenterName: new FormControl(''),\n      SupplierName: new FormControl('')\n    });\n   }\n  searchFilter(filters: any): void {\n     this.loading = true;\n  //   this.setOneMonthDate();\n     this.invSrv.getAllInvoices(this.dateFrom, this.dateTo).subscribe((invoices: InvoicesModel[]) => {\n         debugger;\n      this.Invoices = [];\n      this.TempInvoices = [];\n      this.usr = this.strSrv.getUserFromStorage();\n      invoices.forEach(inv=>{  \n           if(this.usr.userRole.includes(\"IT\")){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Cairo\")){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"AirPort\") && inv.CostCenterName.includes('AirPort') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Alex\") && inv.CostCenterName.includes('Alex') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Alex-Port\") && inv.CostCenterName.includes('Alex-Port') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Kader\") && inv.CostCenterName.includes('Kader') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Zegiew\") && inv.CostCenterName.includes('Zegiew') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"DMT\") && inv.CostCenterName.includes('DMT') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"PSD\") && inv.CostCenterName.includes('PSD') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Sokhna\") && inv.CostCenterName.includes('Sokhna') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Sharm\") && inv.CostCenterName.includes('Sharm') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Safaga\") && inv.CostCenterName.includes('Safaga') ){\n                this.TempInvoices.push(inv);\n           } if(this.usr.userRole.includes(\"Free\") && inv.CostCenterName.includes('Free') ){\n                this.TempInvoices.push(inv);\n           }\n     });\n     this.loading = false;\n \n     Object.keys(filters).forEach(key => filters[key] === '' ? delete filters[key] : key);\n \n     const keys = Object.keys(filters);\n     keys.forEach(k=> console.log(k))\n     const filterInvoice = invoice => keys.every(key => invoice[key] === filters[key]);\n    \n     const invs = this.TempInvoices.filter(filterInvoice);\n \n     invs.forEach(inv => {\n         let invdate = new Date(inv.invDate);\n         if(invdate > this.dateFrom && invdate < this.dateTo){\n           this.Invoices.push(inv);\n         }\n     });\n     this.loading = false;\n     this.onUpdatestatistics();\n     });\n  }\n\n  // filterUserList(filters: any): void {\n\n  // }\n\n  updateFilter(val: any) {\n    \n    if(this.TempInvoices.length > 0){\n    // console.log(Object.keys(this.temp[0]).length);\n    const value = val.toString().toLowerCase().trim();\n    // get the amount of columns in the table\n    const count = Object.keys(this.TempInvoices[0]).length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.TempInvoices[0]);\n    // assign filtered matches to the active datatable\n    this.Invoices = this.TempInvoices.filter(item => {\n      // iterate through each row's column data\n      for (let i = 0; i < count; i++) {\n        // check for a match\n        if (\n          (item[keys[i]] &&\n            item[keys[i]]\n              .toString()\n              .toLowerCase()\n              .indexOf(value) !== -1) ||\n          !value\n        ) {\n          // found match, return true to add to result set\n          // console.log(item, 1);\n          return true;\n        }\n      }\n    });\n    this.TempInvoices = this.Invoices;\n    } else {\n      this.TempInvoices = this.Invoices;\n    // console.log(Object.keys(this.temp[0]).length);\n    const value = val.toString().toLowerCase().trim();\n    // get the amount of columns in the table\n    const count = Object.keys(this.TempInvoices[0]).length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.TempInvoices[0]);\n    // assign filtered matches to the active datatable\n    this.Invoices = this.TempInvoices.filter(item => {\n      // iterate through each row's column data\n      for (let i = 0; i < count; i++) {\n        // check for a match\n        if (\n          (item[keys[i]] &&\n            item[keys[i]]\n              .toString()\n              .toLowerCase()\n              .indexOf(value) !== -1) ||\n          !value\n        ) {\n          // found match, return true to add to result set\n          // console.log(item, 1);\n          return true;\n        }\n      }\n    });\n    }\n    this.onUpdatestatistics();\n    //Whenever the filter changes, always go back to the first page\n  }\n  onFilterByCostCenter(e) {\n    \n    this.pageIndex = 1;\n    this.pageSize = 5;\n    \n    if(e.target.selectedOptions[0].text.toString() == 'Show All') {\n          this.onGetAllInvoices();\n    } else{\n            if(this.TempInvoices.length > 0){\n              let val = e.target.selectedOptions[0].text.toString().trim();\n              // console.log(Object.keys(this.temp[0]).length);\n              const value = val.toString().toLowerCase().trim();\n              // get the amount of columns in the table\n              const count = Object.keys(this.TempInvoices[0]).length;\n              // get the key names of each column in the dataset\n              const keys = Object.keys(this.TempInvoices[0]);\n              // assign filtered matches to the active datatable\n              this.Invoices = this.TempInvoices.filter(item => {\n                // iterate through each row's column data\n                for (let i = 0; i < count; i++) {\n                  // check for a match\n                  if (\n                    (item[keys[i]] &&\n                      item[keys[i]]\n                        .toString()\n                        .toLowerCase()\n                        .indexOf(value) !== -1) ||\n                    !value\n                  ) {\n                    // found match, return true to add to result set\n                    // console.log(item, 1);\n                    return true;\n                  }\n                }\n                \n                console.log(this.Invoices);\n                console.log(this.TempInvoices);\n                this.onUpdatestatistics();\n              });\n              this.TempInvoices = this.Invoices;\n            } else{\n              this.TempInvoices = this.Invoices;\n              let val = e.target.selectedOptions[0].text.toString().trim();\n              // console.log(Object.keys(this.temp[0]).length);\n              const value = val.toString().toLowerCase().trim();\n              // get the amount of columns in the table\n              const count = Object.keys(this.TempInvoices[0]).length;\n              // get the key names of each column in the dataset\n              const keys = Object.keys(this.TempInvoices[0]);\n              // assign filtered matches to the active datatable\n              this.Invoices = this.TempInvoices.filter(item => {\n                // iterate through each row's column data\n                for (let i = 0; i < count; i++) {\n                  // check for a match\n                  if (\n                    (item[keys[i]] &&\n                      item[keys[i]]\n                        .toString()\n                        .toLowerCase()\n                        .indexOf(value) !== -1) ||\n                    !value\n                  ) {\n                    // found match, return true to add to result set\n                    // console.log(item, 1);\n                    return true;\n                  }\n                }\n              });\n              this.TempInvoices = this.Invoices;\n            }\n    \n    }\n    this.onUpdatestatistics();\n  }\n  onFilterByCategory(e) {\n    \n    // if(e.target.value == null){\n    //   this.\n    // }\n    // this.pageIndex = 1;\n    // this.pageSize = 5;\n    \n    // if(e.target.selectedOptions[0].text.toString() == 'Show All') {\n    //       this.onGetAllInvoices();\n    // } else{\n    //       this.Invoices = [];\n    //       this.TempInvoices.forEach(inv =>{\n            \n    //         if(inv.ItemCategoryName == e.target.selectedOptions[0].text.toString().trim()){\n    //           this.Invoices.push(inv);\n    //         }\n    //       });\n    //       this.onUpdatestatistics();\n    //}\n\n  }\n  onFilterInvoicesByDate(e: Date){\n    this.dateFrom = new Date(e[0]);\n    this.dateTo = new Date(e[1]);\n  }\n  ngAfterViewInit(): void {\n      // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n      // Add 'implements AfterViewInit' to the class.\n      fromEvent(this.search.nativeElement, 'keydown')\n        .pipe( debounceTime(550), map(x => x['target']['value']) )\n          .subscribe(value => {\n            this.updateFilter(value);\n          });\n          this.onUpdatestatistics();\n  }\n\n  get getInvoiceForm() { return this.invoiceForm.controls; }\n  get getInvoiceId() { return this.invoiceForm.get('InvoiceId') as FormControl;   }\n  get getInvdate() {  return this.invoiceForm.get('invDate') as FormControl;  }\n  get getSupplierName() { return this.invoiceForm.get('SupplierName') as FormControl; }\n  get getInvFile() {  return this.invoiceForm.get('InvFile') as FormControl; }\n\n  IsInvFileExist(invFile) {\n    let is = false\n    if(invFile != null){\n      is = true;\n    };\n    return is;\n  }\n\n\n}\n","import {Component, Input, OnInit, AfterViewInit, ChangeDetectionStrategy, OnChanges, SimpleChanges} from '@angular/core';\n//import * as Chartist from 'app/operation/invoicemng/reports/lbd-chartMonths/node_modules/chartist';\nimport * as Chartist from 'chartist';\nimport { Router } from '@angular/router';\nimport { ChartType, LegendItem } from 'app/lbd/lbd-chart/lbd-chart.component';\n\nexport interface LegendItemBranch {\n  title: string;\n  imageClass: string;\n}\n\nexport enum ChartTypeBranch {\n  Pie,\n  Line,\n  Bar\n}\n\n// export enum ChartBy {\n//   Months,\n//   Branchs\n// }\n\n@Component({\n  selector: 'lbd-chartBranch',\n  templateUrl: './lbd-chartBranch.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LbdChartBranchComponent implements OnInit, OnChanges   {\n  ;\n  static currentId = 1;\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public subtitle: string;\n\n  @Input()\n  public chartClass: string;\n\n  // @Input()\n  // public chartBy: ChartBy;\n\n  @Input()\n  public chartTypeBranch: ChartTypeBranch;\n\n  // @Input()\n  // public chartDataForMonths: any;\n\n  @Input()\n  public chartDataForBranchs: any;\n\n\n  @Input()\n  public chartOptions: any;\n\n  @Input()\n  public chartResponsive: any[];\n\n  @Input()\n  public footerIconClass: string;\n\n  @Input()\n  public footerText: string;\n\n  @Input()\n  public legendItemsBranchs: LegendItemBranch[];\n\n  @Input()\n  public withHr: boolean;\n\n  public chartId: string;\n\n  constructor(  private router: Router) {\n  }\n\n  public ngOnInit(): void {\n   // ;\n   this.chartId = `lbd-chartBranch-${LbdChartBranchComponent.currentId++}`;\n\n  }\n\n  public ngAfterViewInit(): void {\n\n       new Chartist.Bar(`#${this.chartId}`, this.chartDataForBranchs, this.chartOptions, this.chartResponsive);\n\n        ;\n   }\n\n  ngOnChanges(changes: SimpleChanges) {\n   \n       new Chartist.Bar(`#${this.chartId}`, this.chartDataForBranchs, this.chartOptions, this.chartResponsive);   \n      ; \n\n  }\n}\n","import {Component, Input, OnInit, AfterViewInit, ChangeDetectionStrategy, OnChanges, SimpleChanges} from '@angular/core';\nimport * as Chartist from 'chartist';\nimport { Router } from '@angular/router';\n\nexport interface LegendItemMonth {\n  title: string;\n  imageClass: string;\n}\n\nexport enum ChartTypeMonth {\n  Pie,\n  Line,\n  Bar\n}\n\n@Component({\n  selector: 'lbd-chartMonth',\n  templateUrl: './lbd-chartMonth.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LbdChartMonthComponent implements OnInit, OnChanges   {\n  ;\n  static currentId = 1;\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public subtitle: string;\n\n  @Input()\n  public chartClass: string;\n\n  // @Input()\n  // public chartBy: ChartBy;\n\n  @Input()\n  public chartTypeMonth: ChartTypeMonth;\n\n  @Input()\n  public chartDataForMonths: any;\n\n  @Input()\n  public chartOptions: any;\n\n  @Input()\n  public chartResponsive: any[];\n\n  @Input()\n  public footerIconClass: string;\n\n  @Input()\n  public footerText: string;\n\n  @Input()\n  public legendItemsMonths: LegendItemMonth[];\n\n  @Input()\n  public withHr: boolean;\n\n  public chartId: string;\n\n  constructor(  private router: Router) {\n  }\n\n  public ngOnInit(): void {\n   \n    this.chartId = `lbd-chartMonth-${LbdChartMonthComponent.currentId++}`;\n    ;\n  }\n\n  public ngAfterViewInit(): void {\n\n        new Chartist.Bar(`#${this.chartId}`, this.chartDataForMonths, this.chartOptions, this.chartResponsive);\n        ;\n   }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    new Chartist.Bar(`#${this.chartId}`, this.chartDataForMonths, this.chartOptions, this.chartResponsive );\n    ;\n  }\n}\n","export default \".mypurple{\\r\\n    color: #800080 !important ;\\r\\n    /* text-emphasis-color:  purple  ; */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9uL2ludm9pY2VtbmcvcmVwb3J0cy9yZXBvcnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7SUFDMUIsb0NBQW9DO0FBQ3hDIiwiZmlsZSI6InNyYy9hcHAvb3BlcmF0aW9uL2ludm9pY2VtbmcvcmVwb3J0cy9yZXBvcnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXlwdXJwbGV7XHJcbiAgICBjb2xvcjogIzgwMDA4MCAhaW1wb3J0YW50IDtcclxuICAgIC8qIHRleHQtZW1waGFzaXMtY29sb3I6ICBwdXJwbGUgIDsgKi9cclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SupplierService } from 'app/masterdata/supplier/service/supplier.service';\nimport { CostcenterService } from 'app/masterdata/costcenter/Services/costcenter.service';\nimport { FileService } from 'app/shared/services/downloadfile.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'ngx-alerts';\nimport { SweetalertService } from 'app/sweetalert.service';\nimport { SupplierModel } from 'app/shared/models/SupplierModel';\nimport { CostCenterModel } from 'app/shared/models/CostCenterModel';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { ItemcategoryService } from 'app/masterdata/itemscategory/service/itemcategory.service';\nimport { ItemsCategoryModel } from 'app/shared/models/ItemsCategoryModel';\nimport { InvoicemngService } from '../service/invoicemng.service';\nimport { InvoicesModel } from 'app/shared/models/InvoicesModel';\nimport { ExportexcelService } from 'app/shared/services/exportexcel.service';\nimport { fromEvent } from 'rxjs';\nimport { map, debounceTime } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AppstorageService } from 'app/shared/services/appstorage.service';\nimport { AuthService } from 'app/shared/authentication/service/auth.service';\nimport { ShareddataService } from 'app/shared/services/shareddata.service';\nimport { UserModel } from 'app/shared/models/UserModel';\n\nimport { LegendItemMonth, LbdChartMonthComponent , ChartTypeMonth } from './lbd-chartMonths/lbd-chartMonth.component';     \nimport { LegendItemBranch, LbdChartBranchComponent, ChartTypeBranch } from './lbd-chartBranchs/lbd-chartBranch.component';   \nimport { now } from 'moment';\n\n\n@Component({\n  providers: [ LbdChartMonthComponent, LbdChartBranchComponent ],\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit, OnChanges   {\n\n  // public activityChartBy: ChartBy;\n  public activityChartTypeMonth: ChartTypeMonth;\n  public activityChartTypeBranch: ChartTypeBranch;\n  public activityChartDataForMonths: any;\n  public activityChartDataForBranchs: {labels: any[], series: any[]};\n  public activityChartOptions: any;\n  public activityChartResponsive: any[];\n  public activityChartLegendItemsMonth: LegendItemMonth[];\n  public activityChartLegendItemsBranchs: LegendItemBranch[];\n\n  ////////////////////\n\n  InvDateNgModel = \"\";\n\n  TotalInvoicesAmount=0;\n\n  totalLaptops = 0; totalDesktops = 0 ;  totalMobiles = 0; totalInvoices = 0; totalScreens = 0; totalPrinters = 0; totalServers = 0;  \n  totalDataLines = 0; selectedInvoices =0; noCompany = 0; noBranch = 0; noEmployee = 0; totalVoiceLines=0; noAssetType=0;\n\n  invoiceForm: FormGroup;\n  filterByMonthForm: FormGroup;\n  filterByBranchForm: FormGroup;\n  public CostCenters: CostCenterModel[] = [];\n  public Suppliers: SupplierModel[] = [];\n  public ItemsCategorys: ItemsCategoryModel[] = [];\n  public SelectedInvoices: InvoicesModel[] = [];\n  public InvoicesMonths: InvoicesModel[] = [];\n  public TempInvoicesMonths: InvoicesModel[] = [];\n  public InvoicesBranches: InvoicesModel[] = [];\n  public TempInvoicesBranches: InvoicesModel[] = [];\n  pageIndex: number = 1;\n  pageSize: number = 10;\n  public loading = false;\n  showStatistics = false;\n  order: string = \"info.name\";\n  reverse: boolean = false;\n  sortedCollection: any[];\n  @ViewChild('search') search: any;\n\n  minDate: Date = new Date('01.01.2019');\n  maxDate: Date = new Date();\n  currentDate: Date = new Date();\n  dateFrom: Date = new Date('02.01.2020');\n  dateTo: Date = new Date();\n  FromDateString = '';\n  ToDateString = '';\n\n  usr: UserModel;\n  totalByCC = 0;\n\n\n  constructor(\n    private sharedDataSrv: ShareddataService,\n    private strSrv: AppstorageService,\n    private sanitizer: DomSanitizer,\n    private http: HttpClient,\n    private spltSrv : SupplierService,\n    private ccSrv: CostcenterService,\n    private icSrv: ItemcategoryService,\n    private invSrv: InvoicemngService,\n    private fileService: FileService,\n    private router: Router,\n    private swalSrv: SweetalertService,\n    private alertService: AlertService,\n    private fb: FormBuilder,\n    private expExcelSrv: ExportexcelService\n  ) { \n    this.invoiceForm = this.fb.group({\n      InvoiceId: null,\n      invNumber:  [null, Validators.required],\n      invAmount:  [null, Validators.required],\n      invDate: [this.currentDate, Validators.required],\n      Remarks: null,\n      InvFile: null,\n      invStatus: ['Paid', Validators.required],\n      ItemCategoryName: null,\n      CostCenterName: null,\n      SupplierName: null,\n      splId: [null, Validators.required],\n      CostCenterId:  [null, Validators.required],\n      icId: [0, Validators.required],\n    });\n    this.onGetAllItemsCategorys();\n    this.onGetAllCostCenters();\n    this.onGetAllSuppliers();\n    this.onGetAllInvoices();\n\n  }\n\n  ngOnInit(){\n    this.buildFilterByBranchForm();\n    this.buildFilterbyMonthForm();\n    this.loadChartMonths();\n    this.loadChartBranchs();\n    this.setOneMonthDate();\n  }\n  ngOnChanges() {\n  }\n\n  loadChartMonths(records?: any[]){\n   \n    this.activityChartTypeMonth = ChartTypeMonth.Bar;\n\n    this.activityChartDataForMonths = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', ' Sept', ' Oct', ' Nov', ' Dec', '-', 'Total'],\n      series: records\n    };\n    debugger;\n    this.activityChartOptions = {\n      seriesBarDistance: 10,\n      axisX: {\n        showGrid: false\n      },\n      height: '245px'\n    };\n    this.activityChartResponsive = [\n      ['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]\n    ];\n\n    let cat1 = 'No-Info';\n    let cat2 = 'No-Info';\n    let cat3 = 'No-Info';\n    let cat4 = 'No-Info';\n\n    if(records != undefined && records[0] != null){ cat1 = records[0][12]; }\n    if(records != undefined && records[1] != null){ cat2 = records[1][12]; }\n    if(records != undefined && records[2] != null){ cat3 = records[2][12]; }\n    if(records != undefined && records[3] != null){ cat4 = records[3][12]; }\n    \n    this.activityChartLegendItemsMonth = [\n      { title: cat1, imageClass: 'fa fa-circle text-info' },\n      { title: cat2, imageClass: 'fa fa-circle text-danger' },\n      { title: cat3, imageClass: 'fa fa-circle text-warning' },\n      { title: cat4, imageClass: 'fa fa-circle color-purple' }\n      // color:#800080\n    ];\n  }\n  loadChartBranchs(records?){\n    debugger;\n    let cat1 = 'No Info';\n    let cat2 = 'No-Info';\n    let cat3 = 'No-Info';\n     this.activityChartTypeBranch = ChartTypeBranch.Bar;\n     this.activityChartDataForBranchs = {\n      labels: [],\n      series: [\n        // [10,10],\n        // [20,20],\n        // [30,30]\n      ]\n     };\n     if(records != undefined){\n      records.forEach((rec, index) => {\n        \n        if(!this.activityChartDataForBranchs.labels.includes(rec.ccName)){\n          this.activityChartDataForBranchs.labels.push(rec.ccName);\n        }\n      });\n     }\n     this.totalByCC = 0;\n      this.activityChartDataForBranchs.labels.forEach((cc, index) => {\n          var srs = [];\n        \n          records.forEach((rec, iCat)=>{\n            debugger;\n            cat1 = rec.catName;\n            if(rec.ccName == cc){\n              \n              srs.push(rec.catTotal);\n              this.totalByCC += rec.catTotal;\n              if(this.activityChartDataForBranchs.series.length != 0 && rec.ccName == cc ){\n                this.activityChartDataForBranchs.series[0].push(rec.catTotal);\n\n                srs = [];\n                debugger;\n              }\n            } \n          });\n          if(this.activityChartDataForBranchs.series.length == 0){\n            this.activityChartDataForBranchs.series.push(srs);\n            srs = [];\n            debugger;\n          }\n\n      });\n      \n      \n      // let lnthCC = this.activityChartDataForBranchs.labels.length;\n      // let lnthCat = records.length;\n      // let srsArray = [];\n      //     this.activityChartDataForBranchs.labels.forEach(cc=>{\n      //   srsArray.push([]);\n      // });\n      // srsArray.forEach(arr => {\n      //   debugger;\n      //   this.activityChartDataForBranchs.labels.forEach(cc=>{\n      //     arr.push(0);\n      //   });\n      // });\n      // debugger;  \n\n      // records.forEach((rec, iCat)=>{\n      //   let series: any[] = [];\n      //   debugger;\n      //   this.activityChartDataForBranchs.labels.forEach((lb, iCC) => {\n      //       if(rec.ccName == lb){\n      //                 series.push(rec.catTotal);\n      //                 if(iCC == 0){\n      //                   cat1 = rec.catName\n      //                 }\n      //                 if(iCC == 1){\n      //                   cat2 = rec.catName\n      //                 }\n      //                 if(iCC == 2){\n      //                   cat3 = rec.catName\n      //                 }\n      //                 debugger;\n      //       } \n      //   });\n      //   this.activityChartDataForBranchs.series.push(series);\n      //   debugger;\n      // });\n    //   this.activityChartDataForBranchs.series.forEach((cat: any[])=>{\n    //     debugger;\n    //     let lnthCC = this.activityChartDataForBranchs.labels.length\n    //     let lnthCat = cat.length;\n    //     if(lnthCat < lnthCC){\n    //       var i;\n    //       for (i = 0; i < lnthCat; i++) {\n    //         cat.push(0);\n    //         debugger;\n    //       }\n    //     }\n    // });\n \n\n     ////////////////////\n     this.activityChartOptions = {\n       seriesBarDistance: 10,\n       axisX: {\n         showGrid: false\n       },\n       height: '245px'\n     };\n     this.activityChartResponsive = [\n       ['screen and (max-width: 640px)', {\n         seriesBarDistance: 5,\n         axisX: {\n           labelInterpolationFnc: function (value) {\n             return value[0];\n           }\n         }\n       }]\n     ];\n     this.activityChartLegendItemsBranchs = [\n       { title: 'braaaaanch', imageClass: 'fa fa-circle text-info' },\n       { title: 'BMW 5 Series', imageClass: 'fa fa-circle text-danger' }\n     ];\n\n    // if(records != undefined && records.labels[0] != null){ cat1 = records.labels[0]; }\n    // if(records != undefined && records.labels[1] != null){ cat2 = records.labels[1]; }\n    // if(records != undefined && records.labels[2] != null){ cat3 = records.labels[2]; }\n\n    this.activityChartLegendItemsBranchs = [\n      { title: cat1, imageClass: 'fa fa-circle text-info' },\n      // { title: cat2, imageClass: 'fa fa-circle text-danger' },\n      // { title: cat3, imageClass: 'fa fa-circle text-warning' },\n\n    ];\n  }\n  loadSeriesForMonths(records?): number[]{\n  //  ;\n    let series = [0,0,0,0,0,0,0,0,0,0,0,0];\n    if(records != null){\n      series = records;\n    }\n    return series;\n  }\n  loadSeriesForBranchs(records?): String[]{\n //   ;\n    let series: String[] = [];\n    this.CostCenters.forEach(cc=>{\n   //   ;\n      series.push(cc.ccName.toString())\n    });\n     return series;\n  }\n  setOneMonthDate(){\n\n     let month = this.dateTo.getMonth();\n    //  let pastmonth = month-1;\n    //  this.dateFrom.setMonth(pastmonth);\n     this.ToDateString = this.dateTo.getDate() + \" / \" + this.dateTo.getMonth() + \" / \" + this.dateTo.getFullYear();\n     this.FromDateString = this.dateFrom.getDate() + \" / \" + this.dateFrom.getMonth() + \" / \" + this.dateFrom.getFullYear();\n\n  }\n  //////////////////////   /////////////////////////////\n\n  formatCurrency_TaxableValue(event)\n  {\n    var uy = new Intl.NumberFormat('en-US',{style: 'currency', currency:'USD'}).format(event.target.value);\n    // this.tax = event.target.value;\n    // this.taxableValue = uy;\n  }\n  getCurrentUser(){\n    // this.sharedDataSrv.getCurrentUser().subscribe( res=>{\n    //       \n    //       this.usr = res;\n    // })\n    this.strSrv.getUserFromStorage().subscribe(usr=>{\n      \n      this.usr = usr;\n    });\n  }\n  onUpdatestatistics() {\n      \n      this.TotalInvoicesAmount = 0;\n      this.pageIndex = 1;\n\n      this.InvoicesMonths.forEach(i=>{\n        this.TotalInvoicesAmount += i.invAmount;\n      });\n\n  }\n  onGetAllInvoices() {\n    \n     this.InvoicesMonths = [];\n     this.TempInvoicesMonths = [];\n     this.InvoicesBranches = [];\n     this.TempInvoicesBranches = [];\n     this.loading = true;\n     this.invSrv.getAllInvoices(this.dateFrom, this.dateTo).subscribe((invs: InvoicesModel[]) => {\n            \n            this.usr = this.strSrv.getUserFromStorage();\n             invs.forEach(inv=>{  \n                  if(this.usr.userRole.includes(\"IT\")){\n                    this.InvoicesMonths.push(inv);\n                //    this.InvoicesBranches.push(inv);\n                  } if(this.usr.userRole.includes(\"Cairo\")){\n                     this.InvoicesMonths.push(inv);\n             //    this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"AirPort\") && inv.CostCenterName.includes('AirPort') ){\n                       this.InvoicesMonths.push(inv);\n             //  this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Alex\") && inv.CostCenterName.includes('Alex') ){\n                   this.InvoicesMonths.push(inv);\n            //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Alex-Port\") && inv.CostCenterName.includes('Alex-Port') ){\n                  this.InvoicesMonths.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Kader\") && inv.CostCenterName.includes('Kader') ){\n                  this.InvoicesMonths.push(inv);\n                //   this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Zegiew\") && inv.CostCenterName.includes('Zegiew') ){\n                  this.InvoicesMonths.push(inv);\n            //        this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"DMT\") && inv.CostCenterName.includes('DMT') ){\n                   this.InvoicesMonths.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"PSD\") && inv.CostCenterName.includes('PSD') ){\n                  this.InvoicesMonths.push(inv);\n                //   this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Sokhna\") && inv.CostCenterName.includes('Sokhna') ){\n                   this.InvoicesMonths.push(inv);\n                //  this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Sharm\") && inv.CostCenterName.includes('Sharm') ){\n                    this.InvoicesMonths.push(inv);\n              //      this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Safaga\") && inv.CostCenterName.includes('Safaga') ){\n                   this.InvoicesMonths.push(inv);\n                //    this.TempInvoices.push(inv);\n                  } if(this.usr.userRole.includes(\"Free\") && inv.CostCenterName.includes('Free') ){\n                    this.InvoicesMonths.push(inv);\n               //     this.TempInvoices.push(inv);\n                  }\n            });\n            this.loading = false;\n            this.onUpdatestatistics();\n     }, err=>{\n      this.alertService.danger('Server Error');\n      this.loading = false;\n     });\n  \n  }\n  onGetAllSuppliers() {\n    //  \n     this.spltSrv.getAllSuppliers().subscribe((spls: SupplierModel[]) => {\n        this.Suppliers = spls;\n     });\n  }\n  onGetAllCostCenters() {\n     this.ccSrv.getAllCostCenters().subscribe((ccs: CostCenterModel[]) => {\n        let usr = this.strSrv.getUserFromStorage();\n        if(usr.userRole == \"IT\"){\n          this.CostCenters = ccs;\n        } if(usr.userRole.includes(\"Cairo\")){\n          this.CostCenters = ccs;\n        } if(usr.userRole.includes(\"Suez\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Suez')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Alex\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Alex')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Airport\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Airport')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Alex-Port\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Alex-Port')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Kader\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Kader')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Zeghiew\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Zeghiew')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Free\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Free')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"DMT\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('DMT')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"PSD\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('PSD')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Sharm\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Sharm')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Sokhna\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Sokhna')){\n              this.CostCenters.push(cc);\n            }\n          });\n        } if(usr.userRole.includes(\"Safaga\")){\n          ccs.forEach(cc=>{\n            if(cc.ccName.includes('Safaga')){\n              this.CostCenters.push(cc);\n            }\n          });\n        }\n \n     });\n  }\n  onGetAllItemsCategorys() {\n    //  \n     this.icSrv.getAllItemsCategorys().subscribe((ics: ItemsCategoryModel[]) => {\n    //    \n        this.ItemsCategorys = ics;\n     });\n  }\n  selectSupplierEvent(event) {\n      this.invoiceForm.controls['splId'].setValue(event.splId);\n  }\n  selectCostCenterEvent(event) {\n        this.invoiceForm.controls['CostCenterId'].setValue(event.CostCenterId);\n  }\n  onSubmit(status): void {\n    if (!this.invoiceForm.value.InvoiceId) {\n            this.loading = true;\n            let finalDate = new Date(this.getInvdate.value).toLocaleString();\n            this.invoiceForm.get('invDate').setValue(finalDate);\n            this.invSrv.addInvoice(this.invoiceForm.value).subscribe(ItemsCategoryAdded => {\n              this.alertService.success('Invoice Uploaded Successfully');\n                  this.invoiceForm.reset();\n                  // var supplierHTMLelemnt = <HTMLInputElement> document.getElementById('splId--');\n                  // supplierHTMLelemnt.value = '';\n                  this.loading = false;\n                  this.onGetAllInvoices();\n            }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n            });\n    } else if (this.invoiceForm.value.InvoiceId) {\n            \n            this.invSrv.editInvoice(this.invoiceForm.value.InvoiceId, this.invoiceForm.value).subscribe(ItemsCategoryAdded => {\n                  this.invoiceForm.reset();\n                  this.onGetAllInvoices();\n                  this.alertService.success('Invoice Changed Successfully');\n            }, error => {\n                  console.log('Data is not Imported ...' ,  error.message);\n                  this.loading = false;\n                  if(error.message.includes('Http failure response for http://')) {\n                    this.alertService.danger('Server error');\n                  }\n            });\n    }\n  }\n  onCancel() {\n    this.invoiceForm.reset();\n  }\n  onChangeDate(e){\n      \n      if(this.checkDateInRange(e)){\n        this.invoiceForm.get('invDate').setValue(e.target.value);\n      }\n  }\n  checkDateInRange(dateToCheck: any): boolean {\n    //Console examples\n    if(this.minDate < dateToCheck && dateToCheck < this.maxDate){\n        //console.log('the date : ', dateToCheck, ' is more than', minInput, ' is less than', maxInput);\n        return true;\n    } else {\n      return false;\n    }\n\n  }\n  fileChangeListener(event) {\n    let me = this;\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n     console.log( 'reader.result' ,reader.result);\n   //  this.imageCropData = reader.result;\n      //console.log( 'MY Photo'  ,  reader.result);\n      this.invoiceForm.get('InvFile').setValue(reader.result);\n      //console.log('  this.userForm.value  ', this.userForm.value);\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n  //////////////////////////////////// Invoices List //////////////////////////////\n  onSelectAll(e) {\n   // \n    this.SelectedInvoices = [];\n    \n    if(e.target.checked){\n        this.InvoicesMonths.forEach(val => { \n          val.checkbox = true;\n          this.SelectedInvoices.push(val);\n        });\n    } else if(!e.target.checked){\n      this.InvoicesMonths.forEach(val => { val.checkbox = false });\n    }\n      // this.onUpdatestatistics();\n  }\n  onSelect(e, ast) {\n    // \n    // console.log(e);\n    if(e.target.checked)\n    {\n      this.SelectedInvoices.push(ast);\n      let allChecked = true;\n      this.InvoicesMonths.forEach((invoice, index) => {\n        var invoiceItemHTMLelemnt = <HTMLInputElement> document.getElementById('invoiceItem--' + index);\n        if(!invoiceItemHTMLelemnt.checked) allChecked = false;\n        // this.onUpdatestatistics();\n      });\n      if(allChecked) \n      var invoiceItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"invoiceItemALL--\");\n      invoiceItemALLHTMLelemnt.checked = true;\n      // this.onUpdatestatistics();\n    }\n    else if (!e.target.checked){\n      var invoiceItemALLHTMLelemnt = <HTMLInputElement> document.getElementById(\"invoiceItemALL--\");\n      if(invoiceItemALLHTMLelemnt.checked) invoiceItemALLHTMLelemnt.checked = false;\n      this.SelectedInvoices.filter((invoice, selectedIndex) => {\n        if (invoice.InvoiceId === ast.InvoiceId) {\n          this.SelectedInvoices.splice(selectedIndex, 1);\n        //  this.onUpdatestatistics();\n        }\n      });\n    }\n   // this.onUpdatestatistics();\n  }\n  onExportExcel() {\n    if(this.SelectedInvoices.length == 0){\n      this.alertService.danger('No Invoice Selected');\n    } else{\n      this.expExcelSrv.exportAsExcelFile(this.SelectedInvoices, 'Invoices List');\n    }\n  }\n  onPrintPreviewSelectedInvoices() {\n    // console.log(ast);\n    // \n    // this.bsModaleRef = this.modalService.show(AddeditasstComponent, {initialState: {ast}});\n    // this.bsModaleRef.content.onClose = (updated) => {\n    //   if (updated) {\n    //     this.onGetAllInvoices();\n    //     console.log('Edit clicked inside');\n    //   }\n    // };\n    // console.log('Edit clicked');\n  }\n  setOrder(value: string) {\n   // \n    if (this.order === value) {\n      this.reverse = !this.reverse;\n    }\n\n    this.order = value;\n  }\n  onSort(event) {\n    // console.log(event);\n  }\n  onShowHideStatistics() {\n    this.showStatistics = !this.showStatistics;\n  }\n  onChangeRowsPerPage(event) {\n    this.pageSize = event.target.value;\n    this.pageIndex = 1;\n    this.onUpdatestatistics();\n  }\n  onEditInvoice(inv: InvoicesModel) {\n    \n    //   this.invoiceForm.reset();\n      // this.invoiceForm.setValue(inv);\n\n      this.invoiceForm.get('InvoiceId').patchValue(inv.InvoiceId);\n      this.invoiceForm.get('invNumber').patchValue(inv.invNumber);\n      this.invoiceForm.get('invAmount').patchValue(inv.invAmount);\n      this.invoiceForm.get('Remarks').patchValue(inv.Remarks);\n      this.invoiceForm.get('invDate').patchValue(inv.invDate);\n      this.invoiceForm.get('invStatus').patchValue(inv.invStatus);  \n      this.invoiceForm.get('icId').patchValue(inv.icId); \n      this.invoiceForm.get('ItemCategoryName').patchValue(inv.ItemCategoryName);     \n      this.invoiceForm.get('CostCenterId').patchValue(inv.CostCenterId);\n      this.invoiceForm.get('CostCenterName').patchValue(inv.CostCenterName);   \n      this.invoiceForm.get('splId').patchValue(inv.splId);\n      this.invoiceForm.get('SupplierName').patchValue(inv.SupplierName);\n      this.invoiceForm.get('InvFile').patchValue(inv.InvFile);\n      \n      this.invoiceForm.patchValue(inv);\n      \n      let file = inv.InvFile.toString();\n      this.invoiceForm.get('InvFile').setValue(file);\n  \n\n  }\n  onDeleteInvoice(inv: InvoicesModel) {\n    Swal.fire({\n      title: 'Invoice # ( ' + inv.invNumber + ' ) Will be deleted permanently</h4>',\n      icon: 'info',\n      // html: ' <ul *ngFor=\" let a of assets \"> <li> a.invCode  </li>   </ul> ',\n      showCloseButton: true,\n      showCancelButton: true,\n      focusConfirm: false,\n      confirmButtonText:  '<i class=\"fa \"></i>Yes Delete It',\n      confirmButtonAriaLabel: '',\n      cancelButtonText:  '<i class=\"fa \">Cancel</i>',\n      cancelButtonAriaLabel: ''\n    }).then(res => {\n      if(res.value){\n    //    \n        this.invSrv.deleteInvoice(inv.InvoiceId).subscribe((inv: InvoicesModel) => {\n          this.alertService.success('Deleted Successfully');\n          this.onGetAllInvoices();\n        }, error => {\n          this.loading = false;\n          if(error.message.includes('Http failure response for http://')){\n            this.alertService.danger('Server error');\n          }\n        });\n      }\n    })\n  }\n  onDeleteAllSellected() {\n  //  \n    this.loading = true;\n    if(this.SelectedInvoices.length == 0) {\n   //   this.swalSrv.showSwal('basic-info', 'At leinv one invoice must be selected');\n\n    } else {\n      let ids = [];\n      this.SelectedInvoices.forEach(em => {\n        ids.push(em.InvoiceId);\n      });\n\n      Swal.fire({\n        title: this.SelectedInvoices.length + 'Invoices Will be deleted permanently</h4>',\n        icon: 'info',\n        // html: ' <ul *ngFor=\" let a of invoices \"> <li> a.invCode  </li>   </ul> ',\n        showCloseButton: true,\n        showCancelButton: true,\n        focusConfirm: false,\n        confirmButtonText:  '<i class=\"fa \"></i>Yes Delete',\n        confirmButtonAriaLabel: '',\n        cancelButtonText:  '<i class=\"fa \"> Cancel</i>',\n        cancelButtonAriaLabel: ''\n      }).then(res => {\n        if(res.value){\n     //     \n          this.invSrv.deleteSelectedInvoices(ids).subscribe((dltinv: InvoicesModel[]) => {\n            this.onGetAllInvoices();\n         //   this.swalSrv.showSwal('basic-success', \"( \" + dltAsts.length + \" ) Invoices have been deleted successfully \");\n            this.SelectedInvoices = [];\n            // this.onget();\n            this.loading = false;\n          }, error => {\n            this.loading = false;\n            if(error.message.includes('Http failure response for http://')){\n        //      this.swalSrv.showSwal('basic-error', \" Server connection Error / Data is not updated \");\n            }\n          });\n\n        }\n\n      })\n\n    }\n  }\n  downloadInvoice(invFile, invNumber, SupplierName) {\n        const downloadLink = document.createElement(\"a\");\n        const fileName = \"Inv-\" + invNumber + \"-\" + SupplierName +  \".pdf\";\n\n        downloadLink.href = invFile;\n        downloadLink.download = fileName;\n        downloadLink.click();\n  }\n  /////////// Filters ////////////////////\n  onFilterChange(filters: any, filterBy){\n  \n   // this.setOneMonthDate();\n\n   this.loading = true;\n   this.invSrv.getAllInvoices(this.dateFrom, this.dateTo).subscribe((invoices: InvoicesModel[]) => {\n\n    this.TempInvoicesMonths = [];\n    this.TempInvoicesBranches  = [];\n\n    this.usr = this.strSrv.getUserFromStorage();\n    invoices.forEach(inv => {  \n         if(this.usr.userRole.includes(\"IT\")){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Cairo\")){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"AirPort\") && inv.CostCenterName.includes('AirPort') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Alex\") && inv.CostCenterName.includes('Alex') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Alex-Port\") && inv.CostCenterName.includes('Alex-Port') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Kader\") && inv.CostCenterName.includes('Kader') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Zegiew\") && inv.CostCenterName.includes('Zegiew') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"DMT\") && inv.CostCenterName.includes('DMT') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"PSD\") && inv.CostCenterName.includes('PSD') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Sokhna\") && inv.CostCenterName.includes('Sokhna') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Sharm\") && inv.CostCenterName.includes('Sharm') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Safaga\") && inv.CostCenterName.includes('Safaga') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         } if(this.usr.userRole.includes(\"Free\") && inv.CostCenterName.includes('Free') ){\n              this.TempInvoicesMonths.push(inv);\n              this.TempInvoicesBranches.push(inv);\n         }\n    });\n    this.loading = false;\n\n   if(filterBy == 'forBranchs'){\n         \n         this.InvoicesBranches  = [];\n         this.TempInvoicesBranches.forEach(inv =>{\n         //  ;\n           if(inv.ItemCategoryName == filters.ItemCategoryName1 || \n             inv.ItemCategoryName == filters.ItemCategoryName2 ||\n             inv.ItemCategoryName == filters.ItemCategoryName3 ||\n             inv.ItemCategoryName == filters.ItemCategoryName4 ){\n               this.InvoicesBranches.push(inv);\n             }\n         });\n         this.TempInvoicesBranches =  this.InvoicesBranches;\n         this.InvoicesBranches = [];\n         this.TempInvoicesBranches.forEach(inv => {\n           let invdate = new Date(inv.invDate);\n           if(invdate > this.dateFrom && invdate < this.dateTo){\n             this.InvoicesBranches.push(inv);\n           }\n         });      \n         if(this.activityChartDataForBranchs != null){\n          this.activityChartDataForBranchs.labels = [];\n          this.activityChartDataForBranchs.series = [];\n         }\n       //  debugger;\n         const ChartDataForBranchs = this.invSrv.calculateByCategoriesForCC(this.InvoicesBranches, this.dateFrom, this.dateTo);\n       //  debugger;\n         this.loadChartBranchs(ChartDataForBranchs);\n         this.activityChartDataForBranchs;\n\n   } else if(filterBy == 'forMonths') {\n         ;\n         this.InvoicesMonths = [];\n         this.TempInvoicesMonths.forEach(inv =>{\n           if(inv.ItemCategoryName == filters.ItemCategoryName1 || \n             inv.ItemCategoryName == filters.ItemCategoryName2 ||\n             inv.ItemCategoryName == filters.ItemCategoryName3 ||\n             inv.ItemCategoryName == filters.ItemCategoryName4 ){\n               this.InvoicesMonths.push(inv);\n             }\n         });\n         this.activityChartDataForMonths.series = [];\n         let series: any = this.invSrv.calculateByCategories(this.InvoicesMonths);\n         //debugger;\n         this.loadChartMonths(series);\n         this.activityChartDataForMonths;\n   }\n   ;\n   this.loading = false;\n   this.onUpdatestatistics();\n   });\n  }\n  buildFilterbyMonthForm(): void {\n    this.filterByMonthForm = this.fb.group({\n      ItemCategoryName1: new FormControl(''),\n      ItemCategoryName2: new FormControl(''),\n      ItemCategoryName3: new FormControl(''),\n      ItemCategoryName4: new FormControl('')\n    });\n  }\n  buildFilterByBranchForm(): void {\n    this.filterByBranchForm = this.fb.group({\n      ItemCategoryName1: new FormControl(''),\n      ItemCategoryName2: new FormControl(''),\n      ItemCategoryName3: new FormControl(''),\n      FromDate: new FormControl(''),\n      ToDate: new FormControl('')\n    });\n  }\n  onFilterInvoicesByDate(e: Date, form, chart){\n    this.dateFrom = new Date(e[0]);\n    this.dateTo = new Date(e[1]);\n    this.ToDateString = this.dateTo.getDate() + \" / \" + this.dateTo.getMonth() + \" / \" + this.dateTo.getFullYear();\n    this.FromDateString = this.dateFrom.getDate() + \" / \" + this.dateFrom.getMonth() + \" / \" + this.dateFrom.getFullYear();\n    this.onFilterChange(form, chart);\n  }\n\n  get getInvoiceForm() { return this.invoiceForm.controls; }\n  get getInvoiceId() { return this.invoiceForm.get('InvoiceId') as FormControl;   }\n  get getInvdate() {  return this.invoiceForm.get('invDate') as FormControl;  }\n  get getSupplierName() { return this.invoiceForm.get('SupplierName') as FormControl; }\n  get getInvFile() {  return this.invoiceForm.get('InvFile') as FormControl; }\n\n  IsInvFileExist(invFile) {\n    let is = false\n    if(invFile != null){\n      is = true;\n    };\n    return is;\n  }\n\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { InvoicesModel } from 'app/shared/models/InvoicesModel';\nimport { CostCenterModel } from 'app/shared/models/CostCenterModel';\n// import { LegendItem, ChartType, LbdChartComponent } from '../reports/lbd-chart/lbd-chart.component';    //lbd-chart/lbd-chart.component';      \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoicemngService implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(){\n  }\n\n  getAllInvoices(from: Date, to: Date) {\n     debugger;\n    const body = { \n      from: from,\n      to: to\n    } \n    return this.http.post(environment.apiURL + 'Invoices/GetInvoicesFromToDate', body);\n  }\n  getInvoiceById(id: number) {\n      debugger;\n     return this.http.get(environment.apiURL + 'Invoices/getInvoiceById/' + id);\n   }\n  addInvoice(body: InvoicesModel) {\n    debugger;\n    return this.http.post(environment.apiURL + 'Invoices/AddInvoices', body);\n  }\n  editInvoice(id: number, body: InvoicesModel) {\n    debugger;\n    return this.http.put(environment.apiURL + 'Invoices/' + id, body);\n  }\n  deleteInvoice(id) {\n    return this.http.delete(environment.apiURL + 'Invoices/' + id);\n  }\n  deleteSelectedInvoices(body) {\n    debugger;\n    return this.http.post(environment.apiURL + 'Invoices/DeleteSelectedInvoices/', body );\n  }\n  invoices: InvoicesModel[];\n  calculateByCategories(invs: InvoicesModel[]){\n    this.invoices = invs;\n    let JanTotal = 0; let FebTotal = 0; let MarTotal = 0; let AprTotal = 0; let MaiTotal = 0; let JunTotal = 0; \n    let JulTotal = 0; let AugTotal = 0; let SepTotal = 0; let OctTotal = 0; let NovTotal = 0 ; let DecTotal = 0;\n    const series = [];\n    const categories = [];\n\n    invs.forEach((inv, index) => {\n     // debugger;\n      if(!categories.includes(inv.ItemCategoryName)){\n\n        categories.push(inv.ItemCategoryName);\n        // debugger;\n        JanTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '01');\n        FebTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '02');\n        MarTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '03');\n        AprTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '04');\n        MaiTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '05');\n        JunTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '06');\n        JulTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '07');\n        AugTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '08');\n        SepTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '09');\n        OctTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '10');\n        NovTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '11');\n        DecTotal += this.CalculateMonthTotalByCategory(inv.ItemCategoryName, '12');\n        let Total = JanTotal + FebTotal + MarTotal + AprTotal + MaiTotal + MaiTotal + JunTotal + JunTotal + JulTotal + AugTotal +  SepTotal +  OctTotal + NovTotal + DecTotal ;\n\n        series.push([ JanTotal, FebTotal, MarTotal, AprTotal, MaiTotal, JunTotal, JulTotal, AugTotal, SepTotal, OctTotal, NovTotal, DecTotal, inv.ItemCategoryName, Total ]);\n\n        JanTotal = 0; FebTotal = 0; MarTotal = 0; AprTotal = 0; MaiTotal = 0; JunTotal = 0; \n        JulTotal = 0; AugTotal = 0; SepTotal = 0; OctTotal = 0; NovTotal = 0 ; DecTotal = 0;\n     \n      } \n    });\n    return series;\n  }\n  CalculateMonthTotalByCategory(cat, month: String): number{\n    let amount = 0;\n    this.invoices.forEach(inv =>{\n      if(inv.ItemCategoryName == cat){\n        let invdate = new Date(inv.invDate);\n        const invMonth = (\"0\" + (invdate.getMonth() + 1)).slice(-2);\n        if(inv.invAmount !== undefined && invMonth == month){\n            amount += inv.invAmount;\n        }\n      }\n    });\n    return amount;\n  }\n  /////////// by Cost Center ///////////\n\n  calculateByCategoriesForCC(invs: InvoicesModel[], from, to){\n    this.invoices = invs;\n    const records = []; \n\n    invs.forEach((inv: InvoicesModel, index) => {\n        let record = { catName: '', ccName: '', catTotal: 0 }; \n\n        record.catTotal = this.CalculateCCTotalByCategory(inv.ItemCategoryName, inv.CostCenterName, from, to);\n        record.catName = inv.ItemCategoryName;\n        record.ccName = inv.CostCenterName;\n        if((!records.some((item) => item.ccName == inv.CostCenterName)) || (!records.some((item) => item.catName == inv.ItemCategoryName)) ){\n          records.push(record);\n        }\n    });\n  //  debugger;\n    return records;\n  }\n\n  CalculateCCTotalByCategory(cat, cc, from,to): number{\n    let amount = 0;\n    this.invoices.forEach((inv: InvoicesModel) =>{\n      if(inv.ItemCategoryName == cat && inv.CostCenterName == cc){\n        let invdate = new Date(inv.invDate);\n        if(inv.CostCenterName === cc  && invdate >= from && invdate <= to){\n            amount += inv.invAmount;\n        }\n      }\n    });\n    return amount;\n  }\n}\n","export default \"p {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9uL211bGlwbGVzZWxlY3Rib3gvbXVsaXBsZXNlbGVjdGJveC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvb3BlcmF0aW9uL211bGlwbGVzZWxlY3Rib3gvbXVsaXBsZXNlbGVjdGJveC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgICBmb250LWZhbWlseTogTGF0bztcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mulipleselectbox',\n  templateUrl: './mulipleselectbox.component.html',\n  styleUrls: ['./mulipleselectbox.component.css']\n})\nexport class MulipleselectboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  name = 'Bakkar';\n\n  list1 = [\n    { text: 'item 1', selected: false },\n    { text: 'item 2', selected: false },\n    { text: 'item 3', selected: false },\n    { text: 'item 4', selected: false },\n    { text: 'item 5', selected: false }\n  ];\n  list2 = [\n    { text: 'item 6', selected: false },\n    { text: 'item 7', selected: false }\n  ];\n\n  public toggleSelection(item, list) {\n    item.selected = !item.selected;\n  }\n\n  public moveSelected(direction) {\n    if (direction === 'left') {\n      this.list2.forEach(item => {\n        if (item.selected) {\n          this.list1.push(item);\n        }\n      });\n      this.list2 = this.list2.filter(i => !i.selected);\n    } else {\n      this.list1.forEach(item => {\n        if (item.selected) {\n          this.list2.push(item);\n        }\n      });\n      this.list1 = this.list1.filter(i => !i.selected);\n    }\n  }\n\n  public moveAll(direction) {\n    if (direction === 'left') {\n      this.list1 = [...this.list1, ...this.list2];\n      this.list2 = [];\n    } else {\n      this.list2 = [...this.list2, ...this.list1];\n      this.list1 = [];\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssetmngComponent } from './assetmng/assetmng.component';\nimport { InvoicemngComponent } from './invoicemng/invoicemng.component';\nimport { RequestmngComponent } from './requestmng/requestmng.component';\nimport { EmailmngComponent } from './emailmng/emailmng.component';\nimport { DynamicformComponent } from './dynamicform/dynamicform.component';\nimport { DynamicemailsComponent } from './dynamicemails/dynamicemails.component';\nimport { UploadimgComponent } from './uploadimg/uploadimg.component';\nimport { TestloginComponent } from './testlogin/testlogin.component';\nimport { AuthGuard } from 'app/shared/authentication/service/auth.guard';\nimport { MultiSelectComponent } from 'ng-multiselect-dropdown';\nimport { MulipleselectboxComponent } from './mulipleselectbox/mulipleselectbox.component';\n\nimport { TestautocompleteComponent } from './testautocomplete/testautocomplete.component';\n//import { SearchpageComponent } from './searchpage/searchpage.component';\nimport { InvoicelinesComponent } from './invoicelines/invoicelines.component';\nimport { ReportsComponent } from './invoicemng/reports/reports.component';\n// import { LbdChartMonthComponent } from './invoicemng/reports/lbd-chartMonths/lbd-chartMonth.component';\n// import { LbdChartBranchComponent } from './invoicemng/reports/lbd-chartBranchs/lbd-chartBranch.component';\n// import { DashboardComponent } from 'app/dashboard/dashboard.component';\n//import { InvoicedashboardComponent } from './invoicedashboard/invoicedashboard.component';\n\n\nconst routes: Routes = [];\n\nexport const OperationRoutes: Routes = [{\n  path: '',\n  children: [\n      {\n        path: 'assetmng',\n        canActivate: [AuthGuard],\n        component: AssetmngComponent\n      },{\n        path: 'reports',\n      //  canActivate: [AuthGuard],\n        component: ReportsComponent\n      // },{\n      //   path: 'Invoicedashboard',\n      //   component: InvoicedashboardComponent\n      },{\n        path: 'invoicelines',\n      //  canActivate: [AuthGuard],\n        component: InvoicelinesComponent\n      },{\n        path: 'invoicemng',\n        canActivate: [AuthGuard],\n        component: InvoicemngComponent\n      },{\n        path: 'requestmng',\n        canActivate: [AuthGuard],\n        component: RequestmngComponent\n      },{\n        path: 'emailmng',\n        canActivate: [AuthGuard],  \n        component: EmailmngComponent\n      },{\n        path: 'dynamicform',\n        canActivate: [AuthGuard],  \n        component: DynamicformComponent\n      },{\n        path: 'dynamicemails',\n        canActivate: [AuthGuard],  \n        component: DynamicemailsComponent\n      },{\n        path: 'uploadimg',\n        canActivate: [AuthGuard],  \n        component: UploadimgComponent\n      },{\n        path: 'testlogin',\n        canActivate: [AuthGuard],\n        component: TestloginComponent\n      },{\n        path: 'mulipleselectbox',\n        canActivate: [AuthGuard],  \n        component: MulipleselectboxComponent\n      },{\n        path: 'testautocomplete',\n        canActivate: [AuthGuard],  \n        component: TestautocompleteComponent\n      \n      }\n      \n      // ,{\n      //   path: 'searchpage',\n      //   component: SearchpageComponent\n      // }\n  \n  ]\n}];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OperationRoutes } from './operation-routing';\nimport { AssetmngComponent } from './assetmng/assetmng.component';\nimport { InvoicemngComponent } from './invoicemng/invoicemng.component';\nimport { RequestmngComponent } from './requestmng/requestmng.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgxAutocompleteModule } from 'ngx-angular-autocomplete';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OrderModule } from 'ngx-order-pipe';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { AlertModule } from 'ngx-alerts';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { EmailmngComponent } from './emailmng/emailmng.component';\nimport { DynamicformComponent } from './dynamicform/dynamicform.component';\nimport { DynamicemailsComponent } from './dynamicemails/dynamicemails.component';\nimport { UploadimgComponent } from './uploadimg/uploadimg.component';\n// import { ImageCropperComponent } from 'ngx-img-cropper';\nimport { TestloginComponent } from './testlogin/testlogin.component';\nimport { MulipleselectboxComponent } from './mulipleselectbox/mulipleselectbox.component';\nimport { TestautocompleteComponent } from './testautocomplete/testautocomplete.component';\nimport { DatepickerModule, BsDatepickerModule  } from 'ngx-bootstrap/datepicker';\n//import { SearchpageComponent } from './searchpage/searchpage.component';\nimport { InvoicelinesComponent } from './invoicelines/invoicelines.component';\nimport { ReportsComponent } from './invoicemng/reports/reports.component';\nimport { LbdChartMonthComponent } from './invoicemng/reports/lbd-chartMonths/lbd-chartMonth.component';\nimport { LbdChartBranchComponent } from './invoicemng/reports/lbd-chartBranchs/lbd-chartBranch.component';\n//import { InvoicedashboardComponent } from './invoicedashboard/invoicedashboard.component';\n// import { DatafilterPipe } from 'app/shared/pipes/datafilter.pipe';\n\n\n@NgModule({\n  declarations: [ \n    LbdChartMonthComponent,\n    LbdChartBranchComponent,\n    AssetmngComponent, \n    InvoicemngComponent, \n    RequestmngComponent, \n    EmailmngComponent, \n    DynamicformComponent, \n    DynamicemailsComponent, \n    UploadimgComponent, \n    TestloginComponent, \n    MulipleselectboxComponent, \n    TestautocompleteComponent, InvoicelinesComponent, ReportsComponent\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule,\n    NgSelectModule,\n    NgxPrintModule,\n    NgxAutocompleteModule,\n    NgxPaginationModule,\n    OrderModule,\n    CommonModule,\n    RouterModule.forChild(OperationRoutes),\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\n        backdropBackgroundColour: 'rgba(0,0,0,0.1)', \n        backdropBorderRadius: '4px',\n        primaryColour: '#ffffff', \n        secondaryColour: '#ffffff', \n        tertiaryColour: '#ffffff'\n    }),\n    // Specify your library as an import (set timeout to -1 for unlimited timeout, the message can only be closed by the user clicking on it)\n    AlertModule.forRoot({maxMessages: 5, timeout: 5000, position: 'right'}),\n    ModalModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot() \n  ]\n})\nexport class OperationModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi9yZXF1ZXN0bW5nL3JlcXVlc3RtbmcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-requestmng',\n  templateUrl: './requestmng.component.html',\n  styleUrls: ['./requestmng.component.css']\n})\nexport class RequestmngComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"p {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9uL3Rlc3RhdXRvY29tcGxldGUvdGVzdGF1dG9jb21wbGV0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvb3BlcmF0aW9uL3Rlc3RhdXRvY29tcGxldGUvdGVzdGF1dG9jb21wbGV0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgICBmb250LWZhbWlseTogTGF0bztcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testautocomplete',\n  templateUrl: './testautocomplete.component.html',\n  styleUrls: ['./testautocomplete.component.css']\n})\nexport class TestautocompleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  title = \"Ngx Angular AutoComplete\";\n  selected_employee: any ;\n  public employees = [\n    {\n      id: 1,\n      name: \"Byram\",\n      gender: \"Male\"\n    },\n    {\n      id: 2,\n      name: \"Jeniffer\",\n      gender: \"Female\"\n    },\n    {\n      id: 3,\n      name: \"Gerda\",\n      gender: \"Female\"\n    },\n    {\n      id: 4,\n      name: \"Ferrell\",\n      gender: \"Male\"\n    },\n    {\n      id: 5,\n      name: \"Rowe\",\n      gender: \"Female\"\n    },\n    {\n      id: 6,\n      name: \"Josephine\",\n      gender: \"Female\"\n    },\n    {\n      id: 7,\n      name: \"Alfons\",\n      gender: \"Male\"\n    },\n    {\n      id: 8,\n      name: \"Rycca\",\n      gender: \"Female\"\n    },\n    {\n      id: 9,\n      name: \"Mandy\",\n      gender: \"Female\"\n    },\n    {\n      id: 10,\n      name: \"Bunni\",\n      gender: \"Female\"\n    },\n    {\n      id: 11,\n      name: \"Stepha\",\n      gender: \"Female\"\n    },\n    {\n      id: 12,\n      name: \"Pete\",\n      gender: \"Male\"\n    },\n    {\n      id: 13,\n      name: \"Keary\",\n      gender: \"Male\"\n    },\n    {\n      id: 14,\n      name: \"Esme\",\n      gender: \"Female\"\n    },\n    {\n      id: 15,\n      name: \"Juieta\",\n      gender: \"Female\"\n    }\n  ];\n\n  selectEvent(event) {\n    this.selected_employee = JSON.stringify(event)\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbi90ZXN0bG9naW4vdGVzdGxvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testlogin',\n  templateUrl: './testlogin.component.html',\n  styleUrls: ['./testlogin.component.css']\n})\nexport class TestloginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SweetalertService {\n\n  constructor() { }\n}\n"],"sourceRoot":"webpack:///"}